{"version":3,"sources":["webpack:///./src/api/config.js","webpack:///./src/api/race-for-seats.js","webpack:///./src/api/race-for-votes.js","webpack:///./src/api/turnout.js","webpack:///./src/api/spoilt.js","webpack:///./src/api/prog-votescount.js","webpack:///./src/api/index.js","webpack:///./src/config/index.js","webpack:///./src/events/index.js","webpack:///./src/utils/index.js"],"names":["client","ApolloClient","link","bundle_esm","uri","useGETForQueries","headers","Content-Type","cache","inMemoryCache","getSeatsData","options","eventDescription","query","gql","_templateObject","_templateObject2","provinceName","getVotesDataForComparation","race_for_votes_templateObject","race_for_votes_templateObject2","muniCode","_templateObject3","_templateObject4","iecId","getVotesDataM","_templateObject5","_templateObject6","_templateObject7","_templateObject8","getMainParties","_templateObject9","_templateObject10","_templateObject11","getTurnoutData","turnout_templateObject","turnout_templateObject2","muniRegName","turnout_templateObject3","getTurnoutDataForAllEvents","turnout_templateObject4","turnout_templateObject5","turnout_templateObject6","turnout_templateObject7","getSpoiltData","spoilt_templateObject","spoilt_templateObject2","spoilt_templateObject3","spoilt_templateObject4","getProgressVotesCount","prog_votescount_templateObject","prog_votescount_templateObject2","prog_votescount_templateObject3","prog_votescount_templateObject4","getElectionEvents","api_templateObject","getPartyColors","api_templateObject2","getProvincesData","name","abbreviation","munis","muniName","getMetrosData","__webpack_exports__","DOMAIN","REGION_CHANGE","CHART_PREVIEW","MAP_PREVIEW","QUICK_RESULTS_PREVIEW","EXPORT_PNG","__webpack_require__","d","parseVotesData","parseVotesComparationData","parseProgressVotesCount","parseMainPartyData","parseSeatsData","parseTurnoutData","parseTurnoutDataForAllEvents","parseSpoiltVotesData","getRegionName","getSubRegionName","getNationOrProvinceName","createTooltip","getMunicipalityCode","fixMapLabelIntersect","triggerCustomEvent","d3__WEBPACK_IMPORTED_MODULE_0__","calcPercent","a","b","toFixed","data","props","firstEdge","regionType","console","nodeData","results","percOfVotes","node","el","validVotes","partyInfo","partyfilter_edges","edges","edge","partyResults","result","partyAbbr","percent","totalCount","count","locationToMainParty","partyName","map","seats","numParties","locationToTurnout","percVoterTurnout","state","beautifiedMuniName","properties","SPROVINCE","className","document","d3","i","labelElements","regions","overlapCnt","length","j","rect1","rect2","bottom","eventName","eventParam","event","CustomEvent","detail"],"mappings":"qVAOMA,EAAS,IAAAC,EAAA,EAAiB,CAC5BC,KAAM,IAAAC,EAAA,EAAa,CAAEC,IAJzB,oCAIuCC,kBAAhB,EAAwCC,QAAS,CAACC,eADzC,yBAE5BC,MAAO,IAFXC,EAAA,49CCHO,SAAAC,EAAAC,GACH,IAAIC,EAAmBD,EAAvBC,iBACA,GAAAA,EAEA,kBAAID,aACKX,QAAa,CAClBa,MAAOC,IAAFC,IADPH,MA8BAA,GADAA,GADAA,EAAmBA,qBAAnBA,eACmBA,mBAAnBA,eACmBA,mBAAnBA,cACOZ,QAAa,CAClBa,MAAOC,IAAFE,IAEoCL,EAFpCM,aADPL,oxPCrCC,SAAAM,EAAAP,GACL,eAAIA,aACF,OAAOX,QAAa,CAClBa,MAAOC,IAAFK,OA4BF,eAAIR,aACT,OAAOX,QAAa,CAClBa,MAAOC,IAAFM,IAGgBT,EAJvBM,gBA+BK,mBAAIN,aAAsC,CAC/C,IAAIU,EAAWV,YAAoBA,wBAAnC,GAEA,OAAOX,QAAa,CAClBa,MAAOC,IAAFQ,IAGyBX,EAHzBM,aADPI,KAoCK,yBAAIV,aACFX,QAAa,CAClBa,MAAOC,IAAFS,IAGiBZ,EAHjBa,MAIkCb,EALzCU,iBADK,EAmCF,SAAAI,EAAAd,GACH,IAAIC,EAAmBD,EAAvBC,iBACA,GAAAA,EAAA,CAEA,eAAID,aACF,OAAOX,QAAa,CAClBa,MAAOC,IAAFY,IADPd,KAgCK,eAAID,aACT,OAAOX,QAAa,CAClBa,MAAOC,IAAFa,IAAAf,EAIgBD,EALvBM,gBAgCK,mBAAIN,aAAsC,CAC/C,IAAIU,EAAWV,YAAoBA,wBAAnC,GAEA,OAAOX,QAAa,CAClBa,MAAOC,IAAFc,IAAAhB,EAIyBD,EAJzBM,aADPI,KAkCK,yBAAIV,aACFX,QAAa,CAClBa,MAAOC,IAAFe,IAAAjB,EAIiBD,EAJjBa,MAKkCb,EANzCU,iBADK,GAyIF,SAAAS,EAAAnB,GACL,IAAIC,EAAmBD,EAAvBC,iBACA,GAAAA,EAAA,CAEA,eAAID,aACF,OAAOX,QAAa,CAClBa,MAAOC,IAAFiB,IADPnB,KA0BK,eAAID,aACT,OAAOX,QAAa,CAClBa,MAAOC,IAAFkB,IAAApB,EAIyBD,EALhCM,gBA6BK,mBAAIN,aAAsC,CAC7BA,wBAAlB,GACE,OAAOX,QAAa,CAClBa,MAAOC,IAAFmB,IAAArB,EAI2CD,EAJ3CM,aAKmCN,EAN1CU,q8FC5bC,SAAAa,EAAAvB,GACL,IAAIC,EAAmBD,EAAvBC,iBACA,GAAAA,EAAA,CAEA,eAAID,aACF,OAAOX,QAAa,CAClBa,MAAOC,IAAFqB,IADPvB,KAmBK,eAAID,aACT,OAAOX,QAAa,CAClBa,MAAOC,IAAFsB,IAAAxB,EAIyBD,EALhCM,gBAqBK,mBAAIN,aAAsC,CAC/C,IAAI0B,EAAc1B,wBAAlB,GACE,OAAOX,QAAa,CAClBa,MAAOC,IAAFwB,IAAA1B,EADPyB,OAqBC,SAAAE,EAAA5B,GACL,eAAIA,aACF,OAAOX,QAAa,CAClBa,MAAOC,IAAF0B,OAeF,eAAI7B,aACT,OAAOX,QAAa,CAClBa,MAAOC,IAAF2B,IAGgB9B,EAJvBM,gBAkBK,mBAAIN,aAAsC,CAC7C,IAAIU,EAAWV,YAAoBA,wBAAnC,GAEA,OAAOX,QAAa,CAClBa,MAAOC,IAAF4B,IAG2B/B,EAH3BM,aADPI,KAmBG,yBAAIV,aACAX,QAAa,CAClBa,MAAOC,IAAF6B,IAGmBhC,EAHnBa,MAIoCb,EAL3CU,iBADG,oqEChIF,SAAAuB,EAAAjC,GACL,IAAIC,EAAmBD,EAAvBC,iBACA,GAAAA,EAAA,CAEA,eAAID,aACF,OAAOX,QAAa,CAClBa,MAAOC,IAAF+B,IADPjC,KAqBK,eAAID,aACT,OAAOX,QAAa,CAClBa,MAAOC,IAAFgC,IAAAlC,EAIgBD,EALvBM,gBAsBK,mBAAIN,aAAsC,CAC7C,IAAIU,EAAWV,YAAoBA,wBAAnC,GAEA,OAAOX,QAAa,CAClBa,MAAOC,IAAFiC,IAAAnC,EAI2BD,EAJ3BM,aADPI,KAwBG,yBAAIV,aACAX,QAAa,CAClBa,MAAOC,IAAFkC,IAAApC,EAImBD,EAJnBa,MAKoCb,EAN3CU,iBADG,8kDC5EJ,SAAA4B,EAAAtC,GACH,IAAIC,EAAmBD,EAAvBC,iBACA,GAAAA,EAAA,CAEA,eAAID,aACF,OAAOX,QAAa,CAClBa,MAAOC,IAAFoC,IADPtC,KAgBK,eAAID,aACT,OAAOX,QAAa,CAClBa,MAAOC,IAAFqC,IAAAvC,EAIgBD,EALvBM,gBAiBK,mBAAIN,aAAsC,CAC/C,IAAIU,EAAWV,YAAoBA,wBAAnC,GAEA,OAAOX,QAAa,CAClBa,MAAOC,IAAFsC,IAAAxC,EAIyBD,EAJzBM,aADPI,KAkBK,yBAAIV,aACFX,QAAa,CAClBa,MAAOC,IAAFuC,IAAAzC,EAIiBD,EAJjBa,MAKkCb,EANzCU,iBADK,0dCtDJ,SAAAiC,IACL,OAAOtD,QAAa,CAClBa,MAAOC,IAAFyC,OAUF,SAAAC,KACL,OAAOxD,QAAa,CAClBa,MAAOC,IAAF2C,OAgBF,SAAAC,KAgDL,MA/CoB,CAChB,CACIC,KADJ,UAEIC,aAFJ,MAGIC,MAAS,CAAC,CAAC5C,aAAD,UAA0B6C,SAA1B,mCAAwEzC,SAAzE,UAA8F,CAACJ,aAAD,UAA0B6C,SAA1B,yCAA8EzC,SAA5K,UAAiM,CAACJ,aAAD,UAA0B6C,SAA1B,qCAA0EzC,SAA3Q,UAAgS,CAACJ,aAAD,UAA0B6C,SAA1B,sCAA2EzC,SAA3W,UAAgY,CAACJ,aAAD,UAA0B6C,SAA1B,iCAAsEzC,SAAtc,UAA2d,CAACJ,aAAD,UAA0B6C,SAA1B,4BAAiEzC,SAA5hB,UAAijB,CAACJ,aAAD,UAA0B6C,SAA1B,kCAAuEzC,SAAxnB,UAA6oB,CAACJ,aAAD,UAA0B6C,SAA1B,mCAAwEzC,SAArtB,UAA0uB,CAACJ,aAAD,UAA0B6C,SAA1B,qCAA0EzC,SAApzB,UAAy0B,CAACJ,aAAD,UAA0B6C,SAA1B,wCAA6EzC,SAAt5B,UAA26B,CAACJ,aAAD,UAA0B6C,SAA1B,qCAA0EzC,SAAr/B,UAA0gC,CAACJ,aAAD,UAA0B6C,SAA1B,sCAA2EzC,SAArlC,UAA0mC,CAACJ,aAAD,UAA0B6C,SAA1B,mCAAwEzC,SAAlrC,UAAusC,CAACJ,aAAD,UAA0B6C,SAA1B,uCAA4EzC,SAAnxC,UAAwyC,CAACJ,aAAD,UAA0B6C,SAA1B,mCAAwEzC,SAAh3C,UAAq4C,CAACJ,aAAD,UAA0B6C,SAA1B,gCAAqEzC,SAA18C,UAA+9C,CAACJ,aAAD,UAA0B6C,SAA1B,qCAA0EzC,SAAziD,UAA8jD,CAACJ,aAAD,UAA0B6C,SAA1B,iCAAsEzC,SAApoD,UAAypD,CAACJ,aAAD,UAA0B6C,SAA1B,+BAAoEzC,SAA7tD,UAAkvD,CAACJ,aAAD,UAA0B6C,SAA1B,uCAA4EzC,SAA9zD,UAAm1D,CAACJ,aAAD,UAA0B6C,SAA1B,wCAA6EzC,SAAh6D,UAAq7D,CAACJ,aAAD,UAA0B6C,SAA1B,0CAA+EzC,SAApgE,UAAyhE,CAACJ,aAAD,UAA0B6C,SAA1B,sCAA2EzC,SAApmE,UAAynE,CAACJ,aAAD,UAA0B6C,SAA1B,kCAAuEzC,SAAhsE,UAAqtE,CAACJ,aAAD,UAA0B6C,SAA1B,mEAAwGzC,SAJ1zE,YAMhB,CACIsC,KADJ,aAEIC,aAFJ,KAGIC,MAAS,CAAC,CAAC5C,aAAD,aAA6B6C,SAA7B,+CAAuFzC,SAAxF,SAA4G,CAACJ,aAAD,aAA6B6C,SAA7B,8BAAsEzC,SAAlL,SAAsM,CAACJ,aAAD,aAA6B6C,SAA7B,gCAAwEzC,SAA9Q,SAAkS,CAACJ,aAAD,aAA6B6C,SAA7B,qCAA6EzC,SAA/W,SAAmY,CAACJ,aAAD,aAA6B6C,SAA7B,6BAAqEzC,SAAxc,SAA4d,CAACJ,aAAD,aAA6B6C,SAA7B,+BAAuEzC,SAAniB,SAAujB,CAACJ,aAAD,aAA6B6C,SAA7B,uCAA+EzC,SAAtoB,SAA0pB,CAACJ,aAAD,aAA6B6C,SAA7B,0BAAkEzC,SAA5tB,SAAgvB,CAACJ,aAAD,aAA6B6C,SAA7B,+BAAuEzC,SAAvzB,SAA20B,CAACJ,aAAD,aAA6B6C,SAA7B,qCAA6EzC,SAAx5B,SAA46B,CAACJ,aAAD,aAA6B6C,SAA7B,+BAAuEzC,SAAn/B,SAAugC,CAACJ,aAAD,aAA6B6C,SAA7B,kCAA0EzC,SAAjlC,SAAqmC,CAACJ,aAAD,aAA6B6C,SAA7B,kCAA0EzC,SAA/qC,SAAmsC,CAACJ,aAAD,aAA6B6C,SAA7B,8BAAsEzC,SAAzwC,SAA6xC,CAACJ,aAAD,aAA6B6C,SAA7B,+BAAuEzC,SAAp2C,SAAw3C,CAACJ,aAAD,aAA6B6C,SAA7B,8BAAsEzC,SAA97C,SAAk9C,CAACJ,aAAD,aAA6B6C,SAA7B,4BAAoEzC,SAAthD,SAA0iD,CAACJ,aAAD,aAA6B6C,SAA7B,wCAAgFzC,SATvnD,WAWhB,CACIsC,KADJ,UAEIC,aAFJ,KAGIC,MAAS,CAAC,CAAC5C,aAAD,UAA0B6C,SAA1B,+BAAoEzC,SAArE,OAAuF,CAACJ,aAAD,UAA0B6C,SAA1B,iCAAsEzC,SAA7J,SAAiL,CAACJ,aAAD,UAA0B6C,SAA1B,6BAAkEzC,SAAnP,SAAuQ,CAACJ,aAAD,UAA0B6C,SAA1B,8BAAmEzC,SAA1U,SAA8V,CAACJ,aAAD,UAA0B6C,SAA1B,oCAAyEzC,SAAva,SAA2b,CAACJ,aAAD,UAA0B6C,SAA1B,oCAAyEzC,SAApgB,SAAwhB,CAACJ,aAAD,UAA0B6C,SAA1B,kCAAuEzC,SAA/lB,SAAmnB,CAACJ,aAAD,UAA0B6C,SAA1B,wCAA6EzC,SAAhsB,SAAotB,CAACJ,aAAD,UAA0B6C,SAA1B,4CAAiFzC,SAAryB,OAAuzB,CAACJ,aAAD,UAA0B6C,SAA1B,iCAAsEzC,SAd13B,SAgBhB,CACIsC,KADJ,gBAEIC,aAFJ,MAGIC,MAAS,CAAC,CAAC5C,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAA7E,OAA+F,CAACJ,aAAD,gBAAgC6C,SAAhC,8BAAyEzC,SAAxK,UAA6L,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAAvQ,UAA4R,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAApW,UAAyX,CAACJ,aAAD,gBAAgC6C,SAAhC,kCAA6EzC,SAAtc,UAA2d,CAACJ,aAAD,gBAAgC6C,SAAhC,oCAA+EzC,SAA1iB,UAA+jB,CAACJ,aAAD,gBAAgC6C,SAAhC,2CAAsFzC,SAArpB,UAA0qB,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAA2EzC,SAArvB,UAA0wB,CAACJ,aAAD,gBAAgC6C,SAAhC,4BAAuEzC,SAAj1B,UAAs2B,CAACJ,aAAD,gBAAgC6C,SAAhC,qCAAgFzC,SAAt7B,UAA28B,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAArhC,UAA0iC,CAACJ,aAAD,gBAAgC6C,SAAhC,uCAAkFzC,SAA5nC,UAAipC,CAACJ,aAAD,gBAAgC6C,SAAhC,qCAAgFzC,SAAjuC,UAAsvC,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAAh0C,UAAq1C,CAACJ,aAAD,gBAAgC6C,SAAhC,4CAAuFzC,SAA56C,UAAi8C,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAAzgD,UAA8hD,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAAxmD,UAA6nD,CAACJ,aAAD,gBAAgC6C,SAAhC,kCAA6EzC,SAA1sD,UAA+tD,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAAzyD,UAA8zD,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAAt4D,UAA25D,CAACJ,aAAD,gBAAgC6C,SAAhC,yBAAoEzC,SAA/9D,UAAo/D,CAACJ,aAAD,gBAAgC6C,SAAhC,4BAAuEzC,SAA3jE,UAAglE,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAAxpE,UAA6qE,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAAzvE,UAA8wE,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAA11E,UAA+2E,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAA37E,UAAg9E,CAACJ,aAAD,gBAAgC6C,SAAhC,oCAA+EzC,SAA/hF,UAAojF,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAA9nF,UAAmpF,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAA7tF,UAAkvF,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAA1zF,UAA+0F,CAACJ,aAAD,gBAAgC6C,SAAhC,2BAAsEzC,SAAr5F,UAA06F,CAACJ,aAAD,gBAAgC6C,SAAhC,uCAAkFzC,SAA5/F,UAAihG,CAACJ,aAAD,gBAAgC6C,SAAhC,0BAAqEzC,SAAtlG,UAA2mG,CAACJ,aAAD,gBAAgC6C,SAAhC,0CAAqFzC,SAAhsG,UAAqtG,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAA7xG,UAAkzG,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAA93G,UAAm5G,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAA/9G,UAAo/G,CAACJ,aAAD,gBAAgC6C,SAAhC,qCAAgFzC,SAApkH,UAAylH,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAAnqH,UAAwrH,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAAhwH,UAAqxH,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAAj2H,UAAs3H,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAA97H,UAAm9H,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAA3hI,UAAgjI,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAA1nI,UAA+oI,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAAvtI,UAA4uI,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAAxzI,UAA60I,CAACJ,aAAD,gBAAgC6C,SAAhC,6BAAwEzC,SAAr5I,UAA06I,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAA2EzC,SAAr/I,UAA0gJ,CAACJ,aAAD,gBAAgC6C,SAAhC,qCAAgFzC,SAA1lJ,UAA+mJ,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAAzrJ,UAA8sJ,CAACJ,aAAD,gBAAgC6C,SAAhC,kCAA6EzC,SAnBxxJ,YAqBhB,CACIsC,KADJ,aAEIC,aAFJ,KAGIC,MAAS,CAAC,CAAC5C,aAAD,aAA6B6C,SAA7B,iCAAyEzC,SAA1E,SAA8F,CAACJ,aAAD,aAA6B6C,SAA7B,2BAAmEzC,SAAjK,SAAqL,CAACJ,aAAD,aAA6B6C,SAA7B,kCAA0EzC,SAA/P,SAAmR,CAACJ,aAAD,aAA6B6C,SAA7B,kCAA0EzC,SAA7V,SAAiX,CAACJ,aAAD,aAA6B6C,SAA7B,iCAAyEzC,SAA1b,SAA8c,CAACJ,aAAD,aAA6B6C,SAA7B,6BAAqEzC,SAAnhB,SAAuiB,CAACJ,aAAD,aAA6B6C,SAA7B,iCAAyEzC,SAAhnB,SAAooB,CAACJ,aAAD,aAA6B6C,SAA7B,8BAAsEzC,SAA1sB,SAA8tB,CAACJ,aAAD,aAA6B6C,SAA7B,mCAA2EzC,SAAzyB,SAA6zB,CAACJ,aAAD,aAA6B6C,SAA7B,sCAA8EzC,SAA34B,SAA+5B,CAACJ,aAAD,aAA6B6C,SAA7B,2BAAmEzC,SAAl+B,SAAs/B,CAACJ,aAAD,aAA6B6C,SAA7B,oCAA4EzC,SAAlkC,SAAslC,CAACJ,aAAD,aAA6B6C,SAA7B,kCAA0EzC,SAAhqC,SAAorC,CAACJ,aAAD,aAA6B6C,SAA7B,qCAA6EzC,SAAjwC,SAAqxC,CAACJ,aAAD,aAA6B6C,SAA7B,qDAA6FzC,SAAl3C,SAAs4C,CAACJ,aAAD,aAA6B6C,SAA7B,oCAA4EzC,SAAl9C,SAAs+C,CAACJ,aAAD,aAA6B6C,SAA7B,iCAAyEzC,SAA/iD,SAAmkD,CAACJ,aAAD,aAA6B6C,SAA7B,iCAAyEzC,SAA5oD,SAAgqD,CAACJ,aAAD,aAA6B6C,SAA7B,yCAAiFzC,SAxB9uD,WA0BhB,CACIsC,KADJ,aAEIC,aAFJ,KAGIC,MAAS,CAAC,CAAC5C,aAAD,aAA6B6C,SAA7B,oCAA4EzC,SAA7E,SAAiG,CAACJ,aAAD,aAA6B6C,SAA7B,gCAAwEzC,SAAzK,SAA6L,CAACJ,aAAD,aAA6B6C,SAA7B,6BAAqEzC,SAAlQ,SAAsR,CAACJ,aAAD,aAA6B6C,SAA7B,8BAAsEzC,SAA5V,SAAgX,CAACJ,aAAD,aAA6B6C,SAA7B,mCAA2EzC,SAA3b,SAA+c,CAACJ,aAAD,aAA6B6C,SAA7B,iCAAyEzC,SAAxhB,SAA4iB,CAACJ,aAAD,aAA6B6C,SAA7B,gCAAwEzC,SAApnB,SAAwoB,CAACJ,aAAD,aAA6B6C,SAA7B,8BAAsEzC,SAA9sB,SAAkuB,CAACJ,aAAD,aAA6B6C,SAA7B,4BAAoEzC,SAAtyB,SAA0zB,CAACJ,aAAD,aAA6B6C,SAA7B,4BAAoEzC,SAA93B,SAAk5B,CAACJ,aAAD,aAA6B6C,SAA7B,gCAAwEzC,SAA19B,SAA8+B,CAACJ,aAAD,aAA6B6C,SAA7B,2BAAmEzC,SAAjjC,SAAqkC,CAACJ,aAAD,aAA6B6C,SAA7B,qCAA6EzC,SAAlpC,SAAsqC,CAACJ,aAAD,aAA6B6C,SAA7B,4BAAoEzC,SAA1uC,SAA8vC,CAACJ,aAAD,aAA6B6C,SAA7B,+BAAuEzC,SAAr0C,SAAy1C,CAACJ,aAAD,aAA6B6C,SAA7B,8BAAsEzC,SAA/5C,SAAm7C,CAACJ,aAAD,aAA6B6C,SAA7B,0BAAkEzC,SAAr/C,SAAygD,CAACJ,aAAD,aAA6B6C,SAA7B,kCAA0EzC,SAAnlD,SAAumD,CAACJ,aAAD,aAA6B6C,SAA7B,6BAAqEzC,SAA5qD,SAAgsD,CAACJ,aAAD,aAA6B6C,SAA7B,gCAAwEzC,SA7BrwD,SA+BhB,CACIsC,KADJ,eAEIC,aAFJ,KAGIC,MAAS,CAAC,CAAC5C,aAAD,eAA+B6C,SAA/B,mCAA6EzC,SAA9E,OAAgG,CAACJ,aAAD,eAA+B6C,SAA/B,mCAA6EzC,SAA7K,SAAiM,CAACJ,aAAD,eAA+B6C,SAA/B,2CAAqFzC,SAAtR,SAA0S,CAACJ,aAAD,eAA+B6C,SAA/B,+BAAyEzC,SAAnX,SAAuY,CAACJ,aAAD,eAA+B6C,SAA/B,+BAAyEzC,SAAhd,SAAoe,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAA9iB,SAAkkB,CAACJ,aAAD,eAA+B6C,SAA/B,0CAAoFzC,SAAtpB,SAA0qB,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAApvB,SAAwwB,CAACJ,aAAD,eAA+B6C,SAA/B,6BAAuEzC,SAA/0B,SAAm2B,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAA76B,SAAi8B,CAACJ,aAAD,eAA+B6C,SAA/B,4BAAsEzC,SAAvgC,SAA2hC,CAACJ,aAAD,eAA+B6C,SAA/B,+BAAyEzC,SAApmC,SAAwnC,CAACJ,aAAD,eAA+B6C,SAA/B,4BAAsEzC,SAA9rC,SAAktC,CAACJ,aAAD,eAA+B6C,SAA/B,kCAA4EzC,SAA9xC,SAAkzC,CAACJ,aAAD,eAA+B6C,SAA/B,4BAAsEzC,SAAx3C,SAA44C,CAACJ,aAAD,eAA+B6C,SAA/B,2BAAqEzC,SAAj9C,SAAq+C,CAACJ,aAAD,eAA+B6C,SAA/B,2BAAqEzC,SAA1iD,SAA8jD,CAACJ,aAAD,eAA+B6C,SAA/B,oCAA8EzC,SAA5oD,SAAgqD,CAACJ,aAAD,eAA+B6C,SAA/B,+BAAyEzC,SAAzuD,SAA6vD,CAACJ,aAAD,eAA+B6C,SAA/B,6BAAuEzC,SAAp0D,SAAw1D,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAAl6D,SAAs7D,CAACJ,aAAD,eAA+B6C,SAA/B,oCAA8EzC,SAApgE,SAAwhE,CAACJ,aAAD,eAA+B6C,SAA/B,kCAA4EzC,SAApmE,SAAwnE,CAACJ,aAAD,eAA+B6C,SAA/B,4BAAsEzC,SAA9rE,SAAktE,CAACJ,aAAD,eAA+B6C,SAA/B,8BAAwEzC,SAA1xE,SAA8yE,CAACJ,aAAD,eAA+B6C,SAA/B,oCAA8EzC,SAA53E,SAAg5E,CAACJ,aAAD,eAA+B6C,SAA/B,4BAAsEzC,SAAt9E,SAA0+E,CAACJ,aAAD,eAA+B6C,SAA/B,mCAA6EzC,SAAvjF,SAA2kF,CAACJ,aAAD,eAA+B6C,SAA/B,+BAAyEzC,SAAppF,SAAwqF,CAACJ,aAAD,eAA+B6C,SAA/B,kCAA4EzC,SAApvF,SAAwwF,CAACJ,aAAD,eAA+B6C,SAA/B,wCAAkFzC,SAA11F,SAA82F,CAACJ,aAAD,eAA+B6C,SAA/B,4BAAsEzC,SAAp7F,SAAw8F,CAACJ,aAAD,eAA+B6C,SAA/B,2BAAqEzC,SAA7gG,SAAiiG,CAACJ,aAAD,eAA+B6C,SAA/B,0CAAoFzC,SAArnG,SAAyoG,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAAntG,SAAuuG,CAACJ,aAAD,eAA+B6C,SAA/B,mCAA6EzC,SAApzG,SAAw0G,CAACJ,aAAD,eAA+B6C,SAA/B,2BAAqEzC,SAA74G,SAAi6G,CAACJ,aAAD,eAA+B6C,SAA/B,kCAA4EzC,SAA7+G,SAAigH,CAACJ,aAAD,eAA+B6C,SAA/B,4CAAsFzC,SAlCplH,SAoChB,CACIsC,KADJ,gBAEIC,aAFJ,KAGIC,MAAS,CAAC,CAAC5C,aAAD,gBAAgC6C,SAAhC,sCAAiFzC,SAAlF,SAAsG,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAA2EzC,SAAjL,SAAqM,CAACJ,aAAD,gBAAgC6C,SAAhC,8BAAyEzC,SAA9Q,SAAkS,CAACJ,aAAD,gBAAgC6C,SAAhC,4BAAuEzC,SAAzW,SAA6X,CAACJ,aAAD,gBAAgC6C,SAAhC,sCAAiFzC,SAA9c,SAAke,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAAwEzC,SAA1iB,SAA8jB,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAA1oB,SAA8pB,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAA2EzC,SAAzuB,SAA6vB,CAACJ,aAAD,gBAAgC6C,SAAhC,8BAAyEzC,SAAt0B,SAA01B,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAA2EzC,SAAr6B,SAAy7B,CAACJ,aAAD,gBAAgC6C,SAAhC,sCAAiFzC,SAA1gC,SAA8hC,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAA1mC,SAA8nC,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAAxsC,SAA4tC,CAACJ,aAAD,gBAAgC6C,SAAhC,kCAA6EzC,SAAzyC,SAA6zC,CAACJ,aAAD,gBAAgC6C,SAAhC,sBAAiEzC,SAA93C,SAAk5C,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAA59C,SAAg/C,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAA2EzC,SAA3jD,SAA+kD,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAA2EzC,SAA1pD,SAA8qD,CAACJ,aAAD,gBAAgC6C,SAAhC,oCAA+EzC,SAA7vD,SAAixD,CAACJ,aAAD,gBAAgC6C,SAAhC,oCAA+EzC,SAAh2D,SAAo3D,CAACJ,aAAD,gBAAgC6C,SAAhC,kCAA6EzC,SAAj8D,SAAq9D,CAACJ,aAAD,gBAAgC6C,SAAhC,oCAA+EzC,SAApiE,SAAwjE,CAACJ,aAAD,gBAAgC6C,SAAhC,+BAA0EzC,SAAloE,SAAspE,CAACJ,aAAD,gBAAgC6C,SAAhC,gCAA2EzC,SAAjuE,SAAqvE,CAACJ,aAAD,gBAAgC6C,SAAhC,mCAA8EzC,SAAn0E,SAAu1E,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAAn6E,SAAu7E,CAACJ,aAAD,gBAAgC6C,SAAhC,2BAAsEzC,SAvC1/E,WAyChB,CACIsC,KADJ,eAEIC,aAFJ,KAGIC,MAAS,CAAC,CAAC5C,aAAD,eAA+B6C,SAA/B,sCAAgFzC,SAAjF,OAAmG,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAA7K,SAAiM,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAA3Q,SAA+R,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAAzW,SAA6X,CAACJ,aAAD,eAA+B6C,SAA/B,8CAAwFzC,SAArd,SAAye,CAACJ,aAAD,eAA+B6C,SAA/B,iCAA2EzC,SAApjB,SAAwkB,CAACJ,aAAD,eAA+B6C,SAA/B,6BAAuEzC,SAA/oB,SAAmqB,CAACJ,aAAD,eAA+B6C,SAA/B,8BAAwEzC,SAA3uB,SAA+vB,CAACJ,aAAD,eAA+B6C,SAA/B,sCAAgFzC,SAA/0B,SAAm2B,CAACJ,aAAD,eAA+B6C,SAA/B,oCAA8EzC,SAAj7B,SAAq8B,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAA/gC,SAAmiC,CAACJ,aAAD,eAA+B6C,SAA/B,oCAA8EzC,SAAjnC,SAAqoC,CAACJ,aAAD,eAA+B6C,SAA/B,wCAAkFzC,SAAvtC,SAA2uC,CAACJ,aAAD,eAA+B6C,SAA/B,oCAA8EzC,SAAzzC,SAA60C,CAACJ,aAAD,eAA+B6C,SAA/B,6CAAuFzC,SAAp6C,SAAw7C,CAACJ,aAAD,eAA+B6C,SAA/B,gCAA0EzC,SAAlgD,SAAshD,CAACJ,aAAD,eAA+B6C,SAA/B,2CAAqFzC,SAA3mD,SAA+nD,CAACJ,aAAD,eAA+B6C,SAA/B,kCAA4EzC,SAA3sD,SAA+tD,CAACJ,aAAD,eAA+B6C,SAA/B,0BAAoEzC,SAAnyD,SAAuzD,CAACJ,aAAD,eAA+B6C,SAA/B,kCAA4EzC,SAAn4D,SAAu5D,CAACJ,aAAD,eAA+B6C,SAA/B,0CAAoFzC,SAA3+D,SAA+/D,CAACJ,aAAD,eAA+B6C,SAA/B,0BAAoEzC,SAAnkE,SAAulE,CAACJ,aAAD,eAA+B6C,SAA/B,kCAA4EzC,SAAnqE,SAAurE,CAACJ,aAAD,eAA+B6C,SAA/B,uCAAiFzC,SAAxwE,SAA4xE,CAACJ,aAAD,eAA+B6C,SAA/B,wCAAkFzC,SA5C/3E,YAkDK,SAAA0C,KAWL,MAViB,CACf,CAAC9C,aAAD,eAA+B6C,SAA/B,mCAA6EzC,SAD9D,OAEf,CAACJ,aAAD,eAA+B6C,SAA/B,sCAAgFzC,SAFjE,OAGf,CAACJ,aAAD,UAA0B6C,SAA1B,4CAAiFzC,SAHlE,OAIf,CAACJ,aAAD,UAA0B6C,SAA1B,iCAAsEzC,SAJvD,OAKf,CAACJ,aAAD,UAA0B6C,SAA1B,+BAAoEzC,SALrD,OAMf,CAACJ,aAAD,gBAAgC6C,SAAhC,iCAA4EzC,SAN7D,OAOf,CAACJ,aAAD,aAA6B6C,SAA7B,gCAAwEzC,SAPzD,OAQf,CAACJ,aAAD,eAA+B6C,SAA/B,4CAAsFzC,SARxF,icCvFF2C,EAAA,EAJa,CACTC,OADJ,sGCMeD,EAAA,GACXE,cAPJ,gBAQIC,cAPJ,gBAQIC,YAPJ,cAQIC,sBAPJ,wBAQIC,WAPJ,mECJAC,EAAAC,EAAAR,EAAA,sBAAAS,IAAAF,EAAAC,EAAAR,EAAA,sBAAAU,IAAAH,EAAAC,EAAAR,EAAA,sBAAAW,IAAAJ,EAAAC,EAAAR,EAAA,sBAAAY,IAAAL,EAAAC,EAAAR,EAAA,sBAAAa,IAAAN,EAAAC,EAAAR,EAAA,sBAAAc,IAAAP,EAAAC,EAAAR,EAAA,sBAAAe,IAAAR,EAAAC,EAAAR,EAAA,sBAAAgB,IAAAT,EAAAC,EAAAR,EAAA,sBAAAiB,IAAAV,EAAAC,EAAAR,EAAA,sBAAAkB,IAAAX,EAAAC,EAAAR,EAAA,sBAAAmB,IAAAZ,EAAAC,EAAAR,EAAA,sBAAAoB,IAAAb,EAAAC,EAAAR,EAAA,sBAAAqB,IAAAd,EAAAC,EAAAR,EAAA,sBAAAsB,IAAAf,EAAAC,EAAAR,EAAA,sBAAAuB,IAAA,IAAAC,EAAAjB,EAAA,8BAEA,SAAAkB,EAAAC,EAAAC,GACE,UAAIA,EACF,GAEQD,IAAD,KAAAE,QAAP,GAIG,SAAAnB,EAAAoB,EAAAC,GACH,IAAAC,EACIC,EAAaF,EAAjBE,WAUA,KARED,EADF,YAAIC,EACUH,EAAI,KAAJA,iBAAZE,GACK,YAAIC,EACGH,EAAI,KAAJA,2BAAZE,GACK,gBAAIC,EACEH,EAAI,KAAJA,0BAAXE,GAEYF,EAAI,KAAJA,+BAAZE,IAIA,OADAE,uCACA,KAGF,IAAIC,EAAWH,EAAS,KAOxB,OANmBG,EAAQ,cAAoBA,EAAQ,WACjC,MACZC,KAAa,SAAAT,EAAAC,GAAgB,OAAOA,mBAAqBD,OAA5BU,cAE7BD,QAAiBL,EAA3BK,YAEOA,IAAY,SAAAE,GACf,IAAIC,EAAKD,EAAI,KACb,MAAO,CACH1C,KAAM2C,EAAE,MAAFA,aACNC,WAAYD,EAAE,WACdF,YAAaE,EAAE,YACfE,UAAWF,EAAE,SAKlB,SAAA5B,EAAAmB,EAAAC,GACL,IAAAK,EACIH,EAAaF,EAAjBE,WAWIS,GAVJ,YAAIT,EACMH,EAAI,KAAJA,WAARa,MACK,YAAIV,EACDH,EAAI,KAAJA,qBAARa,MACK,gBAAIV,EACFH,EAAI,KAAJA,oBAAPa,MAEQb,EAAI,KAAJA,yBAARa,OAGsBA,IAAU,SAAAC,GAChC,IAAIT,EAAWS,EAAI,KACfC,EAAeV,EAAQ,cAAoBA,EAAQ,UAEnDW,GADJV,EAAUS,EAAY,MAAZA,OAA6B,SAAAlB,GAAC,OAAIA,2BAAmCI,EAAvCgB,aACxC,GAGA,GAFAb,8BACAA,yBACAY,EAAY,CACV,IAAIP,EAAKO,EAAM,KACf,MAAO,CACHlD,KAAMuC,EAAQ,MAARA,YACNE,YAAaE,EAAE,YACfE,UAAWF,EAAE,OAGnB,MAAO,CACL3C,KAAMuC,EAAQ,MAARA,YACNE,YAFK,EAGLI,UAHF,QAQF,OAFAP,uBACAA,6BAA8BQ,SAAyB,SAAAE,GAAI,UAAIb,4BAAgCa,EAAhCb,SACxDW,SAAyB,SAAAE,GAAI,OAAIb,+BAAgCa,EAAhCb,OAAJ,MAAwDa,cAGvF,SAAAhC,EAAAkB,EAAAC,GACL,IAAAC,EACIC,EAAaF,EAAjBE,WAUA,KARED,EADF,YAAIC,EACUH,EAAI,KAAJA,iBAAZE,GACK,YAAIC,EACGH,EAAI,KAAJA,2BAAZE,GACK,gBAAIC,EACEH,EAAI,KAAJA,0BAAXE,GAEYF,EAAI,KAAJA,+BAAZE,IAIA,OADAE,sDACA,KAGF,IAAIC,EAAWH,EAAS,KAExB,MAAO,CACL,CACEpC,KADF,YAEEoD,QAAStB,EAAYS,EAAQ,sBAA2BA,EAAQ,SAChEc,WAAYd,EAAQ,QACpBe,MAAOf,EAAQ,uBACd,CACDvC,KADC,gBAEDoD,QAAS,IAAMtB,EAAYS,EAAQ,sBAA2BA,EAAQ,SACtEc,WAAYd,EAAQ,QACpBe,MAAOf,EAAQ,QAAcA,EAAQ,wBAmDpC,SAAAtB,EAAAiB,EAAAC,GACL,IAAAD,EAAY,YACZ,IAAIqB,EAAJ,GAEIlB,EAAaF,EAAjBE,WA0BA,MAzBA,aAAIA,EACQH,EAAI,KAAJA,qBAARa,MACAA,QAAc,SAAAC,GACV,IAAIN,EAAOM,EAAXN,KACIpF,EAAeoF,EAAI,SAAJA,KACfc,EAAYd,EAAI,SAAJA,WAChBa,SAED,aAAIlB,EACCH,EAAI,KAAJA,yBAARa,MACAA,QAAc,SAAAC,GACV,IAAIN,EAAOM,EAAXN,KACIhF,EAAWgF,EAAI,SAAJA,KACXc,EAAYd,EAAI,SAAJA,WAChBa,SAGIrB,EAAI,KAAJA,2BAARa,MACAA,QAAc,SAAAC,GACV,IAAIN,EAAOM,EAAXN,KACI7E,EAAQ6E,EAAI,SAAJA,MACRc,EAAYd,EAAI,SAAJA,WAChBa,SAGRA,EAGK,SAAArC,EAAAgB,EAAAC,GACL,IAAAD,EAAY,YACZ,IAAIa,EAAQb,EAAI,KAAJA,oBAAZa,MACIV,EAAaF,EAAjBE,WAmBA,OAlBcU,EAAAU,IAAU,SAAAT,GACtB,IAAIN,EAAOM,EAAXN,KAOA,MAAO,CACLgB,MANF,aAAIrB,EACMK,EAAI,WAAiBA,EAAI,SAEzBA,EAAI,SAIZ1C,KAAM0C,EAAI,MAAJA,aACNG,UAAWH,EAAI,SAOZF,QAAiBL,EAAxBwB,YAGK,SAAAxC,EAAAe,EAAAC,GACL,IAAAD,EAAY,YACZ,IAAI0B,EAAJ,GAEIvB,EAAaF,EAAjBE,WA0BA,MAzBA,aAAIA,EACQH,EAAI,KAAJA,qBAARa,MACAA,QAAc,SAAAC,GACV,IAAIN,EAAOM,EAAXN,KACIpF,EAAeoF,EAAI,SAAJA,KACfmB,EAAmBnB,EAAI,iBAC3BkB,SAED,aAAIvB,EACCH,EAAI,KAAJA,oBAARa,MACAA,QAAc,SAAAC,GACV,IAAIN,EAAOM,EAAXN,KACIhF,EAAWgF,EAAI,SAAJA,KACXmB,EAAmBnB,EAAI,iBAC3BkB,SAGI1B,EAAI,KAAJA,yBAARa,MACAA,QAAc,SAAAC,GACV,IAAIN,EAAOM,EAAXN,KACI7E,EAAQ6E,EAAI,SAAJA,MACRmB,EAAmBnB,EAAI,iBAC3BkB,SAGRA,EAGK,SAAAxC,EAAAc,EAAAC,GACL,IAAAD,EAAY,YACZ,IAAAa,EACIV,EAAaF,EAAjBE,WAWA,MAVA,YAAIA,EACFU,EAAQb,EAAI,KAAJA,WAARa,MACK,YAAIV,EACTU,EAAQb,EAAI,KAAJA,qBAARa,MACK,gBAAIV,EACTU,EAAQb,EAAI,KAAJA,oBAARa,MACK,mBAAIV,IACTU,EAAQb,EAAI,KAAJA,yBAARa,OAGKA,MAAU,SAAAC,GACf,IAAIN,EAAOM,EAAXN,KAGA,MAAO,CACL1C,KAHU0C,EAAI,MAAJA,YAIVmB,iBAHqBnB,EAAI,oBAHtBK,OAQG,SAAAC,GAAI,UAAIA,6BAAgCb,EAAhCa,aAGb,SAAA3B,EAAAa,EAAAC,GACL,IAAAC,EACIC,EAAaF,EAAjBE,WAUA,KARED,EADF,YAAIC,EACUH,EAAI,KAAJA,iBAAZE,GACK,YAAIC,EACGH,EAAI,KAAJA,2BAAZE,GACK,gBAAIC,EACEH,EAAI,KAAJA,0BAAXE,GAEYF,EAAI,KAAJA,+BAAZE,IAIA,OADAE,wCACA,KAGF,IAAIC,EAAWH,EAAS,KAExB,MAAO,CACL,CACEpC,KADF,QAEEoD,QAAStB,EAAYS,EAAQ,gBAAqBA,EAAQ,iBACzD,CACDvC,KADC,SAEDoD,QAAStB,EAAYS,EAAQ,YAAiBA,EAAQ,kBAKrD,SAAAjB,EAAAwC,GACL,SAAAC,EAAA5D,GAOE,OANA,GAAIA,mBACAA,EAAWA,eAAXA,KAEJ,GAAIA,iBACAA,EAAWA,aAAXA,IAEJA,EAEF,kBAAI2D,aACF,eAEF,YAAIA,aACKA,EAAPxG,aAEF,gBAAIwG,aACKC,EAAmBD,EAA1B3D,UAEF,mBAAI2D,aACKC,EAAmBD,EAAnBC,cAA2CD,EAAlDjG,WADF,EAKK,SAAA0D,EAAAyC,EAAAF,GACL,mBAAIA,aACOE,EAAPC,UACG,aAAIH,aACAE,cAAyBA,wCAAhC,GAEOA,cAAyBA,wCAAhC,GAIC,SAAAxC,EAAAsC,GACL,kBAAIA,aACF,eAEKA,EAAPxG,aAGK,SAAAmE,EAAAyC,GACL,OAAIC,gCAAgCD,EAAhCC,YAAJ,GACSC,eAAcF,EAArB,aAEOE,uCACUF,EADVE,4BAAP,GAMG,SAAA1C,EAAAsC,GACL,OAAOA,QAAoBA,cAAyBA,2CAApD,IAGK,SAAArC,IACL,IAGA0C,EAHIC,EAAgBH,gCAApB,eACII,EAAJ,GACIC,EAAJ,GAGA,IAAKH,EAAL,EAAYA,EAAIC,EAAhBG,OAAsCJ,IAClCE,KAAaD,KAAbC,wBAGJ,IAAKF,EAAL,EAAYA,EAAIC,EAAhBG,OAAsCJ,IAAM,CACxC,IAAK,IAAIK,EAAT,EAAgBA,EAAhBL,EAAuBK,IAAM,CACzB,IAAIC,EAAQJ,EAAZF,GACIO,EAAQL,EAAZG,KACgBC,QAAcC,EAAdD,MACZA,OAAaC,EADDD,OAEZA,SAAeC,EAFHD,KAGZA,MAAYC,EAHhBC,UAKIL,KAAgBA,KAAgBA,KAAhBA,EAAhBA,GAGJA,KAAJ,EACIF,+BACOE,KAAJ,IACHF,eAA6BA,0BAA7BA,QAOH,SAAA1C,EAAAkD,EAAAC,GACL,IAAIC,EAAQ,IAAAC,YAAAH,EAA2B,CAAEI,OAAzCH,IACAZ","file":"static/js/src-components-bar-chart-barchart~src-components-barchart-with-nav-map-barchart-map~src-components-m~e7ae4a63.7eb19b11.js","sourcesContent":["import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\nvar API_URI = \"https://elections2019.xyz/graphql\";\n\n\nconst client = new ApolloClient({\n    link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n    cache: new InMemoryCache()\n  })\n\nexport {\n    API_URI,\n    client\n}","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n\nexport function getSeatsData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(party_Event_Description:\"${eventDescription}\", orderBy:[\"-national_pr\"]){\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    } else { //  if (options.regionType == \"province\")\n      eventDescription = eventDescription.replace(\"National\", \"Provincial\");\n      eventDescription = eventDescription.replace(\"NATIONAL\", \"PROVINCIAL\");\n      eventDescription = eventDescription.replace(\"national\", \"provincial\");\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(province_Name:\"${options.provinceName}\", party_Event_Description:\"${eventDescription}\", orderBy:[\"-regional\"]){\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getVotesDataForComparation(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots{\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          location_Name:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          location_Province_Name:\"${options.provinceName}\", \n          location_Code: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n          location_IecId:\"${options.iecId}\", \n          location_Ward_Municipality_Code:\"${options.muniCode}\"\n        ) {\n          edges{\n            node{\n              event {\n                description\n              }\n              location {\n                iecId\n              }\n              partyResults {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getVotesDataM(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\", \n            location_Code: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event_Description:\"${eventDescription}\",\n            location_IecId:\"${options.iecId}\", \n            location_Ward_Municipality_Code:\"${options.muniCode}\"\n          ) {\n            edges{\n              node{\n                location {\n                  iecId\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                      }\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n  \n  // export function getMainParties(options) {\n  //   var eventDescription = options.eventDescription;\n  //   if (!eventDescription)\n  //     return;\n  //   if (options.regionType == \"national\") {\n  //     return client.query({\n  //       query: gql`\n  //       {\n  //         allProvincialBallots(\n  //           event_Description:\"${eventDescription}\"\n  //         ){\n  //           edges{\n  //             node{\n  //               partyResults {\n  //                 edges{\n  //                   node{\n  //                     validVotes\n  //                     percOfVotes\n  //                     party {\n  //                       id\n  //                       name\n  //                       abbreviation\n  //                     }\n  //                   }\n  //                 }\n  //               }\n  //               location {\n  //                 id\n  //                 name\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //       `\n  //     })\n  //   } else if (options.regionType == \"province\") {\n  //     return client.query({\n  //       query: gql`\n  //       {\n  //         allMunicipalBallots(\n  //           event_Description:\"${eventDescription}\",\n  //           location_Province_Name:\"${options.provinceName}\"\n  //         ) {\n  //           edges{\n  //             node {\n  //               partyResults {\n  //                 edges{\n  //                   node{\n  //                     party {               \n  //                       name\n  //                       abbreviation\n  //                     }\n  //                     validVotes\n  //                     percOfVotes\n  //                   }\n  //                 }\n                  \n  //               }\n  //               location {\n  //                 code\n  //                 name\n  //                 longName\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //       `\n  //     })\n  //   } else if (options.regionType == \"municipality\") {\n  //     var muniRegName = options.muniName.split(\" - \")[1];\n  //     console.log(options.regionType, options.muniName, muniRegName);\n  //       return client.query({\n  //         query: gql`\n  //         {\n  //           allVotingDistrictBallots( \n  //           event_Description:\"${eventDescription}\",\n  //           location_Ward_Municipality_Code:\"${options.muniCode}\") {\n  //             edges{\n  //               node{\n  //                 location {\n  //                   iecId\n  //                 }\n  //                 partyResults {\n  //                   edges{\n  //                     node{\n  //                       party{\n  //                         name\n  //                         abbreviation\n  //                       }\n  //                     }\n  //                   }  \n  //                 }\n  //               }\n  //             }\n  //           }\n  //         }\n  //         `\n  //       })\n  //   }\n  // }\n\n\n  export function getMainParties(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByProvince(location_Country_Event_Description:\"${eventDescription}\") {\n            edges {\n              node {\n                location{\n                  id\n                  name\n                }\n                totalVotesCast\n                topParty{\n                  validVotes\n                  percOfVotes\n                  party {\n                      id\n                      name\n                      abbreviation\n                  }\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByMunicipality(\n            location_Province_Country_Event_Description:\"${eventDescription}\", \n            location_Province_Name:\"${options.provinceName}\") {\n            \n            edges {\n              node {\n                location{\n                    code\n                    name\n                    longName\n                }\n                totalVotesCast\n                topParty{\n                  party {               \n                    name\n                    abbreviation\n                  }\n                  validVotes\n                  percOfVotes\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniRegName = options.muniName.split(\" - \")[1];\n        return client.query({\n          query: gql`\n          {\n            topPartiesByVotingDistrict(\n              location_Ward_Municipality_Province_Country_Event_Description:\"${eventDescription}\", \n              location_Ward_Municipality_Province_Name:\"${options.provinceName}\",\n              location_Ward_Municipality_Code: \"${options.muniCode}\"\n            ) {\n              \n              edges {\n                node {\n                  location{\n                    iecId\n                  }\n                  topParty{\n                    party{\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getTurnoutData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                percVoterTurnout\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                percVoterTurnout\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniRegName = options.muniName.split(\" - \")[1];\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots( \n            event_Description:\"${eventDescription}\",\n            location_Ward_Municipality_Name_Icontains:\"${muniRegName}\") {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n  export function getTurnoutDataForAllEvents(options) {\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            location_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                location_Province_Name:\"${options.provinceName}\", \n                location_Code: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n                location_IecId:\"${options.iecId}\", \n                location_Ward_Municipality_Code:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getSpoiltData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                    id\n                    name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                event_Description:\"${eventDescription}\",\n                location_Province_Name:\"${options.provinceName}\", \n                location_Code: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    code\n                    name\n                    longName\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n                event_Description:\"${eventDescription}\",\n                location_IecId:\"${options.iecId}\", \n                location_Ward_Municipality_Code:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n  ","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getProgressVotesCount(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\", \n            location_Code: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event_Description:\"${eventDescription}\",\n            location_IecId:\"${options.iecId}\", \n            location_Ward_Municipality_Code:\"${options.muniCode}\"\n          ) {\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport {getSeatsData} from \"./race-for-seats\"\nexport {getVotesDataM, getVotesDataForComparation, getMainParties} from \"./race-for-votes\"\nexport {getTurnoutData, getTurnoutDataForAllEvents} from \"./turnout\"\nexport {getSpoiltData} from \"./spoilt\"\nexport {getProgressVotesCount} from \"./prog-votescount\"\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            abbreviation\n            colour\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getProvincesData() {\n  var provincesData = [\n      {\n          \"name\": \"Limpopo\",\n          \"abbreviation\": \"LIM\",\n          \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n      },\n      {\n          \"name\": \"Mpumalanga\",\n          \"abbreviation\": \"MP\",\n          \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n      },\n      {\n          \"name\": \"Gauteng\",\n          \"abbreviation\": \"GT\",\n          \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n      },\n      {\n          \"name\": \"KwaZulu-Natal\",\n          \"abbreviation\": \"KZN\",\n          \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n      },\n      {\n          \"name\": \"North West\",\n          \"abbreviation\": \"NW\",\n          \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n      },\n      {\n          \"name\": \"Free State\",\n          \"abbreviation\": \"FS\",\n          \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n      },\n      {\n          \"name\": \"Eastern Cape\",\n          \"abbreviation\": \"EC\",\n          \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n      },\n      {\n          \"name\": \"Northern Cape\",\n          \"abbreviation\": \"NC\",\n          \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHâI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n      },\n      {\n          \"name\": \"Western Cape\",\n          \"abbreviation\": \"WC\",\n          \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n      }\n  ]\n  return provincesData;\n}\n\nexport function getMetrosData() {\n  var metrosData = [\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},\n    {\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},\n    {\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},\n    {\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"},\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}\n  ]\n  return metrosData;\n}","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\"\n}\n\nexport default config;","const REGION_CHANGE = \"region-change\";\nconst CHART_PREVIEW = \"chart-preview\";\nconst MAP_PREVIEW = \"map-preview\";\nconst QUICK_RESULTS_PREVIEW = \"quick-results-preview\"\nconst EXPORT_PNG = \"export-png\";\n\nexport default {\n    REGION_CHANGE,\n    CHART_PREVIEW,\n    MAP_PREVIEW,\n    QUICK_RESULTS_PREVIEW,\n    EXPORT_PNG\n};","import * as d3 from \"d3\";\n\nfunction calcPercent(a, b) {\n  if (b == 0) {\n    return 0;\n  } else {\n    return (a/b*100).toFixed(2);\n  }\n}\n\nexport function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n    results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n\n    results = results.slice(0, props.numParties);\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            validVotes: el[\"validVotes\"],\n            percOfVotes: el[\"percOfVotes\"],\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function parseVotesComparationData(data, props) {\n  var results, edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else { //\"municipality-vd\"\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n\n  var partyfilter_edges = edges.map(edge => {\n    var nodeData = edge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"].filter(a => a.node[\"party\"][\"abbreviation\"] == props.partyAbbr);\n    var result = results[0];\n    console.log(\"partyResults\", partyResults);\n    console.log(\"results\", results);\n    if (result) {\n      var el = result[\"node\"];\n      return {\n          name: nodeData[\"event\"][\"description\"],\n          percOfVotes: el[\"percOfVotes\"],\n          partyInfo: el[\"party\"]\n      }\n    }\n    return {\n      name: nodeData[\"event\"][\"description\"],\n      percOfVotes: 0,\n      partyInfo: null\n    }\n  });\n  console.log(\"edges\", partyfilter_edges);\n  console.log(\"filtered edges\", partyfilter_edges.filter(edge => props.eventDescriptions.indexOf(edge.name) != -1));\n  return partyfilter_edges.filter(edge => props.eventDescriptions.indexOf(edge.name) != -1 && edge.partyInfo != null)\n}\n\nexport function parseProgressVotesCount(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"progress votes count data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Completed\",\n      percent: calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdWithResultsCaptured\"]\n    }, {\n      name: \"Not Completed\",\n      percent: 100 - calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdCount\"] - nodeData[\"vdWithResultsCaptured\"]\n    }\n  ]\n}\n\n// export function parseMainPartyData(data, props) {\n//     if (!data)  return null;\n//     var locationToMainParty = {};\n//     var edges;\n//     var regionType = props.regionType;\n//     var sort_results = function(party_results) {\n//         party_results[\"edges\"] = party_results[\"edges\"].sort(function(a, b) {\n//             return b.node.percOfVotes - a.node.percOfVotes;\n//         })\n//         return party_results;\n//     }\n//     if (regionType === \"national\") {\n//         edges = data[\"data\"][\"allProvincialBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var provinceName = node[\"location\"][\"name\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[provinceName] = partyName;\n//         })\n//     } else if (regionType === \"province\") {\n//         edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var muniCode = node[\"location\"][\"code\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[muniCode] = partyName;\n//         })\n//     } else {// \"municipality\"\n//         edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var iecId = node[\"location\"][\"iecId\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[iecId] = partyName;\n//         })\n//     }\n//     return locationToMainParty;\n// }\n\n\n\nexport function parseMainPartyData(data, props) {\n  if (!data)  return null;\n  var locationToMainParty = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"topPartiesByProvince\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[provinceName] = partyName;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"topPartiesByMunicipality\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[muniCode] = partyName;\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"topPartiesByVotingDistrict\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[iecId] = partyName;\n      })\n  }\n  return locationToMainParty;\n}\n\nexport function parseSeatsData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"abbreviation\"],\n      partyInfo: node[\"party\"]\n    }\n  })\n  \n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return results.slice(0, props.numParties);\n}\n\nexport function parseTurnoutData(data, props) {\n  if (!data)  return null;\n  var locationToTurnout = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[provinceName] = percVoterTurnout;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[muniCode] = percVoterTurnout;\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[iecId] = percVoterTurnout;\n      })\n  }\n  return locationToTurnout;\n}\n\nexport function parseTurnoutDataForAllEvents(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"]; \n    return {\n      name: event,\n      percVoterTurnout\n    }\n  }).filter(edge => edge.name.toLowerCase().indexOf(props.eventType) != -1)\n}\n\nexport function parseSpoiltVotesData(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"spoilt data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Valid\",\n      percent: calcPercent(nodeData[\"totalValidVotes\"], nodeData[\"totalVotesCast\"])\n    }, {\n      name: \"Spoilt\",\n      percent: calcPercent(nodeData[\"spoiltVotes\"], nodeData[\"totalVotesCast\"])\n    }\n  ]\n}\n\nexport function getRegionName(state) {\n  function beautifiedMuniName(muniName) {\n    if (muniName.indexOf(\" - \") != -1) {\n        muniName = muniName.split(\" - \")[1];\n    }\n    if (muniName.indexOf(\"[\") != -1) {\n        muniName = muniName.split(\"[\")[0];\n    }\n    return muniName;\n  }\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  if (state.regionType == \"province\") {\n    return state.provinceName;\n  }\n  if (state.regionType == \"municipality\") {\n    return beautifiedMuniName(state.muniName);\n  }\n  if (state.regionType == \"municipality-vd\") {\n    return beautifiedMuniName(state.muniName) + \"-\" + state.iecId;\n  }\n}\n\nexport function getSubRegionName(properties, state) {\n  if (state.regionType === \"national\") {\n      return properties.SPROVINCE;\n  } else if (state.regionType === \"province\") {\n      return properties.smunicipal && properties.smunicipal.split(\" - \")[1].split(\"[\")[0]; \n  } else {//municipality\n      return properties.SMUNICIPAL && properties.SMUNICIPAL.split(\" - \")[1].split(\"[\")[0]; \n  }\n}\n\nexport function getNationOrProvinceName(state) {\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  return state.provinceName;\n}\n\nexport function createTooltip(className) {\n  if (document.getElementsByClassName(className(\"tooltip\"))[0]) {\n    return d3.select(`.${className(\"tooltip\")}`);\n  } else {\n    return d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n}\n\nexport function getMunicipalityCode(properties) {\n  return properties.code || (properties.smunicipal && properties.smunicipal.split(\" - \")[0].replace(/\\s/g, \"\"));\n}\n\nexport function fixMapLabelIntersect() {\n  var labelElements = document.getElementsByClassName(\"place-label\");\n  var regions = {};\n  var overlapCnt = {};\n  var i;\n\n  for (i = 0; i < labelElements.length; i ++) {\n      regions[i] = labelElements[i].getBoundingClientRect();\n  }\n\n  for (i = 0; i < labelElements.length; i ++) {\n      for (var j = 0; j < i; j ++) {\n          var rect1 = regions[i];\n          var rect2 = regions[j];\n          var overlap = !(rect1.right < rect2.left || \n              rect1.left > rect2.right || \n              rect1.bottom < rect2.top || \n              rect1.top > rect2.bottom);\n          if (overlap) {\n              overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n          }\n      }\n      if (overlapCnt[i] > 2) {\n          labelElements[i].setAttribute(\"opacity\", 0)\n      } else if (overlapCnt[i] > 0){\n          labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n      } else {\n\n      }\n  }\n}\n\nexport function triggerCustomEvent(eventName, eventParam) {\n  var event = new CustomEvent(eventName, { detail: eventParam });\n  document.dispatchEvent(event);\n}"],"sourceRoot":""}