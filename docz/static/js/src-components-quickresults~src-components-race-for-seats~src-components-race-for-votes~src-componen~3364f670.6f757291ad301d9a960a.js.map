{"version":3,"sources":["webpack:///./src/api/config.js","webpack:///./src/api/race-for-seats.js","webpack:///./src/api/race-for-votes.js","webpack:///./src/api/turnout.js","webpack:///./src/api/spoilt.js","webpack:///./src/api/prog-votescount.js","webpack:///./src/api/index.js","webpack:///./src/components/BarChart/barchart.css","webpack:///./src/components/BarChart/barchartEmbed.css","webpack:///./src/components/BarchartWithNavMap/barchartMap.css","webpack:///./src/components/BarchartWithNavMap/barchartMapEmbed.css","webpack:///./src/components/Map/map.css","webpack:///./src/components/Map/mapEmbed.css","webpack:///./src/components/NavBar/navbar.css","webpack:///./src/components/ProgVotesCountPiechart/piechart.css","webpack:///./src/components/ProgVotesCountPiechart/piechartEmbed.css","webpack:///./src/components/QuickResultsWidget/quickResultsWidget.css","webpack:///./src/components/QuickResultsWidget/quickResultsWidgetEmbed.css","webpack:///./src/components/RaceForSeatBarchart/barchartEmbed.css","webpack:///./src/components/SeatCompBarchart/barchartEmbed.css","webpack:///./src/components/SeatHorseShoeChart/horseshoe.css","webpack:///./src/components/SeatHorseShoeChart/horseshoeEmbed.css","webpack:///./src/components/SpoiltBarchart/barchartEmbed.css","webpack:///./src/components/TVSeatCompBarchart/barchartEmbed.css","webpack:///./src/components/TVSeatSwingBarchart/barchartEmbed.css","webpack:///./src/components/TVVoteCompBarchart/barchartEmbed.css","webpack:///./src/components/TVVoteSwingBarchart/barchartEmbed.css","webpack:///./src/components/TurnoutBarchart/barchartEmbed.css","webpack:///./src/components/TurnoutMap/mapEmbed.css","webpack:///./src/components/VoteCompBarchart/barchartEmbed.css","webpack:///./src/components/BarChart/barchartEmbed.js","webpack:///./src/components/RaceForSeatBarchart/barchartEmbed.js","webpack:///./src/components/SpoiltBarchart/barchartEmbed.js","webpack:///./src/components/Map/mapEmbed.js","webpack:///./src/components/TurnoutMap/mapEmbed.js","webpack:///./src/components/TurnoutBarchart/barchartEmbed.js","webpack:///./src/components/BarchartWithNavMap/barchartMapEmbed.js","webpack:///./src/components/QuickResultsWidget/quickResultsWidgetEmbed.js","webpack:///./src/components/ProgVotesCountPiechart/piechartEmbed.js","webpack:///./src/components/SeatCompBarchart/barchartEmbed.js","webpack:///./src/components/SeatHorseShoeChart/horseshoeEmbed.js","webpack:///./src/components/VoteCompBarchart/barchartEmbed.js","webpack:///./src/components/TVSeatCompBarchart/barchartEmbed.js","webpack:///./src/components/TVSeatSwingBarchart/barchartEmbed.js","webpack:///./src/components/TVVoteCompBarchart/barchartEmbed.js","webpack:///./src/components/TVVoteSwingBarchart/barchartEmbed.js","webpack:///./src/components/embed.js","webpack:///./src/components/BarChart/d3barchart.js","webpack:///./src/components/BarChart/barchart.js","webpack:///./src/components/RaceForSeatBarchart/barchart.js","webpack:///./src/components/SpoiltBarchart/barchart.js","webpack:///./src/components/Map/map.js","webpack:///./src/components/TurnoutMap/map.js","webpack:///./src/components/TurnoutBarchart/barchart.js","webpack:///./src/components/BarchartWithNavMap/barchartMap.js","webpack:///./src/components/ProgVotesCountPiechart/d3piechart.js","webpack:///./src/components/ProgVotesCountPiechart/piechart.js","webpack:///./src/components/NavBar/navbar.js","webpack:///./src/components/QuickResultsWidget/quickResultsWidget.js","webpack:///./src/components/SeatCompBarchart/barchart.js","webpack:///./src/components/SeatHorseShoeChart/d3horseshoe.js","webpack:///./src/components/SeatHorseShoeChart/horseshoe.js","webpack:///./src/components/VoteCompBarchart/barchart.js","webpack:///./src/components/TVVoteCompBarchart/d3groupbarchart.js","webpack:///./src/components/TVSeatCompBarchart/barchart.js","webpack:///./src/components/TVVoteSwingBarchart/d3deltabarchart.js","webpack:///./src/components/TVSeatSwingBarchart/barchart.js","webpack:///./src/components/TVVoteCompBarchart/barchart.js","webpack:///./src/components/TVVoteSwingBarchart/barchart.js","webpack:///./src/components/index.js","webpack:///./src/config/index.js","webpack:///./src/events/index.js","webpack:///./src/utils/index.js"],"names":["client","ApolloClient","link","bundle_esm","uri","useGETForQueries","headers","Content-Type","cache","inMemoryCache","getSeatsDataForComparison","options","query","gql","_templateObject","_templateObject2","provinceName","getSeatsData","eventDescription","_templateObject3","_templateObject4","getVotesDataForComparison","race_for_votes_templateObject","race_for_votes_templateObject2","muniCode","race_for_votes_templateObject3","race_for_votes_templateObject4","iecId","getVotesDataM","_templateObject5","_templateObject6","_templateObject7","console","_templateObject8","getMainParties","_templateObject9","_templateObject10","_templateObject11","getTurnoutData","turnout_templateObject","turnout_templateObject2","muniRegName","turnout_templateObject3","getTurnoutDataForAllEvents","turnout_templateObject4","turnout_templateObject5","turnout_templateObject6","turnout_templateObject7","getSpoiltData","spoilt_templateObject","spoilt_templateObject2","spoilt_templateObject3","spoilt_templateObject4","getProgressVotesCount","prog_votescount_templateObject","prog_votescount_templateObject2","prog_votescount_templateObject3","prog_votescount_templateObject4","getElectionEvents","api_templateObject","getPartyColors","api_templateObject2","getProvincesData","name","abbreviation","munis","muniName","getMetrosData","module","exports","ELVIZ_chart-title","ELVIZ_percentage-label","ELVIZ_tooltip","ELVIZ_grouprect","ELVIZ_stylesheet-tv","embedcode","ELVIZ_map-title","ELVIZ_loading-spinner","legend","ELVIZ_stylesheet-web","ELVIZ_stylesheet-none","ELVIZ_menu-widget","ELVIZ_component-transition-menu","label","active","main-left-part","main-right-part","ELVIZ_row","ELVIZ_col-md-2","ELVIZ_col-md-4","ELVIZ_col-md-8","multievent-container","multiparties-container","provincesData","className","originClassName","bootstrapStyles","styles","BarChartEmbed","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","elementId","regionType","numParties","electionEvents","stylesheetFor","componentID","Component","self","data","edge","error","e","setState","value","newState","triggerCustomEvent","events","CHART_PREVIEW","EXPORT_PNG","_this2","DOMAIN","config","_this$state","curProvinceData","item","react_default","a","createElement","type","placeholder","onChange","onEventDescriptionChange","bind","key","onRegionTypeChange","province","muni","onClick","onPreview","onExportAsPNG","concat","replace","BarChart_barchartEmbed","barchartEmbed_className","barchartEmbed_classCallCheck","barchartEmbed_possibleConstructorReturn","barchartEmbed_getPrototypeOf","disabled","components_RaceForSeatBarchart_barchartEmbed","SpoiltBarchart_barchartEmbed_className","SpoiltBarchart_barchartEmbed_classCallCheck","SpoiltBarchart_barchartEmbed_possibleConstructorReturn","SpoiltBarchart_barchartEmbed_getPrototypeOf","components_SpoiltBarchart_barchartEmbed","mapEmbed_className","MapEmbed","mapEmbed_classCallCheck","mapEmbed_possibleConstructorReturn","mapEmbed_getPrototypeOf","disableNavigation","MAP_PREVIEW","checked","Map_mapEmbed","TurnoutMap_mapEmbed_className","TurnoutMap_mapEmbed_classCallCheck","TurnoutMap_mapEmbed_possibleConstructorReturn","TurnoutMap_mapEmbed_getPrototypeOf","components_TurnoutMap_mapEmbed","TurnoutBarchart_barchartEmbed_className","TurnoutBarchart_barchartEmbed_classCallCheck","TurnoutBarchart_barchartEmbed_possibleConstructorReturn","TurnoutBarchart_barchartEmbed_getPrototypeOf","eventType","components_TurnoutBarchart_barchartEmbed","barchartMapEmbed_className","BarChartWithNavMapEmbed","barchartMapEmbed_classCallCheck","barchartMapEmbed_possibleConstructorReturn","barchartMapEmbed_getPrototypeOf","barchartMapEmbed_assertThisInitialized","EXPORT_SUPERWIDGET_PNG","BarchartWithNavMap_barchartMapEmbed","quickResultsWidgetEmbed_className","QuickResultsWidgetEmbed","quickResultsWidgetEmbed_classCallCheck","quickResultsWidgetEmbed_possibleConstructorReturn","quickResultsWidgetEmbed_getPrototypeOf","QUICK_RESULTS_PREVIEW","QuickResultsWidget_quickResultsWidgetEmbed","piechartEmbed_className","PieChartEmbed","piechartEmbed_classCallCheck","piechartEmbed_possibleConstructorReturn","piechartEmbed_getPrototypeOf","ProgVotesCountPiechart_piechartEmbed","SeatCompBarchart_barchartEmbed_className","SeatCompBarchart_barchartEmbed_classCallCheck","SeatCompBarchart_barchartEmbed_possibleConstructorReturn","SeatCompBarchart_barchartEmbed_getPrototypeOf","eventDescriptions","partyAbbr","allParties","thing","index","t","values","i","l","length","selected","multiple","party","JSON","components_SeatCompBarchart_barchartEmbed","horseshoeEmbed_className","HorseShoeEmbed","horseshoeEmbed_classCallCheck","horseshoeEmbed_possibleConstructorReturn","horseshoeEmbed_getPrototypeOf","SeatHorseShoeChart_horseshoeEmbed","VoteCompBarchart_barchartEmbed_className","VoteCompBarchart_barchartEmbed_classCallCheck","VoteCompBarchart_barchartEmbed_possibleConstructorReturn","VoteCompBarchart_barchartEmbed_getPrototypeOf","components_VoteCompBarchart_barchartEmbed","TVSeatCompBarchart_barchartEmbed_className","TVSeatCompBarchart_barchartEmbed_classCallCheck","TVSeatCompBarchart_barchartEmbed_possibleConstructorReturn","TVSeatCompBarchart_barchartEmbed_getPrototypeOf","partyAbbrs","onPartyAbbrsChange","formatPartyName","components_TVSeatCompBarchart_barchartEmbed","TVSeatSwingBarchart_barchartEmbed_className","TVSeatSwingBarchart_barchartEmbed_classCallCheck","TVSeatSwingBarchart_barchartEmbed_possibleConstructorReturn","TVSeatSwingBarchart_barchartEmbed_getPrototypeOf","event","components_TVSeatSwingBarchart_barchartEmbed","TVVoteCompBarchart_barchartEmbed_className","TVVoteCompBarchart_barchartEmbed_classCallCheck","TVVoteCompBarchart_barchartEmbed_possibleConstructorReturn","TVVoteCompBarchart_barchartEmbed_getPrototypeOf","components_TVVoteCompBarchart_barchartEmbed","TVVoteSwingBarchart_barchartEmbed_className","TVVoteSwingBarchart_barchartEmbed_classCallCheck","TVVoteSwingBarchart_barchartEmbed_possibleConstructorReturn","TVVoteSwingBarchart_barchartEmbed_getPrototypeOf","components_TVVoteSwingBarchart_barchartEmbed","__webpack_require__","d","__webpack_exports__","Chart","container","width","height","chartType","yAxisLabel","yValue","percOfVotes","yValueFormat","predefColors","svg","tooltipDiv","createTooltip","x","d3","y","barSvg","barTextSvg","errorText","draw","chartData","colorsData","partyColorByName","noXaxisByParty","partyColorsData","minMaxY","dynamicYAxisFromValues","bars","getFillColor","getTooltipText","pageX","Number","barTexts","_typeof","partyName","getFillColorFromPartyName","destroy","barchart_partyColorsData","barchart_className","originName","cn","chartOptions","BarChart","_assertThisInitialized","chart","refreshIntervalID","exportAsPNG","exportAsPNGUri","handleRegionChange","handlePreviewEvent","getContainer","setInterval","document","clearInterval","detail","targetState","svgToPng","refs","vizcontainer","childNodes","getRegionName","Promise","resolve","reject","ref","dataLoaders","partyColorsLoader","votesData","parseVotesData","BarChart_barchart","RaceForSeatBarchart_barchart_partyColorsData","seats","RaceForSeatBarchart_barchart_className","barchart_cn","barchart_classCallCheck","barchart_getPrototypeOf","barchart_assertThisInitialized","getNationOrProvinceName","barchart_chartOptions","seatsData","parseSeatsData","RaceForSeatBarchart_barchart","percent","SpoiltBarchart_barchart_className","SpoiltBarchart_barchart_cn","SpoiltBarchart_barchart_classCallCheck","SpoiltBarchart_barchart_possibleConstructorReturn","SpoiltBarchart_barchart_getPrototypeOf","SpoiltBarchart_barchart_assertThisInitialized","SpoiltBarchart_barchart_chartOptions","spoiltData","parseSpoiltVotesData","Valid","Spoilt","SpoiltBarchart_barchart","map_partyColorsData","regionColor","map_className","map_cn","Map","map_classCallCheck","map_getPrototypeOf","map_assertThisInitialized","drawGraph","selectAll","remove","rect","rendercanvas","canvg","innerHTML","ignoreDimensions","scaleWidth","scaleHeight","canvas","filename","lnk","createEvent","fireEvent","loading","react_loading_default","color","fullRouteGeoJsonFile","getRegionFileName","h","all","then","geoJsonData","locationToMainParty","parseMainPartyData","jsonDataFeatures","partyAbbrByName","getMainPartyName","SPROVINCE","getMunicipalityCode","properties","getMunicipalityiecId","topojson","projection","path","parties","availableCnt","b","legends","parseInt","getLegendXY","enter","append","attr","center","projectionCenter","polylabel","style","text","getSubRegionName","fixMapLabelIntersect","REGION_CHANGE","smunicipal","appendSpan","foDiv","regionName","addSub","appendLink","muniImuniCodeD","setRegionType","fo","catch","currentRegionName","setTimeout","alert","Map_map","TurnoutMap_map_className","TurnoutMap_map_cn","TurnoutMap_map_classCallCheck","TurnoutMap_map_getPrototypeOf","TurnoutMap_map_assertThisInitialized","locationToTurnout","parseTurnoutData","getFillColorFromTurnout","turnout","getTurnout","it","TurnoutMap_map","percVoterTurnout","TurnoutBarchart_barchart_className","TurnoutBarchart_barchart_cn","TurnoutBarchart_barchart_classCallCheck","TurnoutBarchart_barchart_possibleConstructorReturn","TurnoutBarchart_barchart_getPrototypeOf","TurnoutBarchart_barchart_assertThisInitialized","TurnoutBarchart_barchart_chartOptions","turnoutData","parseTurnoutDataForAllEvents","TurnoutBarchart_barchart","barchartMap_className","BarchartWithNavMap","barchartMap_classCallCheck","barchartMap_possibleConstructorReturn","barchartMap_getPrototypeOf","barchartMap_assertThisInitialized","zip","lib_default","imgs","base64","content","saveAs","Object","assign","instance","barchartInstance","mapInstance","BarchartWithNavMap_barchartMap","d3piechart_Chart","margin","category","floatFormat","colour","Math","radius","pie","arc","totalSvg","labelSvg","toolTip","selection","tip","toolTipHTML","arcTween","_current","colorsDataP","updatePath","data0","data1","m","k","j","findPreceding","startAngle","endAngle","n","findFollowing","findNeighborArc","piechart_className","piechart_cn","PieChart","piechart_classCallCheck","piechart_getPrototypeOf","piechart_assertThisInitialized","piechart_chartOptions","progressVotesData","parseProgressVotesCount","Completed","Not Completed","ProgVotesCountPiechart_piechart","cssPrefix","metrosData","CustomLink","navbar_classCallCheck","navbar_possibleConstructorReturn","navbar_getPrototypeOf","navbar_assertThisInitialized","React","hasSubMenu","toggleSubMenu","activateMe","newLocation","to","selectedMenuLabel","children","NavBar","activeLinkId","handleNavBarSelection","navbar","addEventListener","removeEventListener","classList","iconClass","passInfo","lastClass","selectionData","icon","navbar_provincesData","map","metro","join","react_metismenu_lib_default","LinkComponent","navbar_CustomLink","NavBar_navbar","quickResultsWidget_className","quickResultsWidget_cn","QuickResultsWidget","quickResultsWidget_classCallCheck","quickResultsWidget_getPrototypeOf","comp","quickResultsWidget_assertThisInitialized","zipfileName","imageLoadPromises","votesInstance1","votesInstance2","seatsInstance1","seatsInstance2","turnoutInstance1","turnoutInstance2","progressInstance1","progressInstance2","spoiltInstance1","spoiltInstance2","QuickResultsWidget_quickResultsWidget","SeatCompBarchart_barchart_partyColorsData","SeatCompBarchart_barchart_className","SeatCompBarchart_barchart_cn","SeatCompBarchart_barchart_classCallCheck","SeatCompBarchart_barchart_getPrototypeOf","SeatCompBarchart_barchart_assertThisInitialized","SeatCompBarchart_barchart_chartOptions","parseSeatsComparisonData","SeatCompBarchart_barchart","d3horseshoe_Chart","mainSvg","originChartData","totalSeats","rows","poslist","J","R","angle","Totals","PI","onMouseMove","onMouseOut","Counter","partySvg","pythonConvertedCode","horseshoe_partyColorsData","horseshoe_className","horseshoe_cn","HorseShoeChart","horseshoe_classCallCheck","horseshoe_getPrototypeOf","horseshoe_assertThisInitialized","horseshoe_chartOptions","SeatHorseShoeChart_horseshoe","VoteCompBarchart_barchart_partyColorsData","VoteCompBarchart_barchart_className","VoteCompBarchart_barchart_cn","VoteCompBarchart_barchart_classCallCheck","VoteCompBarchart_barchart_getPrototypeOf","VoteCompBarchart_barchart_assertThisInitialized","parseVotesComparisonData","VoteCompBarchart_barchart","d3groupbarchart_Chart","groupChartData","groupSvgs","groupSvg","bandwidth","YaxisOffset","subX","barAxisTextSvg","barAxisTexts","exec","TVSeatCompBarchart_barchart_partyColorsData","topLabel","usedValue","TVSeatCompBarchart_barchart_className","TVSeatCompBarchart_barchart_classCallCheck","TVSeatCompBarchart_barchart_getPrototypeOf","TVSeatCompBarchart_barchart_assertThisInitialized","TVSeatCompBarchart_barchart_chartOptions","desc","parseSeatsComparisonDataMultipleParties","TVSeatCompBarchart_barchart","d3deltabarchart_Chart","newGroupChartData","_objectSpread","delta","deltaData","barTextYDelta","axisThick","TVSeatSwingBarchart_barchart_partyColorsData","TVSeatSwingBarchart_barchart_className","TVSeatSwingBarchart_barchart_classCallCheck","TVSeatSwingBarchart_barchart_getPrototypeOf","TVSeatSwingBarchart_barchart_assertThisInitialized","TVSeatSwingBarchart_barchart_chartOptions","years","TVSeatSwingBarchart_barchart","TVVoteCompBarchart_barchart_partyColorsData","TVVoteCompBarchart_barchart_className","TVVoteCompBarchart_barchart_classCallCheck","TVVoteCompBarchart_barchart_getPrototypeOf","TVVoteCompBarchart_barchart_assertThisInitialized","TVVoteCompBarchart_barchart_chartOptions","parseVotesComparisonDataMultipleParties","TVVoteCompBarchart_barchart","TVVoteSwingBarchart_barchart_partyColorsData","TVVoteSwingBarchart_barchart_className","TVVoteSwingBarchart_barchart_classCallCheck","TVVoteSwingBarchart_barchart_getPrototypeOf","TVVoteSwingBarchart_barchart_assertThisInitialized","TVVoteSwingBarchart_barchart_chartOptions","TVVoteSwingBarchart_barchart","CSS_PREFIX","calcPercent","toFixed","firstEdge","nodeData","results","node","el","validVotes","partyInfo","edges","partyResults","result","partyfilter_edges","reverse","new_results","available","newProps","totalCount","count","filter","beautifiedMuniName","tooltipClassName","labelElements","regions","overlapCnt","rect1","rect2","bottom","eventName","eventParam","CustomEvent","toUpperCase","Municipali","PKLVDNUMBE","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape"],"mappings":"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","file":"static/js/src-components-quickresults~src-components-race-for-seats~src-components-race-for-votes~src-componen~3364f670.afe7bf6a.js","sourcesContent":["import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\nvar API_URI = \"https://elections2019.xyz/graphql\";\n\n\nconst client = new ApolloClient({\n    link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n    cache: new InMemoryCache()\n  })\n\nexport {\n    API_URI,\n    client\n}","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getSeatsDataForComparison(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            party_Event_Description_Icontains:\"national\",\n            orderBy:[\"-national_pr\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  } else { //  if (options.regionType == \"province\")\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(province_Name:\"${options.provinceName}\", orderBy:[\"-regional\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  }\n}\n\n\nexport function getSeatsData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(party_Event_Description:\"${eventDescription}\", orderBy:[\"-national_pr\"]){\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    } else { //  if (options.regionType == \"province\")\n      eventDescription = eventDescription.replace(\"National\", \"Provincial\");\n      eventDescription = eventDescription.replace(\"NATIONAL\", \"PROVINCIAL\");\n      eventDescription = eventDescription.replace(\"national\", \"provincial\");\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(province_Name:\"${options.provinceName}\", party_Event_Description:\"${eventDescription}\", orderBy:[\"-regional\"]){\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getVotesDataForComparison(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots{\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          location_Name:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          location_Province_Name:\"${options.provinceName}\", \n          location_Code: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n          location_IecId:\"${options.iecId}\", \n          location_Ward_Municipality_Code:\"${options.muniCode}\"\n        ) {\n          edges{\n            node{\n              event {\n                description\n              }\n              location {\n                iecId\n              }\n              partyResults {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getVotesDataM(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\", \n            location_Code: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      console.log(\"fetch vd\", eventDescription, options.iecId, options.muniCode);\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event_Description:\"${eventDescription}\",\n            location_IecId:\"${options.iecId}\", \n            location_Ward_Municipality_Code:\"${options.muniCode}\"\n          ) {\n            edges{\n              node{\n                location {\n                  iecId\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                      }\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n  \n  // export function getMainParties(options) {\n  //   var eventDescription = options.eventDescription;\n  //   if (!eventDescription)\n  //     return;\n  //   if (options.regionType == \"national\") {\n  //     return client.query({\n  //       query: gql`\n  //       {\n  //         allProvincialBallots(\n  //           event_Description:\"${eventDescription}\"\n  //         ){\n  //           edges{\n  //             node{\n  //               partyResults {\n  //                 edges{\n  //                   node{\n  //                     validVotes\n  //                     percOfVotes\n  //                     party {\n  //                       id\n  //                       name\n  //                       abbreviation\n  //                     }\n  //                   }\n  //                 }\n  //               }\n  //               location {\n  //                 id\n  //                 name\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //       `\n  //     })\n  //   } else if (options.regionType == \"province\") {\n  //     return client.query({\n  //       query: gql`\n  //       {\n  //         allMunicipalBallots(\n  //           event_Description:\"${eventDescription}\",\n  //           location_Province_Name:\"${options.provinceName}\"\n  //         ) {\n  //           edges{\n  //             node {\n  //               partyResults {\n  //                 edges{\n  //                   node{\n  //                     party {               \n  //                       name\n  //                       abbreviation\n  //                     }\n  //                     validVotes\n  //                     percOfVotes\n  //                   }\n  //                 }\n                  \n  //               }\n  //               location {\n  //                 code\n  //                 name\n  //                 longName\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //       `\n  //     })\n  //   } else if (options.regionType == \"municipality\") {\n  //     var muniRegName = options.muniName.split(\" - \")[1];\n  //     console.log(options.regionType, options.muniName, muniRegName);\n  //       return client.query({\n  //         query: gql`\n  //         {\n  //           allVotingDistrictBallots( \n  //           event_Description:\"${eventDescription}\",\n  //           location_Ward_Municipality_Code:\"${options.muniCode}\") {\n  //             edges{\n  //               node{\n  //                 location {\n  //                   iecId\n  //                 }\n  //                 partyResults {\n  //                   edges{\n  //                     node{\n  //                       party{\n  //                         name\n  //                         abbreviation\n  //                       }\n  //                     }\n  //                   }  \n  //                 }\n  //               }\n  //             }\n  //           }\n  //         }\n  //         `\n  //       })\n  //   }\n  // }\n\n\n  export function getMainParties(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByProvince(location_Country_Event_Description:\"${eventDescription}\") {\n            edges {\n              node {\n                location{\n                  id\n                  name\n                }\n                totalVotesCast\n                topParty{\n                  validVotes\n                  percOfVotes\n                  party {\n                      id\n                      name\n                      abbreviation\n                  }\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByMunicipality(\n            location_Province_Country_Event_Description:\"${eventDescription}\", \n            location_Province_Name:\"${options.provinceName}\") {\n            \n            edges {\n              node {\n                location{\n                    code\n                    name\n                    longName\n                }\n                totalVotesCast\n                topParty{\n                  party {               \n                    name\n                    abbreviation\n                  }\n                  validVotes\n                  percOfVotes\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { //if (options.regionType == \"municipality\") {\n      var muniRegName = options.muniName.split(\" - \")[1];\n        return client.query({\n          query: gql`\n          {\n            topPartiesByVotingDistrict(\n              location_Ward_Municipality_Province_Country_Event_Description:\"${eventDescription}\", \n              location_Ward_Municipality_Province_Name:\"${options.provinceName}\",\n              location_Ward_Municipality_Code: \"${options.muniCode}\"\n            ) {\n              \n              edges {\n                node {\n                  location{\n                    iecId\n                  }\n                  topParty{\n                    party{\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getTurnoutData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                percVoterTurnout\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                percVoterTurnout\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { // municipality or municipality-vd\n      var muniRegName = options.muniName.split(\" - \")[1];\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots( \n            event_Description:\"${eventDescription}\",\n            location_Ward_Municipality_Name_Icontains:\"${muniRegName}\") {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n  export function getTurnoutDataForAllEvents(options) {\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            location_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                location_Province_Name:\"${options.provinceName}\", \n                location_Code: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n                location_IecId:\"${options.iecId}\", \n                location_Ward_Municipality_Code:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getSpoiltData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                    id\n                    name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                event_Description:\"${eventDescription}\",\n                location_Province_Name:\"${options.provinceName}\", \n                location_Code: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    code\n                    name\n                    longName\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n                event_Description:\"${eventDescription}\",\n                location_IecId:\"${options.iecId}\", \n                location_Ward_Municipality_Code:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n  ","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getProgressVotesCount(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\", \n            location_Code: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event_Description:\"${eventDescription}\",\n            location_IecId:\"${options.iecId}\", \n            location_Ward_Municipality_Code:\"${options.muniCode}\"\n          ) {\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport {getSeatsData, getSeatsDataForComparison} from \"./race-for-seats\"\nexport {getVotesDataM, getVotesDataForComparison, getMainParties} from \"./race-for-votes\"\nexport {getTurnoutData, getTurnoutDataForAllEvents} from \"./turnout\"\nexport {getSpoiltData} from \"./spoilt\"\nexport {getProgressVotesCount} from \"./prog-votescount\"\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            abbreviation\n            colour\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getProvincesData() {\n  var provincesData = [\n      {\n          \"name\": \"Limpopo\",\n          \"abbreviation\": \"LIM\",\n          \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n      },\n      {\n          \"name\": \"Mpumalanga\",\n          \"abbreviation\": \"MP\",\n          \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n      },\n      {\n          \"name\": \"Gauteng\",\n          \"abbreviation\": \"GT\",\n          \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n      },\n      {\n          \"name\": \"KwaZulu-Natal\",\n          \"abbreviation\": \"KZN\",\n          \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n      },\n      {\n          \"name\": \"North West\",\n          \"abbreviation\": \"NW\",\n          \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n      },\n      {\n          \"name\": \"Free State\",\n          \"abbreviation\": \"FS\",\n          \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n      },\n      {\n          \"name\": \"Eastern Cape\",\n          \"abbreviation\": \"EC\",\n          \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n      },\n      {\n          \"name\": \"Northern Cape\",\n          \"abbreviation\": \"NC\",\n          \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHâI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n      },\n      {\n          \"name\": \"Western Cape\",\n          \"abbreviation\": \"WC\",\n          \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n      }\n  ]\n  return provincesData;\n}\n\nexport function getMetrosData() {\n  var metrosData = [\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},\n    {\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},\n    {\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},\n    {\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"},\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}\n  ]\n  return metrosData;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_chart-title\":\"barchart_ELVIZ_chart-title__3M_9O\",\"ELVIZ_percentage-label\":\"barchart_ELVIZ_percentage-label__3tHup\",\"ELVIZ_tooltip\":\"barchart_ELVIZ_tooltip__2StQf\",\"ELVIZ_grouprect\":\"barchart_ELVIZ_grouprect__3r-aC\",\"ELVIZ_stylesheet-tv\":\"barchart_ELVIZ_stylesheet-tv__1BK01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__308Fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_tooltip\":\"barchartMap_ELVIZ_tooltip__tgFvS\",\"ELVIZ_stylesheet-tv\":\"barchartMap_ELVIZ_stylesheet-tv__2Oynn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartMapEmbed_embedcode__3VTUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_map-title\":\"map_ELVIZ_map-title__1LqU5\",\"ELVIZ_loading-spinner\":\"map_ELVIZ_loading-spinner__17q6Q\",\"ELVIZ_tooltip\":\"map_ELVIZ_tooltip__3-o8A\",\"ELVIZ_stylesheet-tv\":\"map_ELVIZ_stylesheet-tv__3H0zq\",\"legend\":\"map_legend__2ss0P\",\"ELVIZ_stylesheet-web\":\"map_ELVIZ_stylesheet-web__QqAjU\",\"ELVIZ_stylesheet-none\":\"map_ELVIZ_stylesheet-none__3Bxph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"mapEmbed_embedcode__1_eoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_menu-widget\":\"navbar_ELVIZ_menu-widget__1KFQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_chart-title\":\"piechart_ELVIZ_chart-title__2XNYt\",\"ELVIZ_stylesheet-tv\":\"piechart_ELVIZ_stylesheet-tv__1l-CJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"piechartEmbed_embedcode__20lGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_tooltip\":\"quickResultsWidget_ELVIZ_tooltip__1UVX7\",\"ELVIZ_component-transition-menu\":\"quickResultsWidget_ELVIZ_component-transition-menu__1faC8\",\"label\":\"quickResultsWidget_label__2Dt1H\",\"active\":\"quickResultsWidget_active__izwwa\",\"ELVIZ_stylesheet-tv\":\"quickResultsWidget_ELVIZ_stylesheet-tv__284h0\",\"main-left-part\":\"quickResultsWidget_main-left-part__2PFdy\",\"main-right-part\":\"quickResultsWidget_main-right-part__3aSBj\",\"ELVIZ_row\":\"quickResultsWidget_ELVIZ_row__1QzTz\",\"ELVIZ_col-md-2\":\"quickResultsWidget_ELVIZ_col-md-2__3beRX\",\"ELVIZ_col-md-4\":\"quickResultsWidget_ELVIZ_col-md-4__3OaTN\",\"ELVIZ_col-md-8\":\"quickResultsWidget_ELVIZ_col-md-8__1_krp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"quickResultsWidgetEmbed_embedcode__3Fxlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__tUXug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__29vdd\",\"multievent-container\":\"barchartEmbed_multievent-container__1G-dC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_chart-title\":\"horseshoe_ELVIZ_chart-title__3KEZl\",\"ELVIZ_tooltip\":\"horseshoe_ELVIZ_tooltip__2bLlY\",\"ELVIZ_stylesheet-tv\":\"horseshoe_ELVIZ_stylesheet-tv__1-bHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"horseshoeEmbed_embedcode__1B28Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__UywT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__YEDVC\",\"multievent-container\":\"barchartEmbed_multievent-container__UuClr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__3Hovq\",\"multievent-container\":\"barchartEmbed_multievent-container__2y7nI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__1Gecz\",\"multievent-container\":\"barchartEmbed_multievent-container__3zT9b\",\"multiparties-container\":\"barchartEmbed_multiparties-container__21kbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__3iHSi\",\"multievent-container\":\"barchartEmbed_multievent-container__3dDi0\",\"multiparties-container\":\"barchartEmbed_multiparties-container__2Ln06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__Z83k_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"mapEmbed_embedcode__Gu08M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__2m2Vo\",\"multievent-container\":\"barchartEmbed_multievent-container__3U1YR\"};","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 1\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 6\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n\n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 9\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showSpoiltBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nimport {\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            stylesheetFor: \"web\",\n            componentID: 3\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n      \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n    \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,  \n            stylesheetFor,          \n            disableNavigation,\n            regionType,\n            provinceName,\n            muniName,\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showMap(document.getElementById(\"${elementId}\"),{\n                            stylesheetFor: \"${stylesheetFor}\",\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 11\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,       \n            stylesheetFor,     \n            disableNavigation,\n            eventDescription,\n            regionType,\n            provinceName,\n            muniName,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showTurnoutMap(document.getElementById(\"${elementId}\"),{\n                            stylesheetFor: \"${stylesheetFor}\",\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventType: \"national\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 10\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventType,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event Type</label>\n                  <select className={className(\"form-control\")} \n                     value={eventType}\n                     onChange={(e) => this.setState({eventType: e.target.value})}>\n                        <option value=\"national\">National</option>\n                        <option value=\"provincial\">Provincial</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"\">Select ...</option>\n                        { \n                            eventType == \"national\" && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTurnoutBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventType: \"${eventType}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartMapEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartWithNavMapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 2\n        }\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_SUPERWIDGET_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map + Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n            <div>\n                Way to customize size and position of Bar Chart and Map.<br/>\n                For bar chart, you can use .barchart-container\n                <div className={className(\"embedcode\")}>\n                    {`.barchart-container {\n                        width: 1000px;\n                        height: 300px;\n                        margin-left: 100px;\n                    }`}\n                </div>\n                For Map, you can use .map-container\n                <div className={className(\"embedcode\")}>\n                    {`.map-container {\n                        width: 1000px;\n                        height: 300px;\n                        margin-left: 100px;\n                    }`}\n                </div>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarchartWithNavMap(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartWithNavMapEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./quickResultsWidgetEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass QuickResultsWidgetEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"none\",\n            numParties: 5,\n\n            electionEvents: [],\n            componentID: 5\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.QUICK_RESULTS_PREVIEW, this.state);\n    }    \n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_SUPERWIDGET_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Quick Results Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties for Bar Chart</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>              \n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showQuickResultsWidget(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default QuickResultsWidgetEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./piechartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass PieChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 4\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Progress on Votes Count Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default PieChartEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbr: \"ANC\",\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 7\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seats Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents\n                            .filter(item => item.toLowerCase().indexOf(regionType==\"national\"?\"national\":\"provincial\") != -1)\n                            .map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Name</label>\n                  \n                  <select className={className(\"form-control\")} \n                        value={partyAbbr}\n                        onChange={e => this.setState({partyAbbr: e.target.value})} >\n                        <option value=\"\">Select ...</option>\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"name\"]} value={party[\"abbreviation\"]}>{party[\"name\"]}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showRaceForVotesCompBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbr: \"${partyAbbr}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./horseshoeEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass HorseShoeEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 8\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1) {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({\n                eventDescription: e.target.value,\n                regionType: \"national\"\n            });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n\n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default HorseShoeEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbr: \"ANC\",\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 16\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Name</label>\n                  \n                  <select className={className(\"form-control\")} \n                        value={partyAbbr}\n                        onChange={e => this.setState({partyAbbr: e.target.value})} >\n                        <option value=\"\">Select ...</option>\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"name\"]} value={party[\"abbreviation\"]}>{party[\"name\"]}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showRaceForVotesCompBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbr: \"${partyAbbr}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    formatPartyName\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\"],\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 12\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onPartyAbbrsChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            partyAbbrs: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbrs,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seats Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Events </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents\n                            .filter(item => item.toLowerCase().indexOf(regionType==\"national\"?\"national\":\"provincial\") != -1)\n                            .map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Names</label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multiparties-container\")} \n                        value={partyAbbrs}\n                        onChange={this.onPartyAbbrsChange.bind(this)} >\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"abbreviation\"]} value={party[\"abbreviation\"]}>{formatPartyName(party[\"name\"])}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTVSeatCompBarchart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbrs: \"${partyAbbrs}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div> \n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    formatPartyName\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                // \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                // \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                // \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\"],\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 13\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onPartyAbbrsChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            partyAbbrs: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbrs,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seats Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>First Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescriptions[0]}\n                     onChange={(event) => {\n                        this.setState({eventDescriptions: [event.target.value, eventDescriptions[1]]})\n                    }}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Second Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescriptions[1]}\n                     onChange={(event) => {\n                         this.setState({eventDescriptions: [eventDescriptions[0], event.target.value]})\n                     }}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Names</label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multiparties-container\")} \n                        value={partyAbbrs}\n                        onChange={this.onPartyAbbrsChange.bind(this)} >\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"abbreviation\"]} value={party[\"abbreviation\"]}>{formatPartyName(party[\"name\"])}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTVSeatSwingBarchart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbrs: \"${partyAbbrs}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div> \n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    formatPartyName\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\"],\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 14\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onPartyAbbrsChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            partyAbbrs: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbrs,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Events </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Names</label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multiparties-container\")} \n                        value={partyAbbrs}\n                        onChange={this.onPartyAbbrsChange.bind(this)} >\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"abbreviation\"]} value={party[\"abbreviation\"]}>{formatPartyName(party[\"name\"])}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTVVoteCompBarchart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbrs: \"${partyAbbrs}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    formatPartyName\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                // \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                // \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                // \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\"],\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 15\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 2);\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onPartyAbbrsChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            partyAbbrs: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbrs,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>First Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescriptions[0]}\n                     onChange={(event) => {\n                        this.setState({eventDescriptions: [event.target.value, eventDescriptions[1]]})\n                    }}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Second Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescriptions[1]}\n                     onChange={(event) => {\n                         this.setState({eventDescriptions: [eventDescriptions[0], event.target.value]})\n                     }}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Names</label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multiparties-container\")} \n                        value={partyAbbrs}\n                        onChange={this.onPartyAbbrsChange.bind(this)} >\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"abbreviation\"]} value={party[\"abbreviation\"]}>{formatPartyName(party[\"name\"])}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTVVoteSwingBarchart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbrs: \"${partyAbbrs}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;\n","export {default as BarChartEmbed} from \"./BarChart/barchartEmbed\";\nexport {default as RaceForSeatsBarChartEmbed} from \"./RaceForSeatBarchart/barchartEmbed\";\nexport {default as SpoiltBarChartEmbed} from \"./SpoiltBarchart/barchartEmbed\";\nexport {default as MapEmbed} from \"./Map/mapEmbed\";\nexport {default as TurnoutMapEmbed} from \"./TurnoutMap/mapEmbed\";\nexport {default as TurnoutBarChartEmbed} from \"./TurnoutBarchart/barchartEmbed\";\nexport {default as BarchartWithNavMapEmbed} from \"./BarchartWithNavMap/barchartMapEmbed\";\nexport {default as QuickResultsWidgetEmbed} from \"./QuickResultsWidget/quickResultsWidgetEmbed\";\nexport {default as ProgVotesCountPiechartEmbed} from \"./ProgVotesCountPiechart/piechartEmbed\";\nexport {default as RaceForSeatsComparisonBarChartEmbed} from \"./SeatCompBarchart/barchartEmbed\";\nexport {default as SeatHorseShoeChartEmbed} from \"./SeatHorseShoeChart/horseshoeEmbed\";\nexport {default as VoteComparisonBarchartEmbed} from \"./VoteCompBarchart/barchartEmbed\";\n\nexport {default as TVSeatCompBarchartEmbed} from \"./TVSeatCompBarchart/barchartEmbed\";\nexport {default as TVSeatSwingBarchartEmbed} from \"./TVSeatSwingBarchart/barchartEmbed\";\nexport {default as TVVoteCompBarchartEmbed} from \"./TVVoteCompBarchart/barchartEmbed\";\nexport {default as TVVoteSwingBarchartEmbed} from \"./TVVoteSwingBarchart/barchartEmbed\";","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\nimport { type } from \"os\";\nimport config from \"../../config\";\nimport {\n  formatPartyName\n} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n\n\n  if (!options) {\n    options = {};\n  } \n  if (!options.chartType) {\n    options.chartType = \"Race For Votes\";\n  }\n  if (!options.yAxisLabel) {\n    options.yAxisLabel = \"PERCENTAGE VOTES\";\n  }\n  if (!options.yValue) {\n    options.yValue = function(d) {\n      return d.percOfVotes;\n    }\n  }\n  if (!options.yValueFormat) {\n    options.yValueFormat = function(value) {\n      return value + '%';\n    }\n  }\n\n  width = 700;\n  height = 200;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 20;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(config.CSS_PREFIX + \"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(options.yAxisLabel)\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(chartData, colorsData) {\n\n      if (!chartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n      if (options.noXaxisByParty) {\n\n      } else {\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n          })\n        }\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n        if (options.noXaxisByParty) {\n          if (typeof colorsData == \"object\")\n            return colorsData[d.name];\n          if (typeof colorsData == \"function\")\n            return colorsData(d, i);\n          return colorsData;\n        } else {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n        }\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(chartData, function(d) { return options.yValue(d); }) + 1\n      }\n      y.domain(minMaxY);\n  \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => getFillColor(d, i))\n          .on(\"mousemove\", function(d, i) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              tooltipDiv.html(getTooltipText(d, i))\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .attr(\"fill\", (d, i) => getFillColor(d, i))\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d)));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(options.yValue(d)));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .text(function(d) {\n            return options.yValueFormat(options.yValue(d));\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d))) - 5;\n          })\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataM,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesData,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%'\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 1\n      }\n\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataM(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesData(data, props);\n       \n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 6\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n        \n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSpoiltData\n} from \"../../api\";\nimport {\n  parseSpoiltVotesData,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Spoilt vs Valid Votes',\n  yAxisLabel: 'PERCENTAGE VOTES',\n  noXaxisByParty: true,\n  yValue: d => d.percent,\n  yValueFormat: value => value + '%'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 9\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `spoilt-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var spoiltDataLoader = getSpoiltData(props);\n      var dataLoaders = [spoiltDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var spoiltData = values[0];\n        self.drawGraph(container, props, spoiltData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseSpoiltVotesData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Valid\": \"rgb(0,255,0)\",\n          \"Spoilt\": \"rgb(255,0,0)\"\n        });\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport svgToPng from \"save-svg-as-png\";\nimport canvg from \"canvg\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors,\n    getProvincesData\n} from \"../../api\";\nimport {\n  parseMainPartyData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar provincesData = getProvincesData();\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 3\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.componentID) {\n          this.state.componentID = props.componentID;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      this.getContainer().selectAll(\"svg\").remove();\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state)\n    }\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n    \n            // var ctx = rendercanvas.getContext(\"2d\");\n            // ctx.globalCompositeOperation = \"source-out\";\n            // ctx.fillStyle = \"#ffffff\";\n            // ctx.fillRect(0, 0, rect.width, rect.height);\n\n            canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n        // var ctx = rendercanvas.getContext(\"2d\");\n        // ctx.globalCompositeOperation = \"source-in\";\n        // ctx.fillStyle = \"#ffffff\";\n        // ctx.fillRect(0, 0, rect.width, rect.height);\n\n        var canvas = rendercanvas, filename = `race-for-votes-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        Promise.all(dataLoaders).then(function(values){ \n            var geoJsonData = values[0];\n            var locationToMainParty = parseMainPartyData(values[1], props);\n            partyColorsData = partyColorsData || values[2];  \n\n            var partyColorByName = {};\n            var partyAbbrByName = {};\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n              partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                partyColorByName[edge.node.name] = edge.node.colour;\n                partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n              })\n            }            \n\n            function getFillColorFromPartyName(partyName) {\n              if (!partyName)\n                return regionColor;\n              return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n            }\n\n            function getMainPartyName(d, i) {\n                var partyName;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    partyName = locationToMainParty[provinceName];\n                } else if (regionType === \"province\") {\n                    var muniCode = getMunicipalityCode(d.properties);\n                    partyName = locationToMainParty[muniCode];\n                } else if (regionType === \"municipality\"){// \"municipality\"\n                    var iecId = getMunicipalityiecId(d.properties);\n                    partyName = locationToMainParty[iecId];\n                } else {// \"municipality-vd\"\n                    var iecId = getMunicipalityiecId(d.properties);\n                    partyName = locationToMainParty[iecId];\n                }\n                return partyName;\n            }\n            function getMainPartyColorFromRegion(d, i) {\n                var partyName = getMainPartyName(d, i);\n                var partyColor = getFillColorFromPartyName(partyName);\n                return partyColor;\n            }\n\n            var jsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                var regionType = self.state.regionType\n                if (regionType == \"municipality\") {\n                    if (!geoJsonData.objects[self.state.muniCode])\n                        return;\n                    geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                } else { // \"municipality-vd\"\n                    if (!geoJsonData.objects[self.state.iecId])\n                        return;\n                    geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                }\n            }\n\n            jsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(jsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getMainPartyColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            var parties = [];\n            var availableCnt = [];\n            jsonDataFeatures.forEach((d, i) => {\n                var party = getMainPartyName(d, i);\n                if (parties.indexOf(party) == -1) {\n                    parties.push(party);\n                    availableCnt.push(1);\n                } else {\n                    availableCnt[parties.indexOf(party)] ++;\n                }\n            })\n\n            parties.sort(function(a, b){\n                return availableCnt[parties.indexOf(b)] - availableCnt[parties.indexOf(a)];\n            })\n\n            function getLegendXY(i) {\n                return [(i%5)*150, h + 10 + parseInt(i/5) * 40];\n            }\n            var legends = svg.selectAll(`.${className(\"legend\")}`)\n                .data(parties)\n                .enter()\n                .append('g')\n                .attr(\"class\", className(\"legend\"))\n                .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n            legends\n                .append(\"rect\")\n                .attr('width', 20)\n                .attr('height', 20)\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr(\"fill\", (party, i) => {\n                    return getFillColorFromPartyName(party);\n                })\n            legends.append('text')\n                .attr('x', 30)\n                .attr('y', 16)\n                .text(party => partyAbbrByName[party])\n            \n            if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                svg.selectAll(\".place-label\")\n                    .data(jsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(d => getSubRegionName(d.properties, self.state))\n            }\n\n            if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                fixMapLabelIntersect();\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(jsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d, i) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n\n                    tooltipDiv.html(getSubRegionName(d.properties, self.state) + \" : \" + getMainPartyName(d, i))\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: getMunicipalityiecId(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n\n                        self.setState(newState);\n                    }\n                })\n            if (!self.state.disableNavigation) {\n                var fo = svg.append(\"foreignObject\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", 10)\n                    .attr(\"width\", 500)\n                    .attr(\"height\", 30)\n                    .attr(\"class\", \"map-controls\")\n                \n                function setRegionType(regionType) {\n                    var newState;\n                    var newState = {\n                        regionType: self.state.regionType, \n                        provinceName: self.state.provinceName,\n                        muniName: self.state.muniName,\n                        muniImuniCodeD: self.state.muniCode,\n                        iecId: self.state.iecId,\n                    }\n                    newState.regionType = regionType;\n                    triggerCustomEvent(events.REGION_CHANGE, newState);\n                    self.setState(newState);\n                }\n\n                function appendSpan(foDiv, regionName, addSub) {\n                    if (addSub) foDiv.append(\"span\").html(\" > \");\n                    foDiv.append(\"span\")\n                        .style(\"height\", \"30px\")\n                        .style(\"cursor\", \"default\")\n                        .html(regionName);\n                }\n\n                function appendLink(foDiv, regionName, regionType, addSub) {\n                    if (addSub) foDiv.append(\"span\").html(\" > \");\n                    foDiv.append(\"a\")\n                        .style(\"height\", \"30px\")\n                        .style(\"cursor\", \"pointer\")\n                        .html(regionName)\n                        .on(\"click\", function() {\n                            setRegionType(regionType);\n                        });\n                }\n                \n                var foDiv = fo.append(\"xhtml:div\");\n                var regionType = self.state.regionType;\n                if (regionType == \"national\") {\n                    appendSpan(foDiv, \"South Africa\", false);\n                } else {\n                    appendLink(foDiv, \"South Africa\", \"national\", false);\n                    if (regionType == \"province\") {\n                        appendSpan(foDiv, self.state.provinceName, true);\n                    } else {\n                        appendLink(foDiv, self.state.provinceName, \"province\", true);\n                        if (regionType == \"municipality\") {\n                            appendSpan(foDiv, self.state.muniCode, true);\n                        } else {\n                            appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                            appendSpan(foDiv, self.state.iecId, true);\n                        }\n                    }\n                }\n                // foDiv\n                //     .append(\"button\")\n                //     .attr(\"class\", \"go-back\")\n                //     .style(\"height\", \"30px\")\n                //     .style(\"color\", \"black\")\n                //     .html(\"go back\")\n                //     .on(\"click\", function() {\n                //         var regionType = self.state.regionType;\n                //         var newState, event;\n    \n                //         var newState = {\n                //             regionType: self.state.regionType, \n                //             provinceName: self.state.provinceName,\n                //             muniName: self.state.muniName,\n                //             muniImuniCodeD: self.state.muniCode,\n                //             iecId: self.state.iecId,\n                //         }\n                        \n                //         if (regionType === \"province\") {\n                //             newState.regionType = \"national\";\n                //         } else if (regionType === \"municipality\") {\n                //             newState.regionType = \"province\";\n                //         } else if (regionType === \"municipality-vd\") {\n                //             newState.regionType = \"municipality\";\n                //         }\n    \n                //         triggerCustomEvent(events.REGION_CHANGE, newState);\n                //         self.setState(newState);\n                //     });\n            }\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        }).catch(error => {\n            console.error(error);\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniImuniCodeD: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                alert(`${currentRegionName} has been disestablished`); \n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport svgToPng from \"save-svg-as-png\";\nimport canvg from \"canvg\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getTurnoutData,\n    getProvincesData\n} from \"../../api\";\nimport {\n  parseTurnoutData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar provincesData = getProvincesData();\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 11\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.componentID) {\n          this.state.componentID = props.componentID;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n        this.getContainer().selectAll(\"svg\").remove();\n        document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        console.log(\"componentDidUpdate\", this.state);\n        this.draw(this.getContainer(), this.state)\n    }\n\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n    \n            // var ctx = rendercanvas.getContext(\"2d\");\n            // ctx.globalCompositeOperation = \"source-out\";\n            // ctx.fillStyle = \"#ffffff\";\n            // ctx.fillRect(0, 0, rect.width, rect.height);\n\n            canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n        var canvas = rendercanvas, filename = `turnout-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor\n        } = this.state;\n        return (\n            <div className={className(\"map-container\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n \n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var turnoutDataLoader = getTurnoutData(props);\n        var dataLoaders = [geoJsonLoader, turnoutDataLoader];\n\n        Promise.all(dataLoaders).then(function(values){ \n            var geoJsonData = values[0];\n            var locationToTurnout = parseTurnoutData(values[1], props);      \n\n            function getMergedColorWithWhite(percent) {\n                var originRGB = {\n                    R: 0,\n                    G: 255,\n                    B: 0\n                }\n                var mixedR = (originRGB.R * (percent) + 255 * (100-percent))/100;\n                var mixedG = (originRGB.G * (percent) + 255 * (100-percent))/100;\n                var mixedB = (originRGB.B * (percent) + 255 * (100-percent))/100;\n                return `rgb(${mixedR},${mixedG},${mixedB})`;\n            }\n            function getFillColorFromTurnout(turnout) {\n              if (turnout > 65)\n                return \"#39711D\";//getMergedColorWithWhite(100);//\"rgb(0,165,138)\";\n              if (turnout >= 60)\n                return \"#458923\";//getMergedColorWithWhite(90);//\"rgb(4,68,95)\";\n              if (turnout >= 55)\n                return \"#53B025\";//getMergedColorWithWhite(80);//\"rgb(4,98,138)\";\n              if (turnout >= 50)\n                return \"#4BDC02\";//getMergedColorWithWhite(70);//\"rgb(4,117,164)\";\n              if (turnout >= 45)\n                return \"#7CE547\";//getMergedColorWithWhite(60);//\"rgb(4,136,191)\";\n              if (turnout >= 40)\n                return \"#93E968\";//getMergedColorWithWhite(50);//\"rgb(0,154,216)\";\n              if (turnout >= 35)\n                return \"#A6ED83\";//getMergedColorWithWhite(40);//\"rgb(77,174,224)\";\n              if (turnout >= 30)\n                return \"#C5F3AF\";//getMergedColorWithWhite(30);//\"rgb(124,194,231)\";\n              return \"#D3F6C3\";//regionColor;\n            }\n\n            function getTurnout(d, i) {\n                var turnout;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    turnout = locationToTurnout[provinceName];\n                } else if (regionType === \"province\") {\n                    var muniCode = getMunicipalityCode(d.properties);\n                    turnout = locationToTurnout[muniCode];\n                } else if (regionType === \"municipality\"){// \"municipality\"\n                    var iecId = getMunicipalityiecId(d.properties);\n                    turnout = locationToTurnout[iecId];\n                } else {// \"municipality-vd\"\n                    var iecId = getMunicipalityiecId(d.properties);\n                    turnout = locationToTurnout[iecId];\n                }\n                return turnout;\n            }\n            function getFillColorFromRegion(d, i) {\n                var turnout = getTurnout(d, i);\n                var fillColor = getFillColorFromTurnout(turnout);\n                return fillColor;\n            }\n            var jsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                var regionType = self.state.regionType\n                if (regionType == \"municipality\") {\n                    if (!geoJsonData.objects[self.state.muniCode])\n                        return;\n                    geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                } else { // \"municipality-vd\"\n                    if (!geoJsonData.objects[self.state.iecId])\n                        return;\n                    geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                }\n            }\n\n            jsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(jsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getFillColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            var turnoutColors = [{\n                text: \"More than 65%\",\n                turnout: 66\n            },{\n                text: \"60% - 65%\",\n                turnout: 60\n            },{\n                text: \"55% - 60%\",\n                turnout: 55\n            },{\n                text: \"50% - 55%\",\n                turnout: 50\n            },{\n                text: \"45% - 50%\",\n                turnout: 45\n            },{\n                text: \"40% - 45%\",\n                turnout: 40\n            },{\n                text: \"35% - 40%\",\n                turnout: 35\n            },{\n                text: \"30% - 35%\",\n                turnout: 30\n            },{\n                text: \"Less than 30%\",\n                turnout: 15\n            }];\n            \n            function getLegendXY(i) {\n                return [(i%5)*170, h + 10 + parseInt(i/5) * 40];\n            }\n            var legends = svg.selectAll(`.${className(\"legend\")}`)\n                .data(turnoutColors)\n                .enter()\n                .append('g')\n                .attr(\"class\", className(\"legend\"))\n                .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n            legends\n                .append(\"rect\")\n                .attr('width', 20)\n                .attr('height', 20)\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr(\"fill\", (it) => {\n                    return getFillColorFromTurnout(it.turnout);\n                })\n            legends.append('text')\n                .attr('x', 30)\n                .attr('y', 16)\n                .text(it => it.text)\n            \n            if (self.state.regionType !== \"municipality\") {\n                svg.selectAll(\".place-label\")\n                    .data(jsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(d => getSubRegionName(d.properties, self.state))\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                fixMapLabelIntersect();\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(jsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d, i) {\t\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n\n                    tooltipDiv.html(getSubRegionName(d.properties, self.state) + \" : \" + getTurnout(d, i) + \"%\")\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: getMunicipalityiecId(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n\n                        self.setState(newState);\n                    }\n                })\n                if (!self.state.disableNavigation) {\n                    var fo = svg.append(\"foreignObject\")\n                        .attr(\"x\", 0)\n                        .attr(\"y\", 10)\n                        .attr(\"width\", 500)\n                        .attr(\"height\", 30)\n                        .attr(\"class\", \"map-controls\")\n                    \n                    function setRegionType(regionType) {\n                        var newState;\n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniImuniCodeD: self.state.muniCode,\n                            iecId: self.state.iecId,\n                        }\n                        newState.regionType = regionType;\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    }\n    \n                    function appendSpan(foDiv, regionName, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"span\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"default\")\n                            .html(regionName);\n                    }\n    \n                    function appendLink(foDiv, regionName, regionType, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"a\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"pointer\")\n                            .html(regionName)\n                            .on(\"click\", function() {\n                                setRegionType(regionType);\n                            });\n                    }\n                    \n                    var foDiv = fo.append(\"xhtml:div\");\n                    var regionType = self.state.regionType;\n                    if (regionType == \"national\") {\n                        appendSpan(foDiv, \"South Africa\", false);\n                    } else {\n                        appendLink(foDiv, \"South Africa\", \"national\", false);\n                        if (regionType == \"province\") {\n                            appendSpan(foDiv, self.state.provinceName, true);\n                        } else {\n                            appendLink(foDiv, self.state.provinceName, \"province\", true);\n                            if (regionType == \"municipality\") {\n                                appendSpan(foDiv, self.state.muniCode, true);\n                            } else {\n                                appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                                appendSpan(foDiv, self.state.iecId, true);\n                            }\n                        }\n                    }\n                    // foDiv\n                    //     .append(\"button\")\n                    //     .attr(\"class\", \"go-back\")\n                    //     .style(\"height\", \"30px\")\n                    //     .style(\"color\", \"black\")\n                    //     .html(\"go back\")\n                    //     .on(\"click\", function() {\n                    //         var regionType = self.state.regionType;\n                    //         var newState, event;\n        \n                    //         var newState = {\n                    //             regionType: self.state.regionType, \n                    //             provinceName: self.state.provinceName,\n                    //             muniName: self.state.muniName,\n                    //             muniImuniCodeD: self.state.muniCode,\n                    //             iecId: self.state.iecId,\n                    //         }\n                            \n                    //         if (regionType === \"province\") {\n                    //             newState.regionType = \"national\";\n                    //         } else if (regionType === \"municipality\") {\n                    //             newState.regionType = \"province\";\n                    //         } else if (regionType === \"municipality-vd\") {\n                    //             newState.regionType = \"municipality\";\n                    //         }\n        \n                    //         triggerCustomEvent(events.REGION_CHANGE, newState);\n                    //         self.setState(newState);\n                    //     });\n                }\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        }).catch(error => {\n            console.error(error);       \n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniImuniCodeD: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                alert(`${currentRegionName} has been disestablished`); \n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getTurnoutDataForAllEvents,\n} from \"../../api\";\nimport {\n  parseTurnoutDataForAllEvents,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Turnout Barchart',\n  yAxisLabel: 'PERCENTAGE',\n  noXaxisByParty: true,\n  yValue: function(d) {\n    return d.percVoterTurnout;\n  },\n  yValueFormat: function(percVoterTurnout) {\n    return percVoterTurnout + '%';\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        eventType: \"national\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 10\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `turnout-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var turnoutDataLoader = getTurnoutDataForAllEvents(props);\n      var dataLoaders = [turnoutDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var turnoutData = values[0];\n        self.drawGraph(container, props, turnoutData, 'rgb(157,51,55)');\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, colorsData) {\n        var chartData = parseTurnoutDataForAllEvents(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, colorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport styles from \"./barchartMap.css\";\nimport BarChart from '../BarChart/barchart';\nimport Map from '../Map/map';\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport JSZip from \"jszip\";\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getRegionName\n} from \"../../utils\";\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarchartWithNavMap extends Component {    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 2\n        }\n        if (props.numParties) {\n            this.state.numParties = props.numParties;\n        }\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.componentID) {\n          this.state.componentID = props.componentID;\n        }\n\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var self = this;\n        Promise.all([\n            self.barchartInstance.exportAsPNGUri(),\n            self.mapInstance.exportAsPNGUri()\n        ]).then(values => {\n            console.log(\"exporting ...\");\n            var zip = new JSZip();\n\n            var imgs = zip.folder(\"export-images\");\n            imgs.file(\"barchart.png\", values[0], {base64: true});\n            imgs.file(\"map.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `race-for-votes-barchart-map(${getRegionName(self.state)}).zip`);\n                console.log(\"exporting ended successfully\");\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n\n    render() {\n      const {\n        stylesheetFor\n      } = this.state;\n\n        return (\n        <div ref=\"superwidget\" className={cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={className(\"barchart-container\")} ref=\"barchart\">\n                <BarChart \n                    ref={instance => { this.barchartInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n            <div className={className(\"map-container\")}>\n                <Map \n                    ref={instance => { this.mapInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BarchartWithNavMap;\n","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n    var data = [],\n        width = 700,\n        height = 300,\n        margin = {top: 10, right: 10, bottom: 10, left: 10},\n        variable = 'percent',\n        category = 'name',\n        padAngle = 0.015,\n        transTime = 750,\n        floatFormat = d3.format('.4r'),\n        cornerRadius = 3,\n        colorsData = null;\n\n    function colour(key) {\n        if (colorsData && colorsData[key]) {\n            return colorsData[key];\n        }\n        return 'rgb(' + Math.random()*250 + ',' + Math.random()*250 + ',' + Math.random()*250 + ')';\n    }\n\n    container.selectAll(\"svg\").remove();\n\n    var radius = Math.min(width, height) / 2;\n\n    var pie = d3.pie()\n        .value(function(d) { return floatFormat(d[variable]); })\n        .sort(null);\n\n    var arc = d3.arc()\n        .outerRadius(radius * 0.8)\n        .innerRadius(radius * 0.6)\n        .cornerRadius(cornerRadius)\n        .padAngle(padAngle);\n\n    var totalSvg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width + margin.left + margin.right) + \" \" + (height + margin.top + margin.bottom))\n        .classed(\"svg-content\", true);\n    \n    var svg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + height / 2 + ',' + height / 2 + ')');\n    \n    var labelSvg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + height * 6 / 5 + ',' + height / 2 + ')');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'lines');\n\n    var path = svg.select('.slices')\n        .selectAll('path')\n        .data(pie(data))\n        .enter().append('path')\n        .attr('fill', function(d) { return colour(d.data[category]); })\n        .attr('d', arc);\n\n    var errorText = svg.append(\"g\")\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\");\n      \n    this.destroy = function() {\n        container.selectAll(\"svg\").remove();\n    }\n    this.draw = function(value, colorsDataP) {\n        if (!value) {\n            errorText.text(\"chart data is not available\");\n            return;\n        } else {\n            errorText.text(\"\");\n        }\n        colorsData = colorsDataP;\n        data = value;\n\n        console.log(\"data\", data);\n\n        labelSvg.append('text')\n            .attr('x', 0)\n            .attr('y', -15)\n            .style('font-size', '.7em')\n            .style('text-anchor', 'middle')\n            .text('Completed' + ': ' + data[0][\"percent\"] + '%');\n        labelSvg.append('text')\n            .attr('x', 0)\n            .attr('y', 0)\n            .text('Captured Votes' + ': ' + data[0][\"count\"])\n            .style('font-size', '.7em')\n            .style('text-anchor', 'middle');\n        labelSvg.append('text')\n            .attr('x', 0)\n            .attr('y', 15)\n            .text('Total' + ': ' + data[0][\"totalCount\"])\n            .style('font-size', '.7em')\n            .style('text-anchor', 'middle');\n\n        var updatePath = d3.select('.slices').selectAll('path');\n\n        var data0 = path.data(),\n            data1 = pie(data);\n\n        updatePath = updatePath.data(data1, key);\n\n        updatePath.enter().append('path')\n            .each(function(d, i) { this._current = findNeighborArc(i, data0, data1, key) || d; })\n            .attr('fill', function(d) {  return colour(d.data[category]); })\n            .attr('d', arc);\n\n        updatePath.exit()\n            .transition()\n            .duration(transTime)\n            .attrTween(\"d\", arcTween)\n            .remove();\n\n        updatePath.transition().duration(transTime)\n            .attrTween('d', arcTween);\n\n        d3.selectAll('.labelName text, .slices path').call(toolTip);\n\n    };\n\n    function toolTip(selection) {\n\n        selection.on('mouseenter', function (data) {\n\n            svg.append('text')\n                .attr('class', 'toolCircle')\n                .attr('dy', -15)\n                .html(toolTipHTML(data))\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n\n            svg.append('circle')\n                .attr('class', 'toolCircle')\n                .attr('r', radius * 0.55)\n                .style('fill', colour(data.data[category]))\n                .style('fill-opacity', 0.35);\n\n        });\n\n        selection.on('mouseout', function () {\n            d3.selectAll('.toolCircle').remove();\n        });\n    }\n\n    function toolTipHTML(data) {\n\n        var tip = '';\n        tip += '<tspan x=\"0\">' + 'Progress' + ': ' + data.data[\"percent\"] + '%' + '</tspan>';\n        tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Captured Votes' + ': ' + data.data[\"count\"] + '</tspan>';\n        tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Total' + ': ' + data.data[\"totalCount\"] + '</tspan>';\n\n        return tip;\n    }\n\n    function arcTween(d) {\n        var i = d3.interpolate(this._current, d);\n        this._current = i(0);\n        return function(t) { return arc(i(t)); };\n    }\n\n    function findNeighborArc(i, data0, data1, key) {\n        var d;\n        return (d = findPreceding(i, data0, data1, key)) ? {startAngle: d.endAngle, endAngle: d.endAngle}\n            : (d = findFollowing(i, data0, data1, key)) ? {startAngle: d.startAngle, endAngle: d.startAngle}\n                : null;\n    }\n\n    function findPreceding(i, data0, data1, key) {\n        var m = data0.length;\n        while (--i >= 0) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n\n    function key(d) {\n        return d.data[category];\n    }\n\n    function findFollowing(i, data0, data1, key) {\n        var n = data1.length, m = data0.length;\n        while (++i < n) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"./d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getProgressVotesCount\n} from \"../../api\";\nimport {\n  parseProgressVotesCount,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Progress on Votes Count'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass PieChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 4\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `progress-on-votes-piechart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n   \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"piechart\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var progressVotesDataLoader = getProgressVotesCount(props);\n      var dataLoaders = [progressVotesDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var progressVotesData = values[0];\n        self.drawGraph(container, props, progressVotesData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseProgressVotesCount(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Completed\": \"#15707C\",\n          \"Not Completed\": \"#CCCCCC\"\n        });\n    }\n}\n\nexport default PieChart;\n","import React, { Component } from \"react\";\nimport MetisMenu from 'react-metismenu';\n\nimport config from '../../config'\nimport styles from \"./navbar.css\";\nimport events from \"../../events\";\nimport {\n    getProvincesData,\n    getMetrosData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cssPrefix(originName) {\n    return config.CSS_PREFIX+originName;\n}\n\nvar provincesData = getProvincesData();\nvar metrosData = getMetrosData();\n\n\nclass CustomLink extends React.Component {\n    constructor() {\n      super();\n  \n      this.onClick = this.onClick.bind(this);\n    }\n  \n    onClick(e) {\n      if (this.props.hasSubMenu) this.props.toggleSubMenu(e);\n      else {\n        this.props.activateMe({\n          newLocation: this.props.to,\n          selectedMenuLabel: this.props.label,\n        });\n      }\n    }\n  \n    render() {\n      return (\n        <div className=\"metismenu-link\" onClick={this.onClick}>\n          {this.props.children}\n        </div>\n      );\n    }\n  };\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            activeLinkId: ''\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        this.handleNavBarSelection = this.handleNavBarSelection.bind(this);\n    }\n\n    componentDidMount() {\n        if(!document.getElementById('navbarcss')) {\n            var link = document.createElement('link');\n            link.id = 'navbarcss';\n            link.rel = 'stylesheet';\n            link.href = config.DOMAIN + '/navbar.css';\n            document.head.appendChild(link);\n        }\n\n        if(!document.getElementById('font-awesome')) {\n            var link = document.createElement('link');\n            link.id = 'font-awesome';\n            link.rel = 'stylesheet';\n            link.href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\";\n            document.head.appendChild(link);\n        }\n\n        this.refs.navbar.addEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentWillUnmount() {\n        this.refs.navbar.removeEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentDidUpdate() {\n    }\n\n    handleNavBarSelection(e) {\n        if (e.target.className.indexOf(\"metismenu-link\") == -1) {\n            return;\n        }\n        var iconClass = e.target.childNodes[0].className;\n        var classList = iconClass.split(' ');\n        var lastClass = classList[classList.length - 1];\n        var passInfo = lastClass.split('-');\n\n        var regionType, selectionData = {};\n        var activeLinkId = '';\n\n        if (passInfo[1] == '1') {\n            regionType = \"national\";\n            activeLinkId = '1';\n        } else if (passInfo[1] == '2') {\n            regionType = \"province\";\n            selectionData = provincesData[passInfo[2]];\n        } else if (passInfo[1] == '3') { // muni level\n            regionType = \"municipality\";\n            selectionData = provincesData[passInfo[2]].munis[passInfo[3]];\n            activeLinkId = `3-${passInfo[2]}-${passInfo[3]}`;\n        } else if (passInfo[1] == '4') { // metros\n            regionType = \"municipality\"\n            selectionData = metrosData[passInfo[2]];\n            activeLinkId = `4-${passInfo[2]}`;\n        } else {\n            return;\n        }\n        \n        e.preventDefault();\n        var newState;\n        if (regionType == \"national\") {\n            newState = {regionType: regionType};\n            if (this.state.regionType == newState.regionType)\n                return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            if (this.state.regionType == newState.regionType && this.state.provinceName == newState.provinceName)\n                return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            if (this.state.regionType == newState.regionType \n                && this.state.provinceName == newState.provinceName\n                && this.state.newState == newState.muniName)\n                return;\n        }\n\n        triggerCustomEvent(events.REGION_CHANGE, newState);\n        triggerCustomEvent(events.MAP_PREVIEW, newState);\n\n        newState.activeLinkId = activeLinkId;\n        this.setState(newState);\n    }\n      \n    render () {\n        var content = [\n            {\n                icon: '1',\n                label: 'National',\n                to: '1',\n            },\n            {\n                icon: '',\n                label: 'Provinces',\n                content: provincesData.map((province, i) => {\n                    return {\n                        icon: `2-${i}`,\n                        label: province.name,\n                        to: `2-${i}`,\n                        // content: province.munis.map((muni, j) => {\n                        //     return {\n                        //         icon: `3-${i}-${j}`,\n                        //         label: muni.muniName.split(\"-\")[1].split(\"[\")[0],\n                        //         to: `3-${i}-${j}`,\n                        //     }\n                        // })\n                    }\n                })\n            },\n            {\n                icon: '',\n                label: 'Metros',\n                content: metrosData.map((metro, i) => {\n                    return {\n                        icon: `4-${i}`,\n                        label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                        to: `4-${i}`,\n                    }\n                })\n            }\n        ];\n        \n        return (\n            <div className={[className(cssPrefix(\"menu-widget\")), cssPrefix(\"menu-widget\")].join(\" \")} ref=\"navbar\">\n                <MetisMenu activeLinkId={this.state.activeLinkId} content={content} LinkComponent={CustomLink}/>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport styles from \"./quickResultsWidget.css\";\n\nimport config from '../../config'\nimport events from \"../../events\";\n\nimport BarChart from '../BarChart/barchart';\n\nimport ProgressVotesPieChart from '../ProgVotesCountPiechart/piechart';\n\nimport RaceForSeatBarChart from '../RaceForSeatBarchart/barchart';\n\nimport SpoiltBarChart from '../SpoiltBarchart/barchart';\n\nimport TurnoutBarchart from '../TurnoutBarchart/barchart';\nimport TurnoutMap from '../TurnoutMap/map';\n\nimport NavBar from '../NavBar/navbar';\nimport Map from '../Map/map';\n\nimport JSZip from \"jszip\";\nimport {saveAs} from \"file-saver\";\nimport {\n    getRegionName,\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n    return className(config.CSS_PREFIX + originName);\n}\n\nclass QuickResultsWidget extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            comp: \"race for votes\",\n            stylesheetFor: \"web\",\n            componentID: 5\n        }\n        if (props.numParties) {\n            this.state.numParties = props.numParties;\n        }\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        if (props.componentID) {\n          this.state.componentID = props.componentID;\n        }\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handleRegionChange = this.handleRegionChange.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.addEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.removeEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n    //   if (newState.regionType != \"municipality-vd\")\n        this.setState(newState)\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var {\n            comp\n        } = this.state;\n        var self = this;\n        var zipfileName = `quick-results-widget-${comp.replace(/\\s/gi, '-')}(${getRegionName(self.state)})`;\n        var imageLoadPromises = [];\n        if (comp == 'race for votes') {\n            imageLoadPromises = [\n                this.votesInstance1.exportAsPNGUri(), \n                this.votesInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'race for seats') {\n            imageLoadPromises = [\n                this.seatsInstance1.exportAsPNGUri(), \n                this.seatsInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'turnout') {\n            imageLoadPromises = [\n                this.turnoutInstance1.exportAsPNGUri(), \n                this.turnoutInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'counting progress') {\n            imageLoadPromises = [\n                this.progressInstance1.exportAsPNGUri(), \n                this.progressInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'spoilt votes') {\n            imageLoadPromises = [\n                this.spoiltInstance1.exportAsPNGUri(), \n                this.spoiltInstance2.exportAsPNGUri()\n            ];\n        }\n        Promise.all(imageLoadPromises).then(values => {\n            console.log(\"exporting ...\");\n            var zip = new JSZip();\n\n            var imgs = zip.folder(zipfileName);\n            imgs.file(\"image1.png\", values[0], {base64: true});\n            imgs.file(\"image2.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `${zipfileName}.zip`);\n                console.log(\"exporting ended successfully\");\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState);\n\n        triggerCustomEvent(events.CHART_PREVIEW, newState);\n        triggerCustomEvent(events.MAP_PREVIEW, newState);\n    };\n\n    render() {\n        var {\n            comp,\n            numParties,\n            eventDescription,\n            stylesheetFor,\n            regionType,\n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            comp\n        } = this.state;\n        return (\n            <div className={cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"row\") + \" \" + cn(\"component-transition-menu\")}>\n                    <div className={cn(\"col-md-2\") + \" \" + className(\"label\")}>\n                        Show Results \n                    </div>\n                    <div className={cn(\"col-md-2\")}>\n                        <button \n                            className={comp == 'race for votes'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'race for votes'})}> Race for votes </button>\n                    </div>\n                    <div className={cn(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'race for seats'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'race for seats'})}> Race for seats</button>\n                    </div>\n                    <div className={cn(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'turnout'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'turnout'})}> Turnout</button>\n                    </div>\n                    {\n                        (eventDescription.indexOf(\"2014\") != -1) &&\n                        <div className={cn(\"col-md-2\")}>\n                            <button  \n                                className={comp == 'counting progress'? className(\"active\") : \"\"} \n                                onClick={() => this.setState({comp: 'counting progress'})}> Counting progress </button>\n                        </div>\n                    }\n                    <div className={cn(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'spoilt votes'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'spoilt votes'})}> Spoilt Votes </button>\n                    </div>\n                </div>\n                <div className={cn(\"row\")}>\n                    <div className={cn(\"col-md-4\")+\" \"+className(\"main-left-part\")}>\n                        <NavBar />\n                    </div>\n                            {\n                                comp == 'race for votes' && \n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <BarChart \n                                            ref={instance => { this.votesInstance1 = instance; }} \n                                            {...this.state} \n                                            componentID={-1000}/>\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.votesInstance2 = instance; }} \n                                            {...this.state} \n                                            componentID={-1000}/>\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'race for seats' && \n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <RaceForSeatBarChart \n                                            ref={instance => { this.seatsInstance1 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.seatsInstance2 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'turnout' && \n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <TurnoutBarchart \n                                            ref={instance => { this.turnoutInstance1 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <TurnoutMap \n                                            ref={instance => { this.turnoutInstance2 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                </div>\n                                \n                            }\n                            {\n                                comp == 'counting progress' && \n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <ProgressVotesPieChart \n                                            ref={instance => { this.progressInstance1 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.progressInstance2 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'spoilt votes' &&\n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <SpoiltBarChart \n                                            ref={instance => { this.spoiltInstance1 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.spoiltInstance2 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                </div> \n                            }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuickResultsWidget;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Comparison',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 7\n      }\n      if (props.partyAbbr) {\n        this.state.partyAbbr = props.partyAbbr;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      \n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n    options = {};\n  } \n\n  width = 360;\n  height = 185;\n  container.selectAll(\"svg\").remove();\n\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width) + \" \" + (height))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n\n    var mainSvg = svg.append(\"g\");\n\n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(originChartData, colorsData) {\n      var chartData = [];\n      if (!originChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n\n      for(var i = originChartData.length - 1; i >= 0 ; i -=2) {\n        chartData.push(originChartData[i]);\n      }\n      for (i= -1 - i; i < originChartData.length; i += 2) {\n        chartData.push(originChartData[i]);\n      }\n\n\n      var partyColorByName = {};\n\n      var partyColorsData = colorsData;\n      if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n          partyColorByName[edge.node.name] = edge.node.colour;\n          })\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getTooltipText(d, i) {\n          return d.name;\n      }\n\n      var totalSeats = 0;\n      for (var i = 0; i < chartData.length; i ++) {\n        totalSeats += chartData[i].seats;\n      }\n\n      function pythonConvertedCode(totalSeats, mainSvg) {\n        var Totals=[ 3, 15, 33, 61, 95, 138, 189, 247, 313, 388, 469, 559, 657, 762, 876, 997, 1126, 1263, 1408, 1560, 1722, 1889, 2066, 2250, 2442, 2641, 2850, 3064, 3289, 3519, 3759, 4005, 4261, 4522, 4794, 5071, 5358, 5652, 5953, 6263, 6581, 6906, 7239, 7581, 7929, 8287, 8650, 9024, 9404, 9793, 10187, 10594, 11003, 11425, 11850, 12288, 12729, 13183, 13638, 14109, 14580, 15066, 15553, 16055, 16557, 17075, 17592, 18126, 18660, 19208, 19758, 20323, 20888, 21468, 22050, 22645, 23243, 23853, 24467, 25094, 25723, 26364, 27011, 27667, 28329, 29001, 29679, 30367, 31061]\n    \n        if (totalSeats > Totals[Totals.length-1]){\n            console.error(\"total seats >\", Totals[Totals.length-1]);\n        }\n    \n        if (totalSeats < 1) {\n          console.error(\"total seats < 1\");\n        }\n        var rows;\n        var radius;\n        var poslist;\n        var J, R, angle;\n          // Figure out how many rows are needed:\n          for (var i = 0; i < Totals.length; i ++ ){\n              if (Totals[i] >= totalSeats) {\n                  rows = i + 1;\n                  break\n              }\n          }\n          // Maximum radius of spot is 0.5/rows; leave a bit of space.\n          radius = 0.4/rows;\n    \n          // Create list of centre spots\n          poslist=[]\n          for( var i = 1; i < rows; i ++){\n            // Each row can contain pi/(2asin(2/(3n+4i-2))) spots, where n is the number of rows and i is the number of the current row.\n            J = parseInt((totalSeats)/Totals[rows-1]*Math.PI/(2*Math.asin(2.0/(3.0*rows+4.0*i-2.0))));\n            // The radius of the ith row in an N-row diagram (Ri) is (3*N+4*i-2)/(4*N)\n            R = (3.0*rows+4.0*i-2.0)/(4.0*rows);\n            if (J == 1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n            } else {\n              for (var j = 0; j < J; j ++){\n                // The angle to a spot is n.(pi-2sin(r/Ri))/(Ni-1)+sin(r/Ri) where Ni is the number in the arc\n                // x=R.cos(theta) + 1.75\n                // y=R.sin(theta)\n                angle = (j)*(Math.PI-2.0*Math.sin(radius/R))/(J-1.0)+Math.sin(radius/R);\n                poslist.push({\n                  angle,\n                  x: R*Math.cos(angle)+1.75,\n                  y: R*Math.sin(angle)\n                });\n              }\n            }\n          }\n          J=totalSeats-poslist.length\n          R=(7.0*rows-2.0)/(4.0*rows)\n          if (J==1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n          }\n          else {\n              for (var j = 0; j < J; j ++) {\n                  angle=(j)*(Math.PI-2.0*Math.sin(radius/R))/((J)-1.0)+Math.sin(radius/R)\n                  poslist.push({\n                    angle,\n                    x: R*Math.cos(angle)+1.75,\n                    y: R*Math.sin(angle)\n                  })\n              }\n          }\n\n          poslist.sort(function(a,b) {\n            function value(x) {\n              return x.angle - Math.PI/2;\n            }\n            return value(b) - value(a);\n          })\n\n          function onMouseMove(svg, i){\n            svg\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltipDiv.html(getTooltipText(chartData[i], i))\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n          }\n          function onMouseOut(svg) {\n            svg\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n          }\n          \n          mainSvg.append('text')\n            .attr('x', 175)\n            .attr('y', 175)\n            .attr('style', \"font-size:36px;font-weight:bold;text-align:center;text-anchor:middle;font-family:sans-serif\")\n            .text(totalSeats);\n\n          var Counter=0 //How many spots have we drawn?\n          for (var i = 0; i < chartData.length; i ++){\n            //Make each party's blocks an svg group\n            var partySvg = mainSvg.append('g')\n              .attr(\"fill\", getFillColorFromPartyName(chartData[i].partyInfo.name, i))\n              .attr(\"id\", chartData[i].name);\n            \n            partySvg.on(\"mousemove\", onMouseMove.bind(this, partySvg, i))\t\t\t\t\t\n              .on(\"mouseout\", onMouseOut.bind(this, partySvg))\n            \n            for (var j = 0; j < chartData[i].seats; j ++, Counter ++){\n              partySvg.append('circle')\n                .attr('cx', poslist[Counter].x*100.0+5.0)\n                .attr('cy', 100.0*(1.75-poslist[Counter].y)+5.0)\n                .attr('r', radius*100.0)\n            }\n          }\n      }\n      pythonConvertedCode(totalSeats, mainSvg);\n\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./horseshoe.css\";\nimport {Chart} from \"../SeatHorseShoeChart/d3horseshoe\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats HorseShoe Chart',\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass HorseShoeChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 8\n      }\n\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-horseshoe-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"horseshoechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default HorseShoeChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonData,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes Comparison\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%'\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 16\n      }\n      if (props.partyAbbr) {\n        this.state.partyAbbr = props.partyAbbr;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonData(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName} from \"../../utils\";\nimport config from \"../../config\"\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      console.log(\"groupChartData\", groupChartData);\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      // svg.append(\"text\")\n      //   .attr(\"text-anchor\", \"end\")\n      //   .attr(\"x\", width)\n      //   .attr(\"y\", 40)\n      //   .text(options.usedValue);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(groupChartData.map(item => d3.max(item.data, function(d) { return options.yValue(d); }))) + 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(groupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${d.partyAbbr}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append('rect')\n        .attr('class', className(config.CSS_PREFIX + \"grouprect\"))\n        .attr('x', -x.bandwidth()*1/12)\n        .attr('y', YaxisOffset - 85)\n        .attr('width', x.bandwidth()*5/6)\n        .attr('height', 120 + height - YaxisOffset);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"baraxistext-container\");\n      \n      for (var i = 0; i < groupChartData.length; i ++) {\n        var partyAbbr = groupChartData[i].partyAbbr;\n        var chartData = groupChartData[i].data;\n\n        var subX = d3.scaleBand()\n          .rangeRound([0, x.bandwidth()*2/3])\n          .domain(chartData.map(function (d) {\n            return d.name;\n          }));\n\n        var groupSvg = svg.selectAll(`.bar-group.${partyAbbr}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n        var barAxisTextSvg = groupSvg.select(\".baraxistext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n    \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", function (d, i) {\n              return subX(d.name)+subX.bandwidth()/4;\n            })\n            .attr(\"width\", subX.bandwidth()*1/2)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d)));\n            })\n            .attr(\"height\", function (d) {\n              return height - y(Number(options.yValue(d)));\n            })\n            \n\n          var barAxisTexts = barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barAxisTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barAxisTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) + 18;\n            })\n          barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return /(19|20)\\d{2}/g.exec(d.name)[0];\n            });\n            \n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return options.yValueFormat(options.yValue(d));\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d))) - 5;\n            })\n      }\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 12\n      }\n      if (props.partyAbbrs) {\n        this.state.partyAbbrs = props.partyAbbrs;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n      \n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Seats Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Seats Comparison - ${getNationOrProvinceName(props)}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName} from \"../../utils\";\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(d.delta);\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(d.delta);\n        }\t\n      }\n\n      var newGroupChartData = groupChartData.map(item => {\n        var chartData = item.data;\n        return {\n          ...item,\n          data: [{\n            ...chartData[1],\n            delta: options.yValue(chartData[1]) - options.yValue(chartData[0])\n          }]\n        }\n      });\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [-100, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(newGroupChartData.map(item => item.data[0].delta)) + 1\n        minMaxY[0] = d3.min(newGroupChartData.map(item => item.data[0].delta)) - 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(newGroupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${d.partyAbbr}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n      \n      for (var i = 0; i < newGroupChartData.length; i ++) {\n        var partyAbbr = newGroupChartData[i].partyAbbr;\n        var deltaData = newGroupChartData[i].data;\n\n        var groupSvg = svg.selectAll(`.bar-group.${partyAbbr}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData);\n\n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", x.bandwidth()/6)\n            .attr(\"width\", x.bandwidth()*1/3)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return Math.min(y(Number(d.delta)), y(0));\n            })\n            .attr(\"height\", function (d) {\n              return Math.abs(y(Number(d.delta)) - y(0));\n            })\n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return x.bandwidth()/3;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"12px\")\n            .attr(\"y\", function(d) {\n              if (d.delta > 0)\n                return y(0) - 5;\n              return y(0) + 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData)\n            .text(function(d) {\n              return options.yValueFormat(d.delta);\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              var barTextYDelta = 0;\n              if (d.delta > 0) {\n                barTextYDelta = -5;\n              } else {\n                barTextYDelta = 15;\n              }\n              return y(Number(d.delta)) + barTextYDelta;\n            })\n      }\n\n      svg.selectAll(\".xAxisLine\").remove();\n      var axisThick = 2;\n      svg.append('line')\n        .attr('class', 'xAxisLine')\n        .attr('stroke-width', axisThick)\n        .attr('stroke', \"currentColor\")\n        .attr('x1', XaxisOffset)\n        .attr('y1', y(0)-axisThick/2)\n        .attr('x2', width)\n        .attr('y2', y(0)-axisThick/2)\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 13\n      }\n      if (props.partyAbbrs) {\n        this.state.partyAbbrs = props.partyAbbrs;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-swing-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getNationOrProvinceName(props)}: Swing ${years}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 14\n      }\n      if (props.partyAbbrs) {\n        this.state.partyAbbrs = props.partyAbbrs;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n      \n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Votes Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Votes Comparison - ${getRegionName(props)}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => (value > 0? '+': '') + (value.toFixed(2)) + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 15\n      }\n      if (props.partyAbbrs) {\n        this.state.partyAbbrs = props.partyAbbrs;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-swing-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      \n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getRegionName(props)}: Swing ${years}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","export {default as BarChart} from \"./BarChart/barchart\";\nexport {default as RaceForSeatsBarChart} from \"./RaceForSeatBarchart/barchart\";\nexport {default as SpoiltBarChart} from \"./SpoiltBarchart/barchart\";\nexport {default as Map} from \"./Map/map\";\nexport {default as TurnoutMap} from \"./TurnoutMap/map\";\nexport {default as TurnoutBarChart} from \"./TurnoutBarchart/barchart\";\nexport {default as BarchartWithNavMap} from \"./BarchartWithNavMap/barchartMap\";\nexport {default as QuickResultsWidget} from \"./QuickResultsWidget/quickResultsWidget\";\nexport {default as ProgVotesCountPiechart} from \"./ProgVotesCountPiechart/piechart\";\nexport {default as RaceForSeatsComparisonBarChart} from \"./SeatCompBarchart/barchart\";\nexport {default as SeatHorseShoeChart} from \"./SeatHorseShoeChart/horseshoe\";\nexport {default as VoteComparisonBarchart} from \"./VoteCompBarchart/barchart\";\n\nexport {default as TVSeatCompBarchart} from \"./TVSeatCompBarchart/barchart\";\nexport {default as TVSeatSwingBarchart} from \"./TVSeatSwingBarchart/barchart\";\nexport {default as TVVoteCompBarchart} from \"./TVVoteCompBarchart/barchart\";\nexport {default as TVVoteSwingBarchart} from \"./TVVoteSwingBarchart/barchart\";\n\n\n\n","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\",\n    \"CSS_PREFIX\": \"ELVIZ_\"\n}\n\nexport default config;","const REGION_CHANGE = \"region-change\";\nconst CHART_PREVIEW = \"chart-preview\";\nconst MAP_PREVIEW = \"map-preview\";\nconst QUICK_RESULTS_PREVIEW = \"quick-results-preview\"\nconst EXPORT_PNG = \"export-png\";\nconst EXPORT_SUPERWIDGET_PNG = \"export-superwidget-png\";\n\nexport default {\n    REGION_CHANGE,\n    CHART_PREVIEW,\n    MAP_PREVIEW,\n    QUICK_RESULTS_PREVIEW,\n    EXPORT_PNG\n};","import * as d3 from \"d3\";\nimport config from \"../config\";\n\nfunction calcPercent(a, b) {\n  if (b == 0) {\n    return 0;\n  } else {\n    return (a/b*100).toFixed(2);\n  }\n}\n\nexport function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n    results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n\n    results = results.slice(0, props.numParties);\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            validVotes: el[\"validVotes\"],\n            percOfVotes: el[\"percOfVotes\"],\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function parseVotesComparisonData(data, props) {\n  var results, edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else { //\"municipality-vd\"\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n\n  var partyfilter_edges = edges.map(edge => {\n    var nodeData = edge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"].filter(a => a.node[\"party\"][\"abbreviation\"] == props.partyAbbr);\n    var result = results[0];\n    if (result) {\n      var el = result[\"node\"];\n      return {\n          name: nodeData[\"event\"][\"description\"],\n          percOfVotes: el[\"percOfVotes\"],\n          partyInfo: el[\"party\"]\n      }\n    }\n    return {\n      name: nodeData[\"event\"][\"description\"],\n      percOfVotes: 0,\n      partyInfo: {\n        name: props.partyAbbr,\n        abbreviation: props.partyAbbr,\n      }\n    }\n  });\n  var results = partyfilter_edges.filter(edge => props.eventDescriptions.indexOf(edge.name) != -1).reverse();\n\n  var new_results = [];\n  for(var i = 0; i < props.eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == props.eventDescriptions[i]) {\n        var available = true;\n        new_results.push(results[j]);\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: props.eventDescriptions[i],\n        percOfVotes: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n  return new_results;\n}\n\nexport function parseVotesComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map(partyAbbr => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    return {\n      partyAbbr,\n      data: parseVotesComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseProgressVotesCount(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"progress votes count data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Completed\",\n      percent: calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdWithResultsCaptured\"]\n    }, {\n      name: \"Not Completed\",\n      percent: 100 - calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdCount\"] - nodeData[\"vdWithResultsCaptured\"]\n    }\n  ]\n}\n\n// export function parseMainPartyData(data, props) {\n//     if (!data)  return null;\n//     var locationToMainParty = {};\n//     var edges;\n//     var regionType = props.regionType;\n//     var sort_results = function(party_results) {\n//         party_results[\"edges\"] = party_results[\"edges\"].sort(function(a, b) {\n//             return b.node.percOfVotes - a.node.percOfVotes;\n//         })\n//         return party_results;\n//     }\n//     if (regionType === \"national\") {\n//         edges = data[\"data\"][\"allProvincialBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var provinceName = node[\"location\"][\"name\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[provinceName] = partyName;\n//         })\n//     } else if (regionType === \"province\") {\n//         edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var muniCode = node[\"location\"][\"code\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[muniCode] = partyName;\n//         })\n//     } else {// \"municipality\"\n//         edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var iecId = node[\"location\"][\"iecId\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[iecId] = partyName;\n//         })\n//     }\n//     return locationToMainParty;\n// }\n\n\n\nexport function parseMainPartyData(data, props) {\n  if (!data)  return null;\n  var locationToMainParty = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"topPartiesByProvince\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[provinceName] = partyName;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"topPartiesByMunicipality\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[muniCode] = partyName;\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"topPartiesByVotingDistrict\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[iecId] = partyName;\n      })\n  }\n  return locationToMainParty;\n}\n\nexport function parseSeatsData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"abbreviation\"],\n      partyInfo: node[\"party\"]\n    }\n  })\n  \n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return results.slice(0, props.numParties);\n}\n\nexport function parseSeatsComparisonData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"event\"][\"description\"],\n      partyInfo: node[\"party\"]\n    }\n  }).filter(result => props.eventDescriptions.indexOf(result.name) != -1)\n  .filter(result => result.partyInfo[\"abbreviation\"] == props.partyAbbr)\n\n  var new_results = [];\n  for(var i = 0; i < props.eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == props.eventDescriptions[i]) {\n        var available = true;\n        new_results.push(results[j]);\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: props.eventDescriptions[i],\n        seats: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n      // name: nodeData[\"event\"][\"description\"],\n      // percOfVotes: 0,\n      // partyInfo: {\n      //   name: props.partyAbbr,\n      //   abbreviation: props.partyAbbr,\n      // }\n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return new_results;\n}\n\nexport function parseSeatsComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map(partyAbbr => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    return {\n      partyAbbr,\n      data: parseSeatsComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseTurnoutData(data, props) {\n  if (!data)  return null;\n  var locationToTurnout = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[provinceName] = percVoterTurnout;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[muniCode] = percVoterTurnout;\n      })\n  } else {// \"municipality\" or \"municipality-vd\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[iecId] = percVoterTurnout;\n      })\n  }\n  return locationToTurnout;\n}\n\nexport function parseTurnoutDataForAllEvents(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"]; \n    return {\n      name: event,\n      percVoterTurnout\n    }\n  }).filter(edge => edge.name.toLowerCase().indexOf(props.eventType) != -1)\n}\n\nexport function parseSpoiltVotesData(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"spoilt data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Valid\",\n      percent: calcPercent(nodeData[\"totalValidVotes\"], nodeData[\"totalVotesCast\"])\n    }, {\n      name: \"Spoilt\",\n      percent: calcPercent(nodeData[\"spoiltVotes\"], nodeData[\"totalVotesCast\"])\n    }\n  ]\n}\n\nexport function getRegionName(state) {\n  function beautifiedMuniName(muniName) {\n    if (muniName.indexOf(\" - \") != -1) {\n        muniName = muniName.split(\" - \")[1];\n    }\n    if (muniName.indexOf(\"[\") != -1) {\n        muniName = muniName.split(\"[\")[0];\n    }\n    return muniName;\n  }\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  if (state.regionType == \"province\") {\n    return state.provinceName;\n  }\n  if (state.regionType == \"municipality\") {\n    return beautifiedMuniName(state.muniName);\n  }\n  if (state.regionType == \"municipality-vd\") {\n    return beautifiedMuniName(state.muniName) + \"-\" + state.iecId;\n  }\n}\n\nexport function getNationOrProvinceName(state) {\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  return state.provinceName;\n}\n\nexport function createTooltip(className) {\n  var tooltipClassName = className(config.CSS_PREFIX + \"tooltip\")\n  if (document.getElementsByClassName(tooltipClassName)[0]) {\n    return d3.select(`.${tooltipClassName}`);\n  } else {\n    return d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", tooltipClassName)\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n}\n\n\n\nexport function fixMapLabelIntersect() {\n  var labelElements = document.getElementsByClassName(\"place-label\");\n  var regions = {};\n  var overlapCnt = {};\n  var i;\n\n  for (i = 0; i < labelElements.length; i ++) {\n      regions[i] = labelElements[i].getBoundingClientRect();\n  }\n\n  for (i = 0; i < labelElements.length; i ++) {\n      for (var j = 0; j < i; j ++) {\n          var rect1 = regions[i];\n          var rect2 = regions[j];\n          var overlap = !(rect1.right < rect2.left || \n              rect1.left > rect2.right || \n              rect1.bottom < rect2.top || \n              rect1.top > rect2.bottom);\n          if (overlap) {\n              overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n          }\n      }\n      if (overlapCnt[i] > 2) {\n          labelElements[i].setAttribute(\"opacity\", 0)\n      } else if (overlapCnt[i] > 0){\n          labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n      } else {\n\n      }\n  }\n}\n\nexport function triggerCustomEvent(eventName, eventParam) {\n  var event = new CustomEvent(eventName, { detail: eventParam });\n  document.dispatchEvent(event);\n}\n\nexport function formatPartyName(name) {\n  return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n}\n\nexport function getSubRegionName(properties, state) {\n  if (state.regionType === \"national\") {\n      return properties.SPROVINCE;\n  } else if (state.regionType === \"province\") {\n      return properties.smunicipal && properties.smunicipal.split(\" - \")[1].split(\"[\")[0]; \n  } else {//municipality\n    if (properties.Municipali) {\n      return properties.Municipali.split(\" - \")[1].split(\"[\")[0];\n    }\n    return properties.SMUNICIPAL && properties.SMUNICIPAL.split(\" - \")[1].split(\"[\")[0]; \n  }\n}\n\nexport function getMunicipalityCode(properties) {\n  return properties.code || (properties.smunicipal && properties.smunicipal.split(\" - \")[0].replace(/\\s/g, \"\"));\n}\n\nexport function getMunicipalityiecId(properties) {\n  return properties.VDNumber || properties.PKLVDNUMBE;\n}\n\nexport function getRegionFileName(state) {\n  var nationalMapFile = \"province_lo-res.geojson\";\n  function getProvinceFileName(provinceName) {\n      var provinceNameToFileMap = {\n          \"Limpopo\": \"lim_lo-res.geojson\",\n          \"Mpumalanga\": \"mp_lo-res.geojson\",\n          \"Gauteng\": \"gt_lo-res.geojson\",\n          \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n          \"North West\": \"nw_lo-res.geojson\",\n          \"Free State\": \"fs_lo-res.geojson\",\n          \"Eastern Cape\": \"ec_lo-res.geojson\",\n          \"Northern Cape\": \"nc_lo-res.geojson\",\n          \"Western Cape\": \"wc_lo-res.geojson\",\n      }\n      return provinceNameToFileMap[provinceName];\n  }\n  switch(state.regionType) {\n      case \"national\":\n          return nationalMapFile;\n      case \"province\":\n          return getProvinceFileName(state.provinceName);\n      case \"municipality\":\n          return state.muniCode + \".topojson\";//\".geojson\";\n      case \"municipality-vd\":\n          return \"vd-data/\" + state.muniCode + \"-\" + state.iecId + \".topojson\"; //\".geojson\";\n      default:\n          return null;\n  }\n}"],"sourceRoot":""}