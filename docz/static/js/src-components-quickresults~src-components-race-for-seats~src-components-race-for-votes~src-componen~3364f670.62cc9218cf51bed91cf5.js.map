{"version":3,"sources":["webpack:///./src/api/config.js","webpack:///./src/api/race-for-seats.js","webpack:///./src/api/race-for-votes.js","webpack:///./src/api/turnout.js","webpack:///./src/api/spoilt.js","webpack:///./src/api/prog-votescount.js","webpack:///./src/api/index.js","webpack:///./src/components/BarChart/barchart.css","webpack:///./src/components/BarChart/barchartEmbed.css","webpack:///./src/components/BarchartWithNavMap/barchartMap.css","webpack:///./src/components/BarchartWithNavMap/barchartMapEmbed.css","webpack:///./src/components/Map/map.css","webpack:///./src/components/Map/mapEmbed.css","webpack:///./src/components/NavBar/navbar.css","webpack:///./src/components/ProgVotesCountPiechart/piechart.css","webpack:///./src/components/ProgVotesCountPiechart/piechartEmbed.css","webpack:///./src/components/QuickResultsWidget/quickResultsWidget.css","webpack:///./src/components/QuickResultsWidget/quickResultsWidgetEmbed.css","webpack:///./src/components/RaceForSeatBarchart/barchartEmbed.css","webpack:///./src/components/SeatCompBarchart/barchartEmbed.css","webpack:///./src/components/SeatHorseShoeChart/horseshoe.css","webpack:///./src/components/SeatHorseShoeChart/horseshoeEmbed.css","webpack:///./src/components/SpoiltBarchart/barchartEmbed.css","webpack:///./src/components/TVSeatCompBarchart/barchartEmbed.css","webpack:///./src/components/TVSeatSwingBarchart/barchartEmbed.css","webpack:///./src/components/TVVoteCompBarchart/barchartEmbed.css","webpack:///./src/components/TVVoteSwingBarchart/barchartEmbed.css","webpack:///./src/components/TurnoutBarchart/barchartEmbed.css","webpack:///./src/components/TurnoutMap/mapEmbed.css","webpack:///./src/components/VoteCompBarchart/barchartEmbed.css","webpack:///./src/components/embedBase.js","webpack:///./src/components/BarChart/barchartEmbed.js","webpack:///./src/components/RaceForSeatBarchart/barchartEmbed.js","webpack:///./src/components/SpoiltBarchart/barchartEmbed.js","webpack:///./src/components/Map/mapEmbed.js","webpack:///./src/components/TurnoutMap/mapEmbed.js","webpack:///./src/components/TurnoutBarchart/barchartEmbed.js","webpack:///./src/components/BarchartWithNavMap/barchartMapEmbed.js","webpack:///./src/components/QuickResultsWidget/quickResultsWidgetEmbed.js","webpack:///./src/components/ProgVotesCountPiechart/piechartEmbed.js","webpack:///./src/components/SeatCompBarchart/barchartEmbed.js","webpack:///./src/components/SeatHorseShoeChart/horseshoeEmbed.js","webpack:///./src/components/VoteCompBarchart/barchartEmbed.js","webpack:///./src/components/TVSeatCompBarchart/barchartEmbed.js","webpack:///./src/components/TVSeatSwingBarchart/barchartEmbed.js","webpack:///./src/components/TVVoteCompBarchart/barchartEmbed.js","webpack:///./src/components/TVVoteSwingBarchart/barchartEmbed.js","webpack:///./src/components/embed.js","webpack:///./src/components/BarChart/d3barchart.js","webpack:///./src/components/BarChart/barchart.js","webpack:///./src/components/RaceForSeatBarchart/barchart.js","webpack:///./src/components/SpoiltBarchart/barchart.js","webpack:///./src/components/Map/map.js","webpack:///./src/components/TurnoutMap/map.js","webpack:///./src/components/TurnoutBarchart/barchart.js","webpack:///./src/components/BarchartWithNavMap/barchartMap.js","webpack:///./src/components/ProgVotesCountPiechart/d3piechart.js","webpack:///./src/components/ProgVotesCountPiechart/piechart.js","webpack:///./src/components/NavBar/navbar.js","webpack:///./src/components/QuickResultsWidget/quickResultsWidget.js","webpack:///./src/components/SeatCompBarchart/barchart.js","webpack:///./src/components/SeatHorseShoeChart/d3horseshoe.js","webpack:///./src/components/SeatHorseShoeChart/horseshoe.js","webpack:///./src/components/VoteCompBarchart/barchart.js","webpack:///./src/components/TVVoteCompBarchart/d3groupbarchart.js","webpack:///./src/components/TVSeatCompBarchart/barchart.js","webpack:///./src/components/TVVoteSwingBarchart/d3deltabarchart.js","webpack:///./src/components/TVSeatSwingBarchart/barchart.js","webpack:///./src/components/TVVoteCompBarchart/barchart.js","webpack:///./src/components/TVVoteSwingBarchart/barchart.js","webpack:///./src/components/index.js","webpack:///./src/config/index.js","webpack:///./src/events/index.js","webpack:///./src/utils/index.js"],"names":["client","ApolloClient","link","bundle_esm","uri","useGETForQueries","headers","Content-Type","cache","inMemoryCache","getSeatsDataForComparison","options","query","gql","_templateObject","_templateObject2","provinceName","getSeatsData","eventDescription","_templateObject3","_templateObject4","getVotesDataForComparison","race_for_votes_templateObject","race_for_votes_templateObject2","muniCode","race_for_votes_templateObject3","race_for_votes_templateObject4","iecId","getVotesDataM","_templateObject5","_templateObject6","_templateObject7","_templateObject8","getMainParties","_templateObject9","_templateObject10","_templateObject11","getTurnoutData","turnout_templateObject","turnout_templateObject2","muniRegName","turnout_templateObject3","getTurnoutDataForAllEvents","turnout_templateObject4","turnout_templateObject5","turnout_templateObject6","turnout_templateObject7","getSpoiltData","spoilt_templateObject","spoilt_templateObject2","spoilt_templateObject3","spoilt_templateObject4","getProgressVotesCount","prog_votescount_templateObject","prog_votescount_templateObject2","prog_votescount_templateObject3","prog_votescount_templateObject4","getElectionEvents","api_templateObject","getPartyColors","api_templateObject2","getProvincesData","name","abbreviation","munis","muniName","getMetrosData","module","exports","ELVIZ_chart-title","ELVIZ_percentage-label","ELVIZ_tooltip","ELVIZ_grouprect","barchart","ELVIZ_stylesheet-tv","embedcode","barchart-map","ELVIZ_map-title","ELVIZ_loading-spinner","map-widget","legend","ELVIZ_stylesheet-web","ELVIZ_stylesheet-none","ELVIZ_menu-widget","piechart","ELVIZ_component-transition-menu","label","active","quickresultswidget","ELVIZ_row","ELVIZ_col-md-2","ELVIZ_col-md-4","ELVIZ_col-md-8","multievent-container","horseshoechart","multiparties-container","EmbedBase","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","loadScriptsForEmbedMode","Component","react_default","a","createElement","provincesData","className","originClassName","bootstrapStyles","styles","BarChartEmbed","barchartEmbed_classCallCheck","barchartEmbed_possibleConstructorReturn","barchartEmbed_getPrototypeOf","state","elementId","regionType","numParties","electionEvents","stylesheetFor","componentID","self","data","edge","error","console","e","setState","value","newState","triggerCustomEvent","events","CHART_PREVIEW","EXPORT_PNG","_this2","DOMAIN","config","_this$state","curProvinceData","item","type","placeholder","onChange","onEventDescriptionChange","bind","key","onRegionTypeChange","province","muni","onClick","onPreview","onExportAsPNG","concat","replace","BarChart_barchartEmbed","barchartEmbed_className","RaceForSeatBarchart_barchartEmbed_classCallCheck","RaceForSeatBarchart_barchartEmbed_possibleConstructorReturn","RaceForSeatBarchart_barchartEmbed_getPrototypeOf","disabled","components_RaceForSeatBarchart_barchartEmbed","SpoiltBarchart_barchartEmbed_className","SpoiltBarchart_barchartEmbed_classCallCheck","SpoiltBarchart_barchartEmbed_possibleConstructorReturn","SpoiltBarchart_barchartEmbed_getPrototypeOf","components_SpoiltBarchart_barchartEmbed","mapEmbed_className","MapEmbed","mapEmbed_classCallCheck","mapEmbed_possibleConstructorReturn","mapEmbed_getPrototypeOf","disableNavigation","loadCanvg","MAP_PREVIEW","checked","Map_mapEmbed","TurnoutMap_mapEmbed_className","TurnoutMap_mapEmbed_classCallCheck","TurnoutMap_mapEmbed_possibleConstructorReturn","TurnoutMap_mapEmbed_getPrototypeOf","components_TurnoutMap_mapEmbed","TurnoutBarchart_barchartEmbed_className","TurnoutBarchart_barchartEmbed_classCallCheck","TurnoutBarchart_barchartEmbed_possibleConstructorReturn","TurnoutBarchart_barchartEmbed_getPrototypeOf","eventType","components_TurnoutBarchart_barchartEmbed","barchartMapEmbed_className","BarChartWithNavMapEmbed","barchartMapEmbed_classCallCheck","barchartMapEmbed_possibleConstructorReturn","barchartMapEmbed_getPrototypeOf","barchartMapEmbed_assertThisInitialized","EXPORT_SUPERWIDGET_PNG","BarchartWithNavMap_barchartMapEmbed","quickResultsWidgetEmbed_className","QuickResultsWidgetEmbed","quickResultsWidgetEmbed_classCallCheck","quickResultsWidgetEmbed_possibleConstructorReturn","quickResultsWidgetEmbed_getPrototypeOf","QUICK_RESULTS_PREVIEW","QuickResultsWidget_quickResultsWidgetEmbed","piechartEmbed_className","PieChartEmbed","piechartEmbed_classCallCheck","piechartEmbed_possibleConstructorReturn","piechartEmbed_getPrototypeOf","ProgVotesCountPiechart_piechartEmbed","SeatCompBarchart_barchartEmbed_className","SeatCompBarchart_barchartEmbed_classCallCheck","SeatCompBarchart_barchartEmbed_possibleConstructorReturn","SeatCompBarchart_barchartEmbed_getPrototypeOf","eventDescriptions","partyAbbr","allParties","thing","index","t","values","i","l","length","selected","multiple","party","JSON","components_SeatCompBarchart_barchartEmbed","horseshoeEmbed_className","HorseShoeEmbed","horseshoeEmbed_classCallCheck","horseshoeEmbed_possibleConstructorReturn","horseshoeEmbed_getPrototypeOf","SeatHorseShoeChart_horseshoeEmbed","VoteCompBarchart_barchartEmbed_className","VoteCompBarchart_barchartEmbed_classCallCheck","VoteCompBarchart_barchartEmbed_possibleConstructorReturn","VoteCompBarchart_barchartEmbed_getPrototypeOf","components_VoteCompBarchart_barchartEmbed","TVSeatCompBarchart_barchartEmbed_className","TVSeatCompBarchart_barchartEmbed_classCallCheck","TVSeatCompBarchart_barchartEmbed_possibleConstructorReturn","TVSeatCompBarchart_barchartEmbed_getPrototypeOf","partyAbbrs","onPartyAbbrsChange","formatPartyName","components_TVSeatCompBarchart_barchartEmbed","TVSeatSwingBarchart_barchartEmbed_className","TVSeatSwingBarchart_barchartEmbed_classCallCheck","TVSeatSwingBarchart_barchartEmbed_possibleConstructorReturn","TVSeatSwingBarchart_barchartEmbed_getPrototypeOf","event","components_TVSeatSwingBarchart_barchartEmbed","TVVoteCompBarchart_barchartEmbed_className","TVVoteCompBarchart_barchartEmbed_classCallCheck","TVVoteCompBarchart_barchartEmbed_possibleConstructorReturn","TVVoteCompBarchart_barchartEmbed_getPrototypeOf","components_TVVoteCompBarchart_barchartEmbed","TVVoteSwingBarchart_barchartEmbed_className","TVVoteSwingBarchart_barchartEmbed_classCallCheck","TVVoteSwingBarchart_barchartEmbed_possibleConstructorReturn","TVVoteSwingBarchart_barchartEmbed_getPrototypeOf","components_TVVoteSwingBarchart_barchartEmbed","__webpack_require__","d","__webpack_exports__","Chart","container","width","height","chartType","yAxisLabel","yValue","percOfVotes","yValueFormat","predefColors","svg","tooltipDiv","createTooltip","x","d3","y","barSvg","barTextSvg","errorText","draw","chartData","colorsData","partyColorByName","noXaxisByParty","partyColorsData","minMaxY","dynamicYAxisFromValues","bars","getFillColor","getTooltipText","pageX","Number","barTexts","_typeof","partyName","getFillColorFromPartyName","destroy","barchart_partyColorsData","barchart_className","originName","cn","chartOptions","BarChart","_assertThisInitialized","chart","refreshIntervalID","exportAsPNG","exportAsPNGUri","handleRegionChange","handlePreviewEvent","getContainer","setInterval","document","clearInterval","detail","targetState","svgToPng","refs","vizcontainer","childNodes","getRegionName","Promise","resolve","reject","ref","dataLoaders","partyColorsLoader","votesData","parseVotesData","BarChart_barchart","RaceForSeatBarchart_barchart_partyColorsData","seats","RaceForSeatBarchart_barchart_className","barchart_cn","barchart_classCallCheck","barchart_getPrototypeOf","barchart_assertThisInitialized","getNationOrProvinceName","barchart_chartOptions","seatsData","parseSeatsData","RaceForSeatBarchart_barchart","percent","SpoiltBarchart_barchart_className","SpoiltBarchart_barchart_cn","SpoiltBarchart_barchart_classCallCheck","SpoiltBarchart_barchart_possibleConstructorReturn","SpoiltBarchart_barchart_getPrototypeOf","SpoiltBarchart_barchart_assertThisInitialized","SpoiltBarchart_barchart_chartOptions","spoiltData","parseSpoiltVotesData","Valid","Spoilt","SpoiltBarchart_barchart","map_partyColorsData","regionColor","map_className","map_cn","Map","map_classCallCheck","map_getPrototypeOf","map_assertThisInitialized","drawGraph","selectAll","remove","rect","rendercanvas","window","ignoreDimensions","scaleWidth","scaleHeight","canvg","canvas","filename","lnk","createEvent","fireEvent","loading","react_loading_default","color","fullRouteGeoJsonFile","getRegionFileName","h","all","then","geoJsonData","locationToMainParty","parseMainPartyData","jsonDataFeatures","partyAbbrByName","getMainPartyName","SPROVINCE","getMunicipalityCode","properties","getMunicipalityiecId","topojson","projection","path","parties","availableCnt","b","legends","parseInt","getLegendXY","enter","append","attr","center","projectionCenter","polylabel","style","text","getSubRegionName","fixMapLabelIntersect","REGION_CHANGE","smunicipal","appendSpan","foDiv","regionName","addSub","appendLink","muniImuniCodeD","setRegionType","fo","catch","currentRegionName","setTimeout","alert","Map_map","TurnoutMap_map_className","TurnoutMap_map_cn","TurnoutMap_map_classCallCheck","TurnoutMap_map_getPrototypeOf","TurnoutMap_map_assertThisInitialized","locationToTurnout","parseTurnoutData","getFillColorFromTurnout","turnout","getTurnout","it","TurnoutMap_map","percVoterTurnout","TurnoutBarchart_barchart_className","TurnoutBarchart_barchart_cn","TurnoutBarchart_barchart_classCallCheck","TurnoutBarchart_barchart_possibleConstructorReturn","TurnoutBarchart_barchart_getPrototypeOf","TurnoutBarchart_barchart_assertThisInitialized","TurnoutBarchart_barchart_chartOptions","turnoutData","parseTurnoutDataForAllEvents","TurnoutBarchart_barchart","barchartMap_className","BarchartWithNavMap","barchartMap_classCallCheck","barchartMap_getPrototypeOf","barchartMap_assertThisInitialized","zip","JSZip","imgs","base64","content","saveAs","Object","assign","instance","barchartInstance","mapInstance","BarchartWithNavMap_barchartMap","d3piechart_Chart","margin","category","floatFormat","colour","Math","radius","pie","arc","totalSvg","labelSvg","toolTip","selection","tip","toolTipHTML","arcTween","_current","colorsDataP","updatePath","data0","data1","m","k","j","findPreceding","startAngle","endAngle","n","findFollowing","findNeighborArc","piechart_className","piechart_cn","PieChart","piechart_classCallCheck","piechart_getPrototypeOf","piechart_assertThisInitialized","piechart_chartOptions","progressVotesData","parseProgressVotesCount","Completed","Not Completed","ProgVotesCountPiechart_piechart","cssPrefix","metrosData","CustomLink","navbar_classCallCheck","navbar_possibleConstructorReturn","navbar_getPrototypeOf","navbar_assertThisInitialized","React","hasSubMenu","toggleSubMenu","activateMe","newLocation","to","selectedMenuLabel","children","NavBar","activeLinkId","handleNavBarSelection","navbar","addEventListener","removeEventListener","classList","iconClass","passInfo","lastClass","selectionData","icon","navbar_provincesData","map","metro","join","lib_default","LinkComponent","navbar_CustomLink","NavBar_navbar","quickResultsWidget_className","quickResultsWidget_cn","QuickResultsWidget","quickResultsWidget_classCallCheck","quickResultsWidget_getPrototypeOf","comp","quickResultsWidget_assertThisInitialized","zipfileName","imageLoadPromises","votesInstance1","votesInstance2","seatsInstance1","seatsInstance2","turnoutInstance1","turnoutInstance2","progressInstance1","progressInstance2","spoiltInstance1","spoiltInstance2","QuickResultsWidget_quickResultsWidget","SeatCompBarchart_barchart_partyColorsData","SeatCompBarchart_barchart_className","SeatCompBarchart_barchart_cn","SeatCompBarchart_barchart_classCallCheck","SeatCompBarchart_barchart_getPrototypeOf","SeatCompBarchart_barchart_assertThisInitialized","SeatCompBarchart_barchart_chartOptions","parseSeatsComparisonData","SeatCompBarchart_barchart","d3horseshoe_Chart","mainSvg","originChartData","totalSeats","rows","poslist","J","R","angle","Totals","PI","onMouseMove","onMouseOut","Counter","partySvg","pythonConvertedCode","horseshoe_partyColorsData","horseshoe_className","horseshoe_cn","HorseShoeChart","horseshoe_classCallCheck","horseshoe_getPrototypeOf","horseshoe_assertThisInitialized","horseshoe_chartOptions","SeatHorseShoeChart_horseshoe","VoteCompBarchart_barchart_partyColorsData","VoteCompBarchart_barchart_className","VoteCompBarchart_barchart_cn","VoteCompBarchart_barchart_classCallCheck","VoteCompBarchart_barchart_getPrototypeOf","VoteCompBarchart_barchart_assertThisInitialized","parseVotesComparisonData","VoteCompBarchart_barchart","d3groupbarchart_Chart","groupChartData","groupSvgs","groupSvg","bandwidth","YaxisOffset","subX","barAxisTextSvg","barAxisTexts","exec","TVSeatCompBarchart_barchart_partyColorsData","topLabel","usedValue","TVSeatCompBarchart_barchart_className","TVSeatCompBarchart_barchart_classCallCheck","TVSeatCompBarchart_barchart_getPrototypeOf","TVSeatCompBarchart_barchart_assertThisInitialized","TVSeatCompBarchart_barchart_chartOptions","desc","parseSeatsComparisonDataMultipleParties","TVSeatCompBarchart_barchart","d3deltabarchart_Chart","newGroupChartData","_objectSpread","delta","deltaData","barTextYDelta","axisThick","TVSeatSwingBarchart_barchart_partyColorsData","TVSeatSwingBarchart_barchart_className","TVSeatSwingBarchart_barchart_classCallCheck","TVSeatSwingBarchart_barchart_getPrototypeOf","TVSeatSwingBarchart_barchart_assertThisInitialized","TVSeatSwingBarchart_barchart_chartOptions","years","TVSeatSwingBarchart_barchart","TVVoteCompBarchart_barchart_partyColorsData","TVVoteCompBarchart_barchart_className","TVVoteCompBarchart_barchart_classCallCheck","TVVoteCompBarchart_barchart_getPrototypeOf","TVVoteCompBarchart_barchart_assertThisInitialized","TVVoteCompBarchart_barchart_chartOptions","parseVotesComparisonDataMultipleParties","TVVoteCompBarchart_barchart","TVVoteSwingBarchart_barchart_partyColorsData","TVVoteSwingBarchart_barchart_className","TVVoteSwingBarchart_barchart_classCallCheck","TVVoteSwingBarchart_barchart_getPrototypeOf","TVVoteSwingBarchart_barchart_assertThisInitialized","TVVoteSwingBarchart_barchart_chartOptions","TVVoteSwingBarchart_barchart","CSS_PREFIX","calcPercent","toFixed","firstEdge","nodeData","results","node","el","validVotes","partyInfo","edges","partyResults","result","partyfilter_edges","reverse","new_results","available","newProps","totalCount","count","filter","beautifiedMuniName","tooltipClassName","labelElements","regions","overlapCnt","rect1","rect2","bottom","eventName","eventParam","CustomEvent","toUpperCase","Municipali","PKLVDNUMBE","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","loadScript","id","scriptURL","callback","script"],"mappings":"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","file":"static/js/src-components-quickresults~src-components-race-for-seats~src-components-race-for-votes~src-componen~3364f670.84c3743b.js","sourcesContent":["import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\nvar API_URI = \"https://elections2019.xyz/graphql\";\n\n\nconst client = new ApolloClient({\n    link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n    cache: new InMemoryCache()\n  })\n\nexport {\n    API_URI,\n    client\n}","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getSeatsDataForComparison(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            party_Event_Description_Icontains:\"national\",\n            orderBy:[\"-national_pr\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  } else { //  if (options.regionType == \"province\")\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(province_Name:\"${options.provinceName}\", orderBy:[\"-regional\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  }\n}\n\n\nexport function getSeatsData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(party_Event_Description:\"${eventDescription}\", orderBy:[\"-national_pr\"]){\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    } else { //  if (options.regionType == \"province\")\n      eventDescription = eventDescription.replace(\"National\", \"Provincial\");\n      eventDescription = eventDescription.replace(\"NATIONAL\", \"PROVINCIAL\");\n      eventDescription = eventDescription.replace(\"national\", \"provincial\");\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(province_Name:\"${options.provinceName}\", party_Event_Description:\"${eventDescription}\", orderBy:[\"-regional\"]){\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getVotesDataForComparison(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots{\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          location_Name:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          location_Province_Name:\"${options.provinceName}\", \n          location_Code: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n          location_IecId:\"${options.iecId}\", \n          location_Ward_Municipality_Code:\"${options.muniCode}\"\n        ) {\n          edges{\n            node{\n              event {\n                description\n              }\n              location {\n                iecId\n              }\n              partyResults {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getVotesDataM(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\", \n            location_Code: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event_Description:\"${eventDescription}\",\n            location_IecId:\"${options.iecId}\", \n            location_Ward_Municipality_Code:\"${options.muniCode}\"\n          ) {\n            edges{\n              node{\n                location {\n                  iecId\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                      }\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n\n  export function getMainParties(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByProvince(location_Country_Event_Description:\"${eventDescription}\") {\n            edges {\n              node {\n                location{\n                  id\n                  name\n                }\n                totalVotesCast\n                topParty{\n                  validVotes\n                  percOfVotes\n                  party {\n                      id\n                      name\n                      abbreviation\n                  }\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByMunicipality(\n            location_Province_Country_Event_Description:\"${eventDescription}\", \n            location_Province_Name:\"${options.provinceName}\") {\n            \n            edges {\n              node {\n                location{\n                    code\n                    name\n                    longName\n                }\n                totalVotesCast\n                topParty{\n                  party {               \n                    name\n                    abbreviation\n                  }\n                  validVotes\n                  percOfVotes\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { //if (options.regionType == \"municipality\") {\n      var muniRegName = options.muniName.split(\" - \")[1];\n        return client.query({\n          query: gql`\n          {\n            topPartiesByVotingDistrict(\n              location_Ward_Municipality_Province_Country_Event_Description:\"${eventDescription}\", \n              location_Ward_Municipality_Province_Name:\"${options.provinceName}\",\n              location_Ward_Municipality_Code: \"${options.muniCode}\"\n            ) {\n              \n              edges {\n                node {\n                  location{\n                    iecId\n                  }\n                  topParty{\n                    party{\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getTurnoutData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                percVoterTurnout\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                percVoterTurnout\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { // municipality or municipality-vd\n      var muniRegName = options.muniName.split(\" - \")[1];\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots( \n            event_Description:\"${eventDescription}\",\n            location_Ward_Municipality_Name_Icontains:\"${muniRegName}\") {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n  export function getTurnoutDataForAllEvents(options) {\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            location_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                location_Province_Name:\"${options.provinceName}\", \n                location_Code: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n                location_IecId:\"${options.iecId}\", \n                location_Ward_Municipality_Code:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getSpoiltData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                    id\n                    name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                event_Description:\"${eventDescription}\",\n                location_Province_Name:\"${options.provinceName}\", \n                location_Code: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    code\n                    name\n                    longName\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n                event_Description:\"${eventDescription}\",\n                location_IecId:\"${options.iecId}\", \n                location_Ward_Municipality_Code:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n  ","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getProgressVotesCount(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\", \n            location_Code: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event_Description:\"${eventDescription}\",\n            location_IecId:\"${options.iecId}\", \n            location_Ward_Municipality_Code:\"${options.muniCode}\"\n          ) {\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport {getSeatsData, getSeatsDataForComparison} from \"./race-for-seats\"\nexport {getVotesDataM, getVotesDataForComparison, getMainParties} from \"./race-for-votes\"\nexport {getTurnoutData, getTurnoutDataForAllEvents} from \"./turnout\"\nexport {getSpoiltData} from \"./spoilt\"\nexport {getProgressVotesCount} from \"./prog-votescount\"\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            abbreviation\n            colour\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getProvincesData() {\n  var provincesData = [\n      {\n          \"name\": \"Limpopo\",\n          \"abbreviation\": \"LIM\",\n          \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n      },\n      {\n          \"name\": \"Mpumalanga\",\n          \"abbreviation\": \"MP\",\n          \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n      },\n      {\n          \"name\": \"Gauteng\",\n          \"abbreviation\": \"GT\",\n          \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n      },\n      {\n          \"name\": \"KwaZulu-Natal\",\n          \"abbreviation\": \"KZN\",\n          \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n      },\n      {\n          \"name\": \"North West\",\n          \"abbreviation\": \"NW\",\n          \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n      },\n      {\n          \"name\": \"Free State\",\n          \"abbreviation\": \"FS\",\n          \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n      },\n      {\n          \"name\": \"Eastern Cape\",\n          \"abbreviation\": \"EC\",\n          \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n      },\n      {\n          \"name\": \"Northern Cape\",\n          \"abbreviation\": \"NC\",\n          \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHâI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n      },\n      {\n          \"name\": \"Western Cape\",\n          \"abbreviation\": \"WC\",\n          \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n      }\n  ]\n  return provincesData;\n}\n\nexport function getMetrosData() {\n  var metrosData = [\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},\n    {\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},\n    {\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},\n    {\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"},\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}\n  ]\n  return metrosData;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_chart-title\":\"barchart_ELVIZ_chart-title__3M_9O\",\"ELVIZ_percentage-label\":\"barchart_ELVIZ_percentage-label__3tHup\",\"ELVIZ_tooltip\":\"barchart_ELVIZ_tooltip__2StQf\",\"ELVIZ_grouprect\":\"barchart_ELVIZ_grouprect__3r-aC\",\"barchart\":\"barchart_barchart__1g-zw\",\"ELVIZ_stylesheet-tv\":\"barchart_ELVIZ_stylesheet-tv__1BK01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__308Fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_tooltip\":\"barchartMap_ELVIZ_tooltip__tgFvS\",\"barchart-map\":\"barchartMap_barchart-map__1q5Ah\",\"ELVIZ_stylesheet-tv\":\"barchartMap_ELVIZ_stylesheet-tv__2Oynn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartMapEmbed_embedcode__3VTUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_map-title\":\"map_ELVIZ_map-title__1LqU5\",\"ELVIZ_loading-spinner\":\"map_ELVIZ_loading-spinner__17q6Q\",\"ELVIZ_tooltip\":\"map_ELVIZ_tooltip__3-o8A\",\"map-widget\":\"map_map-widget__2RFiV\",\"ELVIZ_stylesheet-tv\":\"map_ELVIZ_stylesheet-tv__3H0zq\",\"legend\":\"map_legend__2ss0P\",\"ELVIZ_stylesheet-web\":\"map_ELVIZ_stylesheet-web__QqAjU\",\"ELVIZ_stylesheet-none\":\"map_ELVIZ_stylesheet-none__3Bxph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"mapEmbed_embedcode__1_eoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_menu-widget\":\"navbar_ELVIZ_menu-widget__1KFQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_chart-title\":\"piechart_ELVIZ_chart-title__2XNYt\",\"piechart\":\"piechart_piechart__1_rKy\",\"ELVIZ_stylesheet-tv\":\"piechart_ELVIZ_stylesheet-tv__1l-CJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"piechartEmbed_embedcode__20lGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_tooltip\":\"quickResultsWidget_ELVIZ_tooltip__1UVX7\",\"ELVIZ_component-transition-menu\":\"quickResultsWidget_ELVIZ_component-transition-menu__1faC8\",\"label\":\"quickResultsWidget_label__2Dt1H\",\"active\":\"quickResultsWidget_active__izwwa\",\"quickresultswidget\":\"quickResultsWidget_quickresultswidget__1za_y\",\"ELVIZ_stylesheet-tv\":\"quickResultsWidget_ELVIZ_stylesheet-tv__284h0\",\"ELVIZ_row\":\"quickResultsWidget_ELVIZ_row__1QzTz\",\"ELVIZ_col-md-2\":\"quickResultsWidget_ELVIZ_col-md-2__3beRX\",\"ELVIZ_col-md-4\":\"quickResultsWidget_ELVIZ_col-md-4__3OaTN\",\"ELVIZ_col-md-8\":\"quickResultsWidget_ELVIZ_col-md-8__1_krp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"quickResultsWidgetEmbed_embedcode__3Fxlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__tUXug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__29vdd\",\"multievent-container\":\"barchartEmbed_multievent-container__1G-dC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ELVIZ_chart-title\":\"horseshoe_ELVIZ_chart-title__3KEZl\",\"ELVIZ_tooltip\":\"horseshoe_ELVIZ_tooltip__2bLlY\",\"horseshoechart\":\"horseshoe_horseshoechart__2Js34\",\"ELVIZ_stylesheet-tv\":\"horseshoe_ELVIZ_stylesheet-tv__1-bHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"horseshoeEmbed_embedcode__1B28Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__UywT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__YEDVC\",\"multievent-container\":\"barchartEmbed_multievent-container__UuClr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__3Hovq\",\"multievent-container\":\"barchartEmbed_multievent-container__2y7nI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__1Gecz\",\"multievent-container\":\"barchartEmbed_multievent-container__3zT9b\",\"multiparties-container\":\"barchartEmbed_multiparties-container__21kbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__3iHSi\",\"multievent-container\":\"barchartEmbed_multievent-container__3dDi0\",\"multiparties-container\":\"barchartEmbed_multiparties-container__2Ln06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__Z83k_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"mapEmbed_embedcode__Gu08M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"barchartEmbed_embedcode__2m2Vo\",\"multievent-container\":\"barchartEmbed_multievent-container__3U1YR\"};","import React, { Component } from \"react\";\n\nimport {\n    loadScriptsForEmbedMode\n} from \"../utils\";\n\nexport default class EmbedBase extends Component {\n    constructor(props) {\n        super(props);\n        loadScriptsForEmbedMode();\n    }\n\n    render () {\n        return (\n            <div></div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 1\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 6\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n\n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 9\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showSpoiltBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nimport {\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    loadCanvg\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            stylesheetFor: \"web\",\n            componentID: 3\n        }\n    }\n\n    componentDidMount() {\n        loadCanvg();\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n      \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n    \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,  \n            stylesheetFor,          \n            disableNavigation,\n            regionType,\n            provinceName,\n            muniName,\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showMap(document.getElementById(\"${elementId}\"),{\n                            stylesheetFor: \"${stylesheetFor}\",\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    loadCanvg,\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 11\n        }\n    }\n\n    componentDidMount() {\n        loadCanvg();\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,       \n            stylesheetFor,     \n            disableNavigation,\n            eventDescription,\n            regionType,\n            provinceName,\n            muniName,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showTurnoutMap(document.getElementById(\"${elementId}\"),{\n                            stylesheetFor: \"${stylesheetFor}\",\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventType: \"national\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 10\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventType,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event Type</label>\n                  <select className={className(\"form-control\")} \n                     value={eventType}\n                     onChange={(e) => this.setState({eventType: e.target.value})}>\n                        <option value=\"national\">National</option>\n                        <option value=\"provincial\">Provincial</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"\">Select ...</option>\n                        { \n                            eventType == \"national\" && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTurnoutBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventType: \"${eventType}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartMapEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartWithNavMapEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 2\n        }\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_SUPERWIDGET_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map + Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n            <div>\n                Way to customize size and position of Bar Chart and Map.<br/>\n                For bar chart, you can use .barchart-container\n                <div className={className(\"embedcode\")}>\n                    {`.barchart-container {\n                        width: 1000px;\n                        height: 300px;\n                        margin-left: 100px;\n                    }`}\n                </div>\n                For Map, you can use .map-container\n                <div className={className(\"embedcode\")}>\n                    {`.map-container {\n                        width: 1000px;\n                        height: 300px;\n                        margin-left: 100px;\n                    }`}\n                </div>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarchartWithNavMap(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartWithNavMapEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./quickResultsWidgetEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass QuickResultsWidgetEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"none\",\n            numParties: 5,\n\n            electionEvents: [],\n            componentID: 5\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.QUICK_RESULTS_PREVIEW, this.state);\n    }    \n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_SUPERWIDGET_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Quick Results Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties for Bar Chart</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>              \n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showQuickResultsWidget(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default QuickResultsWidgetEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./piechartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass PieChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 4\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Progress on Votes Count Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default PieChartEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbr: \"ANC\",\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 7\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seats Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents\n                            .filter(item => item.toLowerCase().indexOf(regionType==\"national\"?\"national\":\"provincial\") != -1)\n                            .map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Name</label>\n                  \n                  <select className={className(\"form-control\")} \n                        value={partyAbbr}\n                        onChange={e => this.setState({partyAbbr: e.target.value})} >\n                        <option value=\"\">Select ...</option>\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"name\"]} value={party[\"abbreviation\"]}>{party[\"name\"]}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showRaceForVotesCompBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbr: \"${partyAbbr}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./horseshoeEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass HorseShoeEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: [],\n            stylesheetFor: \"web\",\n            componentID: 8\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1) {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({\n                eventDescription: e.target.value,\n                regionType: \"national\"\n            });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n\n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default HorseShoeEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbr: \"ANC\",\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 16\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Name</label>\n                  \n                  <select className={className(\"form-control\")} \n                        value={partyAbbr}\n                        onChange={e => this.setState({partyAbbr: e.target.value})} >\n                        <option value=\"\">Select ...</option>\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"name\"]} value={party[\"abbreviation\"]}>{party[\"name\"]}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showRaceForVotesCompBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbr: \"${partyAbbr}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    formatPartyName\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\"],\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 12\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onPartyAbbrsChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            partyAbbrs: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbrs,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seats Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Events </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents\n                            .filter(item => item.toLowerCase().indexOf(regionType==\"national\"?\"national\":\"provincial\") != -1)\n                            .map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Names</label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multiparties-container\")} \n                        value={partyAbbrs}\n                        onChange={this.onPartyAbbrsChange.bind(this)} >\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"abbreviation\"]} value={party[\"abbreviation\"]}>{formatPartyName(party[\"name\"])}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTVSeatCompBarchart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbrs: \"${partyAbbrs}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div> \n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;\n","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    formatPartyName\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                // \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                // \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                // \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\"],\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 13\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onPartyAbbrsChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            partyAbbrs: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbrs,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seats Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>First Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescriptions[0]}\n                     onChange={(event) => {\n                        this.setState({eventDescriptions: [event.target.value, eventDescriptions[1]]})\n                    }}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Second Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescriptions[1]}\n                     onChange={(event) => {\n                         this.setState({eventDescriptions: [eventDescriptions[0], event.target.value]})\n                     }}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Names</label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multiparties-container\")} \n                        value={partyAbbrs}\n                        onChange={this.onPartyAbbrsChange.bind(this)} >\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"abbreviation\"]} value={party[\"abbreviation\"]}>{formatPartyName(party[\"name\"])}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTVSeatSwingBarchart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbrs: \"${partyAbbrs}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div> \n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    formatPartyName\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\"],\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 14\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onPartyAbbrsChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            partyAbbrs: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbrs,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Events </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Names</label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multiparties-container\")} \n                        value={partyAbbrs}\n                        onChange={this.onPartyAbbrsChange.bind(this)} >\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"abbreviation\"]} value={party[\"abbreviation\"]}>{formatPartyName(party[\"name\"])}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTVVoteCompBarchart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbrs: \"${partyAbbrs}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;\n","import React, {Component} from \"react\";\nimport EmbedBase from \"../embedBase\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    formatPartyName\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends EmbedBase {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                // \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                // \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                // \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\"],\n\n            electionEvents: [],\n            allParties: [],\n            stylesheetFor: \"web\",\n            componentID: 15\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 2);\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onPartyAbbrsChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        values = values.slice(0, 4);\n        this.setState({\n            partyAbbrs: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbrs,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>First Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescriptions[0]}\n                     onChange={(event) => {\n                        this.setState({eventDescriptions: [event.target.value, eventDescriptions[1]]})\n                    }}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Second Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescriptions[1]}\n                     onChange={(event) => {\n                         this.setState({eventDescriptions: [eventDescriptions[0], event.target.value]})\n                     }}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Names</label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multiparties-container\")} \n                        value={partyAbbrs}\n                        onChange={this.onPartyAbbrsChange.bind(this)} >\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"abbreviation\"]} value={party[\"abbreviation\"]}>{formatPartyName(party[\"name\"])}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTVVoteSwingBarchart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbrs: \"${partyAbbrs}\"\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;\n","export {default as BarChartEmbed} from \"./BarChart/barchartEmbed\";\nexport {default as RaceForSeatsBarChartEmbed} from \"./RaceForSeatBarchart/barchartEmbed\";\nexport {default as SpoiltBarChartEmbed} from \"./SpoiltBarchart/barchartEmbed\";\nexport {default as MapEmbed} from \"./Map/mapEmbed\";\nexport {default as TurnoutMapEmbed} from \"./TurnoutMap/mapEmbed\";\nexport {default as TurnoutBarChartEmbed} from \"./TurnoutBarchart/barchartEmbed\";\nexport {default as BarchartWithNavMapEmbed} from \"./BarchartWithNavMap/barchartMapEmbed\";\nexport {default as QuickResultsWidgetEmbed} from \"./QuickResultsWidget/quickResultsWidgetEmbed\";\nexport {default as ProgVotesCountPiechartEmbed} from \"./ProgVotesCountPiechart/piechartEmbed\";\nexport {default as RaceForSeatsComparisonBarChartEmbed} from \"./SeatCompBarchart/barchartEmbed\";\nexport {default as SeatHorseShoeChartEmbed} from \"./SeatHorseShoeChart/horseshoeEmbed\";\nexport {default as VoteComparisonBarchartEmbed} from \"./VoteCompBarchart/barchartEmbed\";\n\nexport {default as TVSeatCompBarchartEmbed} from \"./TVSeatCompBarchart/barchartEmbed\";\nexport {default as TVSeatSwingBarchartEmbed} from \"./TVSeatSwingBarchart/barchartEmbed\";\nexport {default as TVVoteCompBarchartEmbed} from \"./TVVoteCompBarchart/barchartEmbed\";\nexport {default as TVVoteSwingBarchartEmbed} from \"./TVVoteSwingBarchart/barchartEmbed\";","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\nimport { type } from \"os\";\nimport config from \"../../config\";\nimport {\n  formatPartyName\n} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n\n\n  if (!options) {\n    options = {};\n  } \n  if (!options.chartType) {\n    options.chartType = \"Race For Votes\";\n  }\n  if (!options.yAxisLabel) {\n    options.yAxisLabel = \"PERCENTAGE VOTES\";\n  }\n  if (!options.yValue) {\n    options.yValue = function(d) {\n      return d.percOfVotes;\n    }\n  }\n  if (!options.yValueFormat) {\n    options.yValueFormat = function(value) {\n      return value + '%';\n    }\n  }\n\n  width = 700;\n  height = 200;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 20;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(config.CSS_PREFIX + \"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(options.yAxisLabel)\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(chartData, colorsData) {\n\n      if (!chartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n      if (options.noXaxisByParty) {\n\n      } else {\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n          })\n        }\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n        if (options.noXaxisByParty) {\n          if (typeof colorsData == \"object\")\n            return colorsData[d.name];\n          if (typeof colorsData == \"function\")\n            return colorsData(d, i);\n          return colorsData;\n        } else {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n        }\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(chartData, function(d) { return options.yValue(d); }) + 1\n      }\n      y.domain(minMaxY);\n  \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => getFillColor(d, i))\n          .on(\"mousemove\", function(d, i) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              tooltipDiv.html(getTooltipText(d, i))\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .attr(\"fill\", (d, i) => getFillColor(d, i))\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d)));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(options.yValue(d)));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .text(function(d) {\n            return options.yValueFormat(options.yValue(d));\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d))) - 5;\n          })\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataM,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData,\n  getRegionName\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%'\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 1\n      }\n\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      } \n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataM(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesData(data, props);\n       \n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 6\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n        \n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSpoiltData\n} from \"../../api\";\nimport {\n  parseSpoiltVotesData,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Spoilt vs Valid Votes',\n  yAxisLabel: 'PERCENTAGE VOTES',\n  noXaxisByParty: true,\n  yValue: d => d.percent,\n  yValueFormat: value => value + '%'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 9\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `spoilt-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var spoiltDataLoader = getSpoiltData(props);\n      var dataLoaders = [spoiltDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var spoiltData = values[0];\n        self.drawGraph(container, props, spoiltData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseSpoiltVotesData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Valid\": \"rgb(0,255,0)\",\n          \"Spoilt\": \"rgb(255,0,0)\"\n        });\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors,\n} from \"../../api\";\nimport {\n  parseMainPartyData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 3\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.componentID) {\n          this.state.componentID = props.componentID;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      this.getContainer().selectAll(\"svg\").remove();\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state)\n    }\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n\n            window.canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        if (!window.canvg) {\n            return console.error(\"canvg module not available\");\n        }\n        window.canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n\n        var canvas = rendercanvas, filename = `race-for-votes-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        Promise.all(dataLoaders).then(function(values){ \n            var geoJsonData = values[0];\n            var locationToMainParty = parseMainPartyData(values[1], props);\n            partyColorsData = partyColorsData || values[2];  \n\n            var partyColorByName = {};\n            var partyAbbrByName = {};\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n              partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                partyColorByName[edge.node.name] = edge.node.colour;\n                partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n              })\n            }            \n\n            function getFillColorFromPartyName(partyName) {\n              if (!partyName)\n                return regionColor;\n              return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n            }\n\n            function getMainPartyName(d, i) {\n                var partyName;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    partyName = locationToMainParty[provinceName];\n                } else if (regionType === \"province\") {\n                    var muniCode = getMunicipalityCode(d.properties);\n                    partyName = locationToMainParty[muniCode];\n                } else if (regionType === \"municipality\"){// \"municipality\"\n                    var iecId = getMunicipalityiecId(d.properties);\n                    partyName = locationToMainParty[iecId];\n                } else {// \"municipality-vd\"\n                    var iecId = getMunicipalityiecId(d.properties);\n                    partyName = locationToMainParty[iecId];\n                }\n                return partyName;\n            }\n            function getMainPartyColorFromRegion(d, i) {\n                var partyName = getMainPartyName(d, i);\n                var partyColor = getFillColorFromPartyName(partyName);\n                return partyColor;\n            }\n\n            var jsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                var regionType = self.state.regionType\n                if (regionType == \"municipality\") {\n                    if (!geoJsonData.objects[self.state.muniCode])\n                        return;\n                    geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                } else { // \"municipality-vd\"\n                    if (!geoJsonData.objects[self.state.iecId])\n                        return;\n                    geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                }\n            }\n\n            jsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(jsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getMainPartyColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            var parties = [];\n            var availableCnt = [];\n            jsonDataFeatures.forEach((d, i) => {\n                var party = getMainPartyName(d, i);\n                if (parties.indexOf(party) == -1) {\n                    parties.push(party);\n                    availableCnt.push(1);\n                } else {\n                    availableCnt[parties.indexOf(party)] ++;\n                }\n            })\n\n            parties.sort(function(a, b){\n                return availableCnt[parties.indexOf(b)] - availableCnt[parties.indexOf(a)];\n            })\n\n            function getLegendXY(i) {\n                return [(i%5)*150, h + 10 + parseInt(i/5) * 40];\n            }\n            var legends = svg.selectAll(`.${className(\"legend\")}`)\n                .data(parties)\n                .enter()\n                .append('g')\n                .attr(\"class\", className(\"legend\"))\n                .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n            legends\n                .append(\"rect\")\n                .attr('width', 20)\n                .attr('height', 20)\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr(\"fill\", (party, i) => {\n                    return getFillColorFromPartyName(party);\n                })\n            legends.append('text')\n                .attr('x', 30)\n                .attr('y', 16)\n                .text(party => partyAbbrByName[party])\n            \n            if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                svg.selectAll(\".place-label\")\n                    .data(jsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(d => getSubRegionName(d.properties, self.state))\n            }\n\n            if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                fixMapLabelIntersect();\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(jsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d, i) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n\n                    tooltipDiv.html(getSubRegionName(d.properties, self.state) + \" : \" + getMainPartyName(d, i))\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: getMunicipalityiecId(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n\n                        self.setState(newState);\n                    }\n                })\n            if (!self.state.disableNavigation) {\n                var fo = svg.append(\"foreignObject\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", 10)\n                    .attr(\"width\", 500)\n                    .attr(\"height\", 30)\n                    .attr(\"class\", \"map-controls\")\n                \n                function setRegionType(regionType) {\n                    var newState;\n                    var newState = {\n                        regionType: self.state.regionType, \n                        provinceName: self.state.provinceName,\n                        muniName: self.state.muniName,\n                        muniImuniCodeD: self.state.muniCode,\n                        iecId: self.state.iecId,\n                    }\n                    newState.regionType = regionType;\n                    triggerCustomEvent(events.REGION_CHANGE, newState);\n                    self.setState(newState);\n                }\n\n                function appendSpan(foDiv, regionName, addSub) {\n                    if (addSub) foDiv.append(\"span\").html(\" > \");\n                    foDiv.append(\"span\")\n                        .style(\"height\", \"30px\")\n                        .style(\"cursor\", \"default\")\n                        .html(regionName);\n                }\n\n                function appendLink(foDiv, regionName, regionType, addSub) {\n                    if (addSub) foDiv.append(\"span\").html(\" > \");\n                    foDiv.append(\"a\")\n                        .style(\"height\", \"30px\")\n                        .style(\"cursor\", \"pointer\")\n                        .html(regionName)\n                        .on(\"click\", function() {\n                            setRegionType(regionType);\n                        });\n                }\n                \n                var foDiv = fo.append(\"xhtml:div\");\n                var regionType = self.state.regionType;\n                if (regionType == \"national\") {\n                    appendSpan(foDiv, \"South Africa\", false);\n                } else {\n                    appendLink(foDiv, \"South Africa\", \"national\", false);\n                    if (regionType == \"province\") {\n                        appendSpan(foDiv, self.state.provinceName, true);\n                    } else {\n                        appendLink(foDiv, self.state.provinceName, \"province\", true);\n                        if (regionType == \"municipality\") {\n                            appendSpan(foDiv, self.state.muniCode, true);\n                        } else {\n                            appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                            appendSpan(foDiv, self.state.iecId, true);\n                        }\n                    }\n                }\n                // foDiv\n                //     .append(\"button\")\n                //     .attr(\"class\", \"go-back\")\n                //     .style(\"height\", \"30px\")\n                //     .style(\"color\", \"black\")\n                //     .html(\"go back\")\n                //     .on(\"click\", function() {\n                //         var regionType = self.state.regionType;\n                //         var newState, event;\n    \n                //         var newState = {\n                //             regionType: self.state.regionType, \n                //             provinceName: self.state.provinceName,\n                //             muniName: self.state.muniName,\n                //             muniImuniCodeD: self.state.muniCode,\n                //             iecId: self.state.iecId,\n                //         }\n                        \n                //         if (regionType === \"province\") {\n                //             newState.regionType = \"national\";\n                //         } else if (regionType === \"municipality\") {\n                //             newState.regionType = \"province\";\n                //         } else if (regionType === \"municipality-vd\") {\n                //             newState.regionType = \"municipality\";\n                //         }\n    \n                //         triggerCustomEvent(events.REGION_CHANGE, newState);\n                //         self.setState(newState);\n                //     });\n            }\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        }).catch(error => {\n            console.error(error);\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniImuniCodeD: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                alert(`${currentRegionName} has been disestablished`); \n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getTurnoutData,\n    getProvincesData\n} from \"../../api\";\nimport {\n  parseTurnoutData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar provincesData = getProvincesData();\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 11\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.stylesheetFor) {\n          this.state.stylesheetFor = props.stylesheetFor;\n        }\n        if (props.componentID) {\n          this.state.componentID = props.componentID;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n        this.getContainer().selectAll(\"svg\").remove();\n        document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state)\n    }\n\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n\n            if (!window.canvg) {\n                return reject(\"canvg module not available\");\n            }\n\n            window.canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        if (!window.canvg) {\n            return console.error(\"canvg module not available\");\n        }\n\n        window.canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n        var canvas = rendercanvas, filename = `turnout-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n \n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var turnoutDataLoader = getTurnoutData(props);\n        var dataLoaders = [geoJsonLoader, turnoutDataLoader];\n\n        Promise.all(dataLoaders).then(function(values){ \n            var geoJsonData = values[0];\n            var locationToTurnout = parseTurnoutData(values[1], props);      \n\n            function getMergedColorWithWhite(percent) {\n                var originRGB = {\n                    R: 0,\n                    G: 255,\n                    B: 0\n                }\n                var mixedR = (originRGB.R * (percent) + 255 * (100-percent))/100;\n                var mixedG = (originRGB.G * (percent) + 255 * (100-percent))/100;\n                var mixedB = (originRGB.B * (percent) + 255 * (100-percent))/100;\n                return `rgb(${mixedR},${mixedG},${mixedB})`;\n            }\n            function getFillColorFromTurnout(turnout) {\n              if (turnout > 65)\n                return \"#39711D\";//getMergedColorWithWhite(100);//\"rgb(0,165,138)\";\n              if (turnout >= 60)\n                return \"#458923\";//getMergedColorWithWhite(90);//\"rgb(4,68,95)\";\n              if (turnout >= 55)\n                return \"#53B025\";//getMergedColorWithWhite(80);//\"rgb(4,98,138)\";\n              if (turnout >= 50)\n                return \"#4BDC02\";//getMergedColorWithWhite(70);//\"rgb(4,117,164)\";\n              if (turnout >= 45)\n                return \"#7CE547\";//getMergedColorWithWhite(60);//\"rgb(4,136,191)\";\n              if (turnout >= 40)\n                return \"#93E968\";//getMergedColorWithWhite(50);//\"rgb(0,154,216)\";\n              if (turnout >= 35)\n                return \"#A6ED83\";//getMergedColorWithWhite(40);//\"rgb(77,174,224)\";\n              if (turnout >= 30)\n                return \"#C5F3AF\";//getMergedColorWithWhite(30);//\"rgb(124,194,231)\";\n              return \"#D3F6C3\";//regionColor;\n            }\n\n            function getTurnout(d, i) {\n                var turnout;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    turnout = locationToTurnout[provinceName];\n                } else if (regionType === \"province\") {\n                    var muniCode = getMunicipalityCode(d.properties);\n                    turnout = locationToTurnout[muniCode];\n                } else if (regionType === \"municipality\"){// \"municipality\"\n                    var iecId = getMunicipalityiecId(d.properties);\n                    turnout = locationToTurnout[iecId];\n                } else {// \"municipality-vd\"\n                    var iecId = getMunicipalityiecId(d.properties);\n                    turnout = locationToTurnout[iecId];\n                }\n                return turnout;\n            }\n            function getFillColorFromRegion(d, i) {\n                var turnout = getTurnout(d, i);\n                var fillColor = getFillColorFromTurnout(turnout);\n                return fillColor;\n            }\n            var jsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                var regionType = self.state.regionType\n                if (regionType == \"municipality\") {\n                    if (!geoJsonData.objects[self.state.muniCode])\n                        return;\n                    geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                } else { // \"municipality-vd\"\n                    if (!geoJsonData.objects[self.state.iecId])\n                        return;\n                    geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                }\n            }\n\n            jsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(jsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getFillColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            var turnoutColors = [{\n                text: \"More than 65%\",\n                turnout: 66\n            },{\n                text: \"60% - 65%\",\n                turnout: 60\n            },{\n                text: \"55% - 60%\",\n                turnout: 55\n            },{\n                text: \"50% - 55%\",\n                turnout: 50\n            },{\n                text: \"45% - 50%\",\n                turnout: 45\n            },{\n                text: \"40% - 45%\",\n                turnout: 40\n            },{\n                text: \"35% - 40%\",\n                turnout: 35\n            },{\n                text: \"30% - 35%\",\n                turnout: 30\n            },{\n                text: \"Less than 30%\",\n                turnout: 15\n            }];\n            \n            function getLegendXY(i) {\n                return [(i%5)*170, h + 10 + parseInt(i/5) * 40];\n            }\n            var legends = svg.selectAll(`.${className(\"legend\")}`)\n                .data(turnoutColors)\n                .enter()\n                .append('g')\n                .attr(\"class\", className(\"legend\"))\n                .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n            legends\n                .append(\"rect\")\n                .attr('width', 20)\n                .attr('height', 20)\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr(\"fill\", (it) => {\n                    return getFillColorFromTurnout(it.turnout);\n                })\n            legends.append('text')\n                .attr('x', 30)\n                .attr('y', 16)\n                .text(it => it.text)\n            \n            if (self.state.regionType !== \"municipality\") {\n                svg.selectAll(\".place-label\")\n                    .data(jsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(d => getSubRegionName(d.properties, self.state))\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                fixMapLabelIntersect();\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(jsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d, i) {\t\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n\n                    tooltipDiv.html(getSubRegionName(d.properties, self.state) + \" : \" + getTurnout(d, i) + \"%\")\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: getMunicipalityiecId(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n\n                        self.setState(newState);\n                    }\n                })\n                if (!self.state.disableNavigation) {\n                    var fo = svg.append(\"foreignObject\")\n                        .attr(\"x\", 0)\n                        .attr(\"y\", 10)\n                        .attr(\"width\", 500)\n                        .attr(\"height\", 30)\n                        .attr(\"class\", \"map-controls\")\n                    \n                    function setRegionType(regionType) {\n                        var newState;\n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniImuniCodeD: self.state.muniCode,\n                            iecId: self.state.iecId,\n                        }\n                        newState.regionType = regionType;\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    }\n    \n                    function appendSpan(foDiv, regionName, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"span\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"default\")\n                            .html(regionName);\n                    }\n    \n                    function appendLink(foDiv, regionName, regionType, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"a\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"pointer\")\n                            .html(regionName)\n                            .on(\"click\", function() {\n                                setRegionType(regionType);\n                            });\n                    }\n                    \n                    var foDiv = fo.append(\"xhtml:div\");\n                    var regionType = self.state.regionType;\n                    if (regionType == \"national\") {\n                        appendSpan(foDiv, \"South Africa\", false);\n                    } else {\n                        appendLink(foDiv, \"South Africa\", \"national\", false);\n                        if (regionType == \"province\") {\n                            appendSpan(foDiv, self.state.provinceName, true);\n                        } else {\n                            appendLink(foDiv, self.state.provinceName, \"province\", true);\n                            if (regionType == \"municipality\") {\n                                appendSpan(foDiv, self.state.muniCode, true);\n                            } else {\n                                appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                                appendSpan(foDiv, self.state.iecId, true);\n                            }\n                        }\n                    }\n                    // foDiv\n                    //     .append(\"button\")\n                    //     .attr(\"class\", \"go-back\")\n                    //     .style(\"height\", \"30px\")\n                    //     .style(\"color\", \"black\")\n                    //     .html(\"go back\")\n                    //     .on(\"click\", function() {\n                    //         var regionType = self.state.regionType;\n                    //         var newState, event;\n        \n                    //         var newState = {\n                    //             regionType: self.state.regionType, \n                    //             provinceName: self.state.provinceName,\n                    //             muniName: self.state.muniName,\n                    //             muniImuniCodeD: self.state.muniCode,\n                    //             iecId: self.state.iecId,\n                    //         }\n                            \n                    //         if (regionType === \"province\") {\n                    //             newState.regionType = \"national\";\n                    //         } else if (regionType === \"municipality\") {\n                    //             newState.regionType = \"province\";\n                    //         } else if (regionType === \"municipality-vd\") {\n                    //             newState.regionType = \"municipality\";\n                    //         }\n        \n                    //         triggerCustomEvent(events.REGION_CHANGE, newState);\n                    //         self.setState(newState);\n                    //     });\n                }\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        }).catch(error => {\n            console.error(error);       \n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniImuniCodeD: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                alert(`${currentRegionName} has been disestablished`); \n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getTurnoutDataForAllEvents,\n} from \"../../api\";\nimport {\n  parseTurnoutDataForAllEvents,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Turnout Barchart',\n  yAxisLabel: 'PERCENTAGE',\n  noXaxisByParty: true,\n  yValue: function(d) {\n    return d.percVoterTurnout;\n  },\n  yValueFormat: function(percVoterTurnout) {\n    return percVoterTurnout + '%';\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        eventType: \"national\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 10\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `turnout-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var turnoutDataLoader = getTurnoutDataForAllEvents(props);\n      var dataLoaders = [turnoutDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var turnoutData = values[0];\n        self.drawGraph(container, props, turnoutData, 'rgb(157,51,55)');\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, colorsData) {\n        var chartData = parseTurnoutDataForAllEvents(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, colorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport styles from \"./barchartMap.css\";\nimport BarChart from '../BarChart/barchart';\nimport Map from '../Map/map';\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getRegionName\n} from \"../../utils\";\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarchartWithNavMap extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 2\n        }\n        if (props.numParties) {\n            this.state.numParties = props.numParties;\n        }\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.stylesheetFor) {\n          this.state.stylesheetFor = props.stylesheetFor;\n        }\n        if (props.componentID) {\n          this.state.componentID = props.componentID;\n        }\n\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var self = this;\n        Promise.all([\n            self.barchartInstance.exportAsPNGUri(),\n            self.mapInstance.exportAsPNGUri()\n        ]).then(values => {\n            var zip = new window.JSZip();\n\n            var imgs = zip.folder(\"export-images\");\n            imgs.file(\"barchart.png\", values[0], {base64: true});\n            imgs.file(\"map.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `race-for-votes-barchart-map(${getRegionName(self.state)}).zip`);\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n\n    render() {\n      const {\n        stylesheetFor\n      } = this.state;\n\n        return (\n        <div ref=\"superwidget\" className={className(\"barchart-map\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={className(\"barchart-container\")} ref=\"barchart\">\n                <BarChart \n                    ref={instance => { this.barchartInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n            <div className={className(\"map-container\")}>\n                <Map \n                    ref={instance => { this.mapInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BarchartWithNavMap;\n","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n    var data = [],\n        width = 700,\n        height = 300,\n        margin = {top: 10, right: 10, bottom: 10, left: 10},\n        variable = 'percent',\n        category = 'name',\n        padAngle = 0.015,\n        transTime = 750,\n        floatFormat = d3.format('.4r'),\n        cornerRadius = 3,\n        colorsData = null;\n\n    function colour(key) {\n        if (colorsData && colorsData[key]) {\n            return colorsData[key];\n        }\n        return 'rgb(' + Math.random()*250 + ',' + Math.random()*250 + ',' + Math.random()*250 + ')';\n    }\n\n    container.selectAll(\"svg\").remove();\n\n    var radius = Math.min(width, height) / 2;\n\n    var pie = d3.pie()\n        .value(function(d) { return floatFormat(d[variable]); })\n        .sort(null);\n\n    var arc = d3.arc()\n        .outerRadius(radius * 0.8)\n        .innerRadius(radius * 0.6)\n        .cornerRadius(cornerRadius)\n        .padAngle(padAngle);\n\n    var totalSvg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width + margin.left + margin.right) + \" \" + (height + margin.top + margin.bottom))\n        .classed(\"svg-content\", true);\n    \n    var svg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + height / 2 + ',' + height / 2 + ')');\n    \n    var labelSvg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + height * 6 / 5 + ',' + height / 2 + ')');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'lines');\n\n    var path = svg.select('.slices')\n        .selectAll('path')\n        .data(pie(data))\n        .enter().append('path')\n        .attr('fill', function(d) { return colour(d.data[category]); })\n        .attr('d', arc);\n\n    var errorText = svg.append(\"g\")\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\");\n      \n    this.destroy = function() {\n        container.selectAll(\"svg\").remove();\n    }\n    this.draw = function(value, colorsDataP) {\n        if (!value) {\n            errorText.text(\"chart data is not available\");\n            return;\n        } else {\n            errorText.text(\"\");\n        }\n        colorsData = colorsDataP;\n        data = value;\n\n        labelSvg.append('text')\n            .attr('x', 0)\n            .attr('y', -15)\n            .style('font-size', '.7em')\n            .style('text-anchor', 'middle')\n            .text('Completed' + ': ' + data[0][\"percent\"] + '%');\n        labelSvg.append('text')\n            .attr('x', 0)\n            .attr('y', 0)\n            .text('Captured Votes' + ': ' + data[0][\"count\"])\n            .style('font-size', '.7em')\n            .style('text-anchor', 'middle');\n        labelSvg.append('text')\n            .attr('x', 0)\n            .attr('y', 15)\n            .text('Total' + ': ' + data[0][\"totalCount\"])\n            .style('font-size', '.7em')\n            .style('text-anchor', 'middle');\n\n        var updatePath = d3.select('.slices').selectAll('path');\n\n        var data0 = path.data(),\n            data1 = pie(data);\n\n        updatePath = updatePath.data(data1, key);\n\n        updatePath.enter().append('path')\n            .each(function(d, i) { this._current = findNeighborArc(i, data0, data1, key) || d; })\n            .attr('fill', function(d) {  return colour(d.data[category]); })\n            .attr('d', arc);\n\n        updatePath.exit()\n            .transition()\n            .duration(transTime)\n            .attrTween(\"d\", arcTween)\n            .remove();\n\n        updatePath.transition().duration(transTime)\n            .attrTween('d', arcTween);\n\n        d3.selectAll('.labelName text, .slices path').call(toolTip);\n\n    };\n\n    function toolTip(selection) {\n\n        selection.on('mouseenter', function (data) {\n\n            svg.append('text')\n                .attr('class', 'toolCircle')\n                .attr('dy', -15)\n                .html(toolTipHTML(data))\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n\n            svg.append('circle')\n                .attr('class', 'toolCircle')\n                .attr('r', radius * 0.55)\n                .style('fill', colour(data.data[category]))\n                .style('fill-opacity', 0.35);\n\n        });\n\n        selection.on('mouseout', function () {\n            d3.selectAll('.toolCircle').remove();\n        });\n    }\n\n    function toolTipHTML(data) {\n\n        var tip = '';\n        tip += '<tspan x=\"0\">' + 'Progress' + ': ' + data.data[\"percent\"] + '%' + '</tspan>';\n        tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Captured Votes' + ': ' + data.data[\"count\"] + '</tspan>';\n        tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Total' + ': ' + data.data[\"totalCount\"] + '</tspan>';\n\n        return tip;\n    }\n\n    function arcTween(d) {\n        var i = d3.interpolate(this._current, d);\n        this._current = i(0);\n        return function(t) { return arc(i(t)); };\n    }\n\n    function findNeighborArc(i, data0, data1, key) {\n        var d;\n        return (d = findPreceding(i, data0, data1, key)) ? {startAngle: d.endAngle, endAngle: d.endAngle}\n            : (d = findFollowing(i, data0, data1, key)) ? {startAngle: d.startAngle, endAngle: d.startAngle}\n                : null;\n    }\n\n    function findPreceding(i, data0, data1, key) {\n        var m = data0.length;\n        while (--i >= 0) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n\n    function key(d) {\n        return d.data[category];\n    }\n\n    function findFollowing(i, data0, data1, key) {\n        var n = data1.length, m = data0.length;\n        while (++i < n) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"./d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getProgressVotesCount\n} from \"../../api\";\nimport {\n  parseProgressVotesCount,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Progress on Votes Count'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass PieChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 4\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `progress-on-votes-piechart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n   \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"piechart\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var progressVotesDataLoader = getProgressVotesCount(props);\n      var dataLoaders = [progressVotesDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var progressVotesData = values[0];\n        self.drawGraph(container, props, progressVotesData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseProgressVotesCount(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Completed\": \"#15707C\",\n          \"Not Completed\": \"#CCCCCC\"\n        });\n    }\n}\n\nexport default PieChart;\n","import React, { Component } from \"react\";\nimport MetisMenu from 'react-metismenu';\n\nimport config from '../../config'\nimport styles from \"./navbar.css\";\nimport events from \"../../events\";\nimport {\n    getProvincesData,\n    getMetrosData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cssPrefix(originName) {\n    return config.CSS_PREFIX+originName;\n}\n\nvar provincesData = getProvincesData();\nvar metrosData = getMetrosData();\n\n\nclass CustomLink extends React.Component {\n    constructor() {\n      super();\n  \n      this.onClick = this.onClick.bind(this);\n    }\n  \n    onClick(e) {\n      if (this.props.hasSubMenu) this.props.toggleSubMenu(e);\n      else {\n        this.props.activateMe({\n          newLocation: this.props.to,\n          selectedMenuLabel: this.props.label,\n        });\n      }\n    }\n  \n    render() {\n      return (\n        <div className=\"metismenu-link\" onClick={this.onClick}>\n          {this.props.children}\n        </div>\n      );\n    }\n  };\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            activeLinkId: ''\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        this.handleNavBarSelection = this.handleNavBarSelection.bind(this);\n    }\n\n    componentDidMount() {\n        if(!document.getElementById('navbarcss')) {\n            var link = document.createElement('link');\n            link.id = 'navbarcss';\n            link.rel = 'stylesheet';\n            link.href = config.DOMAIN + '/navbar.css';\n            document.head.appendChild(link);\n        }\n\n        if(!document.getElementById('font-awesome')) {\n            var link = document.createElement('link');\n            link.id = 'font-awesome';\n            link.rel = 'stylesheet';\n            link.href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\";\n            document.head.appendChild(link);\n        }\n\n        this.refs.navbar.addEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentWillUnmount() {\n        this.refs.navbar.removeEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentDidUpdate() {\n    }\n\n    handleNavBarSelection(e) {\n        if (e.target.className.indexOf(\"metismenu-link\") == -1) {\n            return;\n        }\n        var iconClass = e.target.childNodes[0].className;\n        var classList = iconClass.split(' ');\n        var lastClass = classList[classList.length - 1];\n        var passInfo = lastClass.split('-');\n\n        var regionType, selectionData = {};\n        var activeLinkId = '';\n\n        if (passInfo[1] == '1') {\n            regionType = \"national\";\n            activeLinkId = '1';\n        } else if (passInfo[1] == '2') {\n            regionType = \"province\";\n            selectionData = provincesData[passInfo[2]];\n        } else if (passInfo[1] == '3') { // muni level\n            regionType = \"municipality\";\n            selectionData = provincesData[passInfo[2]].munis[passInfo[3]];\n            activeLinkId = `3-${passInfo[2]}-${passInfo[3]}`;\n        } else if (passInfo[1] == '4') { // metros\n            regionType = \"municipality\"\n            selectionData = metrosData[passInfo[2]];\n            activeLinkId = `4-${passInfo[2]}`;\n        } else {\n            return;\n        }\n        \n        e.preventDefault();\n        var newState;\n        if (regionType == \"national\") {\n            newState = {regionType: regionType};\n            if (this.state.regionType == newState.regionType)\n                return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            if (this.state.regionType == newState.regionType && this.state.provinceName == newState.provinceName)\n                return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            if (this.state.regionType == newState.regionType \n                && this.state.provinceName == newState.provinceName\n                && this.state.newState == newState.muniName)\n                return;\n        }\n\n        triggerCustomEvent(events.REGION_CHANGE, newState);\n        triggerCustomEvent(events.MAP_PREVIEW, newState);\n\n        newState.activeLinkId = activeLinkId;\n        this.setState(newState);\n    }\n      \n    render () {\n        var content = [\n            {\n                icon: '1',\n                label: 'National',\n                to: '1',\n            },\n            {\n                icon: '',\n                label: 'Provinces',\n                content: provincesData.map((province, i) => {\n                    return {\n                        icon: `2-${i}`,\n                        label: province.name,\n                        to: `2-${i}`,\n                        // content: province.munis.map((muni, j) => {\n                        //     return {\n                        //         icon: `3-${i}-${j}`,\n                        //         label: muni.muniName.split(\"-\")[1].split(\"[\")[0],\n                        //         to: `3-${i}-${j}`,\n                        //     }\n                        // })\n                    }\n                })\n            },\n            {\n                icon: '',\n                label: 'Metros',\n                content: metrosData.map((metro, i) => {\n                    return {\n                        icon: `4-${i}`,\n                        label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                        to: `4-${i}`,\n                    }\n                })\n            }\n        ];\n        \n        return (\n            <div className={[className(cssPrefix(\"menu-widget\")), cssPrefix(\"menu-widget\")].join(\" \")} ref=\"navbar\">\n                <MetisMenu activeLinkId={this.state.activeLinkId} content={content} LinkComponent={CustomLink}/>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport styles from \"./quickResultsWidget.css\";\n\nimport config from '../../config'\nimport events from \"../../events\";\n\nimport BarChart from '../BarChart/barchart';\n\nimport ProgressVotesPieChart from '../ProgVotesCountPiechart/piechart';\n\nimport RaceForSeatBarChart from '../RaceForSeatBarchart/barchart';\n\nimport SpoiltBarChart from '../SpoiltBarchart/barchart';\n\nimport TurnoutBarchart from '../TurnoutBarchart/barchart';\nimport TurnoutMap from '../TurnoutMap/map';\n\nimport NavBar from '../NavBar/navbar';\nimport Map from '../Map/map';\n\nimport {saveAs} from \"file-saver\";\nimport {\n    getRegionName,\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n    return className(config.CSS_PREFIX + originName);\n}\n\nclass QuickResultsWidget extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            comp: \"race for votes\",\n            stylesheetFor: \"web\",\n            componentID: 5\n        }\n        if (props.numParties) {\n            this.state.numParties = props.numParties;\n        }\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        if (props.componentID) {\n          this.state.componentID = props.componentID;\n        }\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handleRegionChange = this.handleRegionChange.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.addEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.removeEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n    //   if (newState.regionType != \"municipality-vd\")\n        this.setState(newState)\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var {\n            comp\n        } = this.state;\n        var self = this;\n        var zipfileName = `quick-results-widget-${comp.replace(/\\s/gi, '-')}(${getRegionName(self.state)})`;\n        var imageLoadPromises = [];\n        if (comp == 'race for votes') {\n            imageLoadPromises = [\n                this.votesInstance1.exportAsPNGUri(), \n                this.votesInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'race for seats') {\n            imageLoadPromises = [\n                this.seatsInstance1.exportAsPNGUri(), \n                this.seatsInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'turnout') {\n            imageLoadPromises = [\n                this.turnoutInstance1.exportAsPNGUri(), \n                this.turnoutInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'counting progress') {\n            imageLoadPromises = [\n                this.progressInstance1.exportAsPNGUri(), \n                this.progressInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'spoilt votes') {\n            imageLoadPromises = [\n                this.spoiltInstance1.exportAsPNGUri(), \n                this.spoiltInstance2.exportAsPNGUri()\n            ];\n        }\n        Promise.all(imageLoadPromises).then(values => {\n            var zip = new window.JSZip();\n\n            var imgs = zip.folder(zipfileName);\n            imgs.file(\"image1.png\", values[0], {base64: true});\n            imgs.file(\"image2.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `${zipfileName}.zip`);\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState);\n\n        triggerCustomEvent(events.CHART_PREVIEW, newState);\n        triggerCustomEvent(events.MAP_PREVIEW, newState);\n    };\n\n    render() {\n        var {\n            comp,\n            numParties,\n            eventDescription,\n            stylesheetFor,\n            regionType,\n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            comp\n        } = this.state;\n        return (\n            <div className={className(\"quickresultswidget\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"row\") + \" \" + cn(\"component-transition-menu\")}>\n                    <div className={cn(\"col-md-2\") + \" \" + className(\"label\")}>\n                        Show Results \n                    </div>\n                    <div className={cn(\"col-md-2\")}>\n                        <button \n                            className={comp == 'race for votes'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'race for votes'})}> Race for votes </button>\n                    </div>\n                    <div className={cn(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'race for seats'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'race for seats'})}> Race for seats</button>\n                    </div>\n                    <div className={cn(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'turnout'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'turnout'})}> Turnout</button>\n                    </div>\n                    {\n                        (eventDescription.indexOf(\"2014\") != -1) &&\n                        <div className={cn(\"col-md-2\")}>\n                            <button  \n                                className={comp == 'counting progress'? className(\"active\") : \"\"} \n                                onClick={() => this.setState({comp: 'counting progress'})}> Counting progress </button>\n                        </div>\n                    }\n                    <div className={cn(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'spoilt votes'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'spoilt votes'})}> Spoilt Votes </button>\n                    </div>\n                </div>\n                <div className={cn(\"row\")}>\n                    <div className={cn(\"col-md-4\")+\" \"+className(\"main-left-part\")}>\n                        <NavBar />\n                    </div>\n                            {\n                                comp == 'race for votes' && \n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <BarChart \n                                            ref={instance => { this.votesInstance1 = instance; }} \n                                            {...this.state} \n                                            componentID={-1000}/>\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.votesInstance2 = instance; }} \n                                            {...this.state} \n                                            componentID={-1000}/>\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'race for seats' && \n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <RaceForSeatBarChart \n                                            ref={instance => { this.seatsInstance1 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.seatsInstance2 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'turnout' && \n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <TurnoutBarchart \n                                            ref={instance => { this.turnoutInstance1 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <TurnoutMap \n                                            ref={instance => { this.turnoutInstance2 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                </div>\n                                \n                            }\n                            {\n                                comp == 'counting progress' && \n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <ProgressVotesPieChart \n                                            ref={instance => { this.progressInstance1 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.progressInstance2 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'spoilt votes' &&\n                                <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <SpoiltBarChart \n                                            ref={instance => { this.spoiltInstance1 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.spoiltInstance2 = instance; }} \n                                            {...this.state}\n                                            componentID={-1000} />\n                                    </div>\n                                </div> \n                            }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuickResultsWidget;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Comparison',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 7\n      }\n      if (props.partyAbbr) {\n        this.state.partyAbbr = props.partyAbbr;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      \n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n    options = {};\n  } \n\n  width = 360;\n  height = 185;\n  container.selectAll(\"svg\").remove();\n\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width) + \" \" + (height))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n\n    var mainSvg = svg.append(\"g\");\n\n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(originChartData, colorsData) {\n      var chartData = [];\n      if (!originChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n\n      for(var i = originChartData.length - 1; i >= 0 ; i -=2) {\n        chartData.push(originChartData[i]);\n      }\n      for (i= -1 - i; i < originChartData.length; i += 2) {\n        chartData.push(originChartData[i]);\n      }\n\n\n      var partyColorByName = {};\n\n      var partyColorsData = colorsData;\n      if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n          partyColorByName[edge.node.name] = edge.node.colour;\n          })\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getTooltipText(d, i) {\n          return d.name;\n      }\n\n      var totalSeats = 0;\n      for (var i = 0; i < chartData.length; i ++) {\n        totalSeats += chartData[i].seats;\n      }\n\n      function pythonConvertedCode(totalSeats, mainSvg) {\n        var Totals=[ 3, 15, 33, 61, 95, 138, 189, 247, 313, 388, 469, 559, 657, 762, 876, 997, 1126, 1263, 1408, 1560, 1722, 1889, 2066, 2250, 2442, 2641, 2850, 3064, 3289, 3519, 3759, 4005, 4261, 4522, 4794, 5071, 5358, 5652, 5953, 6263, 6581, 6906, 7239, 7581, 7929, 8287, 8650, 9024, 9404, 9793, 10187, 10594, 11003, 11425, 11850, 12288, 12729, 13183, 13638, 14109, 14580, 15066, 15553, 16055, 16557, 17075, 17592, 18126, 18660, 19208, 19758, 20323, 20888, 21468, 22050, 22645, 23243, 23853, 24467, 25094, 25723, 26364, 27011, 27667, 28329, 29001, 29679, 30367, 31061]\n    \n        if (totalSeats > Totals[Totals.length-1]){\n            console.error(\"total seats >\", Totals[Totals.length-1]);\n        }\n    \n        if (totalSeats < 1) {\n          console.error(\"total seats < 1\");\n        }\n        var rows;\n        var radius;\n        var poslist;\n        var J, R, angle;\n          // Figure out how many rows are needed:\n          for (var i = 0; i < Totals.length; i ++ ){\n              if (Totals[i] >= totalSeats) {\n                  rows = i + 1;\n                  break\n              }\n          }\n          // Maximum radius of spot is 0.5/rows; leave a bit of space.\n          radius = 0.4/rows;\n    \n          // Create list of centre spots\n          poslist=[]\n          for( var i = 1; i < rows; i ++){\n            // Each row can contain pi/(2asin(2/(3n+4i-2))) spots, where n is the number of rows and i is the number of the current row.\n            J = parseInt((totalSeats)/Totals[rows-1]*Math.PI/(2*Math.asin(2.0/(3.0*rows+4.0*i-2.0))));\n            // The radius of the ith row in an N-row diagram (Ri) is (3*N+4*i-2)/(4*N)\n            R = (3.0*rows+4.0*i-2.0)/(4.0*rows);\n            if (J == 1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n            } else {\n              for (var j = 0; j < J; j ++){\n                // The angle to a spot is n.(pi-2sin(r/Ri))/(Ni-1)+sin(r/Ri) where Ni is the number in the arc\n                // x=R.cos(theta) + 1.75\n                // y=R.sin(theta)\n                angle = (j)*(Math.PI-2.0*Math.sin(radius/R))/(J-1.0)+Math.sin(radius/R);\n                poslist.push({\n                  angle,\n                  x: R*Math.cos(angle)+1.75,\n                  y: R*Math.sin(angle)\n                });\n              }\n            }\n          }\n          J=totalSeats-poslist.length\n          R=(7.0*rows-2.0)/(4.0*rows)\n          if (J==1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n          }\n          else {\n              for (var j = 0; j < J; j ++) {\n                  angle=(j)*(Math.PI-2.0*Math.sin(radius/R))/((J)-1.0)+Math.sin(radius/R)\n                  poslist.push({\n                    angle,\n                    x: R*Math.cos(angle)+1.75,\n                    y: R*Math.sin(angle)\n                  })\n              }\n          }\n\n          poslist.sort(function(a,b) {\n            function value(x) {\n              return x.angle - Math.PI/2;\n            }\n            return value(b) - value(a);\n          })\n\n          function onMouseMove(svg, i){\n            svg\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltipDiv.html(getTooltipText(chartData[i], i))\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n          }\n          function onMouseOut(svg) {\n            svg\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n          }\n          \n          mainSvg.append('text')\n            .attr('x', 175)\n            .attr('y', 175)\n            .attr('style', \"font-size:36px;font-weight:bold;text-align:center;text-anchor:middle;font-family:sans-serif\")\n            .text(totalSeats);\n\n          var Counter=0 //How many spots have we drawn?\n          for (var i = 0; i < chartData.length; i ++){\n            //Make each party's blocks an svg group\n            var partySvg = mainSvg.append('g')\n              .attr(\"fill\", getFillColorFromPartyName(chartData[i].partyInfo.name, i))\n              .attr(\"id\", chartData[i].name);\n            \n            partySvg.on(\"mousemove\", onMouseMove.bind(this, partySvg, i))\t\t\t\t\t\n              .on(\"mouseout\", onMouseOut.bind(this, partySvg))\n            \n            for (var j = 0; j < chartData[i].seats; j ++, Counter ++){\n              partySvg.append('circle')\n                .attr('cx', poslist[Counter].x*100.0+5.0)\n                .attr('cy', 100.0*(1.75-poslist[Counter].y)+5.0)\n                .attr('r', radius*100.0)\n            }\n          }\n      }\n      pythonConvertedCode(totalSeats, mainSvg);\n\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./horseshoe.css\";\nimport {Chart} from \"../SeatHorseShoeChart/d3horseshoe\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats HorseShoe Chart',\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass HorseShoeChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 8\n      }\n\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-horseshoe-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"horseshoechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default HorseShoeChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonData,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes Comparison\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%'\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 16\n      }\n      if (props.partyAbbr) {\n        this.state.partyAbbr = props.partyAbbr;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonData(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName} from \"../../utils\";\nimport config from \"../../config\"\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      // svg.append(\"text\")\n      //   .attr(\"text-anchor\", \"end\")\n      //   .attr(\"x\", width)\n      //   .attr(\"y\", 40)\n      //   .text(options.usedValue);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(groupChartData.map(item => d3.max(item.data, function(d) { return options.yValue(d); }))) + 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(groupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${d.partyAbbr}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append('rect')\n        .attr('class', className(config.CSS_PREFIX + \"grouprect\"))\n        .attr('x', -x.bandwidth()*1/12)\n        .attr('y', YaxisOffset - 85)\n        .attr('width', x.bandwidth()*5/6)\n        .attr('height', 120 + height - YaxisOffset);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"baraxistext-container\");\n      \n      for (var i = 0; i < groupChartData.length; i ++) {\n        var partyAbbr = groupChartData[i].partyAbbr;\n        var chartData = groupChartData[i].data;\n\n        var subX = d3.scaleBand()\n          .rangeRound([0, x.bandwidth()*2/3])\n          .domain(chartData.map(function (d) {\n            return d.name;\n          }));\n\n        var groupSvg = svg.selectAll(`.bar-group.${partyAbbr}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n        var barAxisTextSvg = groupSvg.select(\".baraxistext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n    \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", function (d, i) {\n              return subX(d.name)+subX.bandwidth()/4;\n            })\n            .attr(\"width\", subX.bandwidth()*1/2)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d)));\n            })\n            .attr(\"height\", function (d) {\n              return height - y(Number(options.yValue(d)));\n            })\n            \n\n          var barAxisTexts = barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barAxisTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barAxisTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) + 18;\n            })\n          barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return /(19|20)\\d{2}/g.exec(d.name)[0];\n            });\n            \n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return options.yValueFormat(options.yValue(d));\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d))) - 5;\n            })\n      }\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 12\n      }\n      if (props.partyAbbrs) {\n        this.state.partyAbbrs = props.partyAbbrs;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n      \n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Seats Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Seats Comparison - ${getNationOrProvinceName(props)}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName} from \"../../utils\";\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(d.delta);\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(d.delta);\n        }\t\n      }\n\n      var newGroupChartData = groupChartData.map(item => {\n        var chartData = item.data;\n        return {\n          ...item,\n          data: [{\n            ...chartData[1],\n            delta: options.yValue(chartData[1]) - options.yValue(chartData[0])\n          }]\n        }\n      });\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [-100, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(newGroupChartData.map(item => item.data[0].delta)) + 1\n        minMaxY[0] = d3.min(newGroupChartData.map(item => item.data[0].delta)) - 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(newGroupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${d.partyAbbr}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n      \n      for (var i = 0; i < newGroupChartData.length; i ++) {\n        var partyAbbr = newGroupChartData[i].partyAbbr;\n        var deltaData = newGroupChartData[i].data;\n\n        var groupSvg = svg.selectAll(`.bar-group.${partyAbbr}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData);\n\n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", x.bandwidth()/6)\n            .attr(\"width\", x.bandwidth()*1/3)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return Math.min(y(Number(d.delta)), y(0));\n            })\n            .attr(\"height\", function (d) {\n              return Math.abs(y(Number(d.delta)) - y(0));\n            })\n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return x.bandwidth()/3;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"12px\")\n            .attr(\"y\", function(d) {\n              if (d.delta > 0)\n                return y(0) - 5;\n              return y(0) + 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData)\n            .text(function(d) {\n              return options.yValueFormat(d.delta);\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              var barTextYDelta = 0;\n              if (d.delta > 0) {\n                barTextYDelta = -5;\n              } else {\n                barTextYDelta = 15;\n              }\n              return y(Number(d.delta)) + barTextYDelta;\n            })\n      }\n\n      svg.selectAll(\".xAxisLine\").remove();\n      var axisThick = 2;\n      svg.append('line')\n        .attr('class', 'xAxisLine')\n        .attr('stroke-width', axisThick)\n        .attr('stroke', \"currentColor\")\n        .attr('x1', XaxisOffset)\n        .attr('y1', y(0)-axisThick/2)\n        .attr('x2', width)\n        .attr('y2', y(0)-axisThick/2)\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 13\n      }\n      if (props.partyAbbrs) {\n        this.state.partyAbbrs = props.partyAbbrs;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-swing-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getNationOrProvinceName(props)}: Swing ${years}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 14\n      }\n      if (props.partyAbbrs) {\n        this.state.partyAbbrs = props.partyAbbrs;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n      \n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Votes Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Votes Comparison - ${getRegionName(props)}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => (value > 0? '+': '') + (value.toFixed(2)) + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 15\n      }\n      if (props.partyAbbrs) {\n        this.state.partyAbbrs = props.partyAbbrs;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.stylesheetFor) {\n        this.state.stylesheetFor = props.stylesheetFor;\n      }\n      if (props.componentID) {\n        this.state.componentID = props.componentID;\n      }\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-swing-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={className(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      \n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getRegionName(props)}: Swing ${years}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","export {default as BarChart} from \"./BarChart/barchart\";\nexport {default as RaceForSeatsBarChart} from \"./RaceForSeatBarchart/barchart\";\nexport {default as SpoiltBarChart} from \"./SpoiltBarchart/barchart\";\nexport {default as Map} from \"./Map/map\";\nexport {default as TurnoutMap} from \"./TurnoutMap/map\";\nexport {default as TurnoutBarChart} from \"./TurnoutBarchart/barchart\";\nexport {default as BarchartWithNavMap} from \"./BarchartWithNavMap/barchartMap\";\nexport {default as QuickResultsWidget} from \"./QuickResultsWidget/quickResultsWidget\";\nexport {default as ProgVotesCountPiechart} from \"./ProgVotesCountPiechart/piechart\";\nexport {default as RaceForSeatsComparisonBarChart} from \"./SeatCompBarchart/barchart\";\nexport {default as SeatHorseShoeChart} from \"./SeatHorseShoeChart/horseshoe\";\nexport {default as VoteComparisonBarchart} from \"./VoteCompBarchart/barchart\";\n\nexport {default as TVSeatCompBarchart} from \"./TVSeatCompBarchart/barchart\";\nexport {default as TVSeatSwingBarchart} from \"./TVSeatSwingBarchart/barchart\";\nexport {default as TVVoteCompBarchart} from \"./TVVoteCompBarchart/barchart\";\nexport {default as TVVoteSwingBarchart} from \"./TVVoteSwingBarchart/barchart\";","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\",\n    \"CSS_PREFIX\": \"ELVIZ_\"\n}\n\nexport default config;","const REGION_CHANGE = \"region-change\";\nconst CHART_PREVIEW = \"chart-preview\";\nconst MAP_PREVIEW = \"map-preview\";\nconst QUICK_RESULTS_PREVIEW = \"quick-results-preview\"\nconst EXPORT_PNG = \"export-png\";\nconst EXPORT_SUPERWIDGET_PNG = \"export-superwidget-png\";\n\nexport default {\n    REGION_CHANGE,\n    CHART_PREVIEW,\n    MAP_PREVIEW,\n    QUICK_RESULTS_PREVIEW,\n    EXPORT_PNG\n};","import * as d3 from \"d3\";\nimport config from \"../config\";\n\nfunction calcPercent(a, b) {\n  if (b == 0) {\n    return 0;\n  } else {\n    return (a/b*100).toFixed(2);\n  }\n}\n\nexport function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n    results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n\n    results = results.slice(0, props.numParties);\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            validVotes: el[\"validVotes\"],\n            percOfVotes: el[\"percOfVotes\"],\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function parseVotesComparisonData(data, props) {\n  var results, edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else { //\"municipality-vd\"\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n\n  var partyfilter_edges = edges.map(edge => {\n    var nodeData = edge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"].filter(a => a.node[\"party\"][\"abbreviation\"] == props.partyAbbr);\n    var result = results[0];\n    if (result) {\n      var el = result[\"node\"];\n      return {\n          name: nodeData[\"event\"][\"description\"],\n          percOfVotes: el[\"percOfVotes\"],\n          partyInfo: el[\"party\"]\n      }\n    }\n    return {\n      name: nodeData[\"event\"][\"description\"],\n      percOfVotes: 0,\n      partyInfo: {\n        name: props.partyAbbr,\n        abbreviation: props.partyAbbr,\n      }\n    }\n  });\n  var results = partyfilter_edges.filter(edge => props.eventDescriptions.indexOf(edge.name) != -1).reverse();\n\n  var new_results = [];\n  for(var i = 0; i < props.eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == props.eventDescriptions[i]) {\n        var available = true;\n        new_results.push(results[j]);\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: props.eventDescriptions[i],\n        percOfVotes: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n  return new_results;\n}\n\nexport function parseVotesComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map(partyAbbr => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    return {\n      partyAbbr,\n      data: parseVotesComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseProgressVotesCount(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"progress votes count data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Completed\",\n      percent: calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdWithResultsCaptured\"]\n    }, {\n      name: \"Not Completed\",\n      percent: 100 - calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdCount\"] - nodeData[\"vdWithResultsCaptured\"]\n    }\n  ]\n}\n\n// export function parseMainPartyData(data, props) {\n//     if (!data)  return null;\n//     var locationToMainParty = {};\n//     var edges;\n//     var regionType = props.regionType;\n//     var sort_results = function(party_results) {\n//         party_results[\"edges\"] = party_results[\"edges\"].sort(function(a, b) {\n//             return b.node.percOfVotes - a.node.percOfVotes;\n//         })\n//         return party_results;\n//     }\n//     if (regionType === \"national\") {\n//         edges = data[\"data\"][\"allProvincialBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var provinceName = node[\"location\"][\"name\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[provinceName] = partyName;\n//         })\n//     } else if (regionType === \"province\") {\n//         edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var muniCode = node[\"location\"][\"code\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[muniCode] = partyName;\n//         })\n//     } else {// \"municipality\"\n//         edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var iecId = node[\"location\"][\"iecId\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[iecId] = partyName;\n//         })\n//     }\n//     return locationToMainParty;\n// }\n\n\n\nexport function parseMainPartyData(data, props) {\n  if (!data)  return null;\n  var locationToMainParty = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"topPartiesByProvince\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[provinceName] = partyName;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"topPartiesByMunicipality\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[muniCode] = partyName;\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"topPartiesByVotingDistrict\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[iecId] = partyName;\n      })\n  }\n  return locationToMainParty;\n}\n\nexport function parseSeatsData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"abbreviation\"],\n      partyInfo: node[\"party\"]\n    }\n  })\n  \n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return results.slice(0, props.numParties);\n}\n\nexport function parseSeatsComparisonData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"event\"][\"description\"],\n      partyInfo: node[\"party\"]\n    }\n  }).filter(result => props.eventDescriptions.indexOf(result.name) != -1)\n  .filter(result => result.partyInfo[\"abbreviation\"] == props.partyAbbr)\n\n  var new_results = [];\n  for(var i = 0; i < props.eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == props.eventDescriptions[i]) {\n        var available = true;\n        new_results.push(results[j]);\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: props.eventDescriptions[i],\n        seats: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n      // name: nodeData[\"event\"][\"description\"],\n      // percOfVotes: 0,\n      // partyInfo: {\n      //   name: props.partyAbbr,\n      //   abbreviation: props.partyAbbr,\n      // }\n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return new_results;\n}\n\nexport function parseSeatsComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map(partyAbbr => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    return {\n      partyAbbr,\n      data: parseSeatsComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseTurnoutData(data, props) {\n  if (!data)  return null;\n  var locationToTurnout = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[provinceName] = percVoterTurnout;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[muniCode] = percVoterTurnout;\n      })\n  } else {// \"municipality\" or \"municipality-vd\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[iecId] = percVoterTurnout;\n      })\n  }\n  return locationToTurnout;\n}\n\nexport function parseTurnoutDataForAllEvents(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"]; \n    return {\n      name: event,\n      percVoterTurnout\n    }\n  }).filter(edge => edge.name.toLowerCase().indexOf(props.eventType) != -1)\n}\n\nexport function parseSpoiltVotesData(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"spoilt data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Valid\",\n      percent: calcPercent(nodeData[\"totalValidVotes\"], nodeData[\"totalVotesCast\"])\n    }, {\n      name: \"Spoilt\",\n      percent: calcPercent(nodeData[\"spoiltVotes\"], nodeData[\"totalVotesCast\"])\n    }\n  ]\n}\n\nexport function getRegionName(state) {\n  function beautifiedMuniName(muniName) {\n    if (muniName.indexOf(\" - \") != -1) {\n        muniName = muniName.split(\" - \")[1];\n    }\n    if (muniName.indexOf(\"[\") != -1) {\n        muniName = muniName.split(\"[\")[0];\n    }\n    return muniName;\n  }\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  if (state.regionType == \"province\") {\n    return state.provinceName;\n  }\n  if (state.regionType == \"municipality\") {\n    return beautifiedMuniName(state.muniName);\n  }\n  if (state.regionType == \"municipality-vd\") {\n    return beautifiedMuniName(state.muniName) + \"-\" + state.iecId;\n  }\n}\n\nexport function getNationOrProvinceName(state) {\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  return state.provinceName;\n}\n\nexport function createTooltip(className) {\n  var tooltipClassName = className(config.CSS_PREFIX + \"tooltip\")\n  if (document.getElementsByClassName(tooltipClassName)[0]) {\n    return d3.select(`.${tooltipClassName}`);\n  } else {\n    return d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", tooltipClassName)\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n}\n\n\n\nexport function fixMapLabelIntersect() {\n  var labelElements = document.getElementsByClassName(\"place-label\");\n  var regions = {};\n  var overlapCnt = {};\n  var i;\n\n  for (i = 0; i < labelElements.length; i ++) {\n      regions[i] = labelElements[i].getBoundingClientRect();\n  }\n\n  for (i = 0; i < labelElements.length; i ++) {\n      for (var j = 0; j < i; j ++) {\n          var rect1 = regions[i];\n          var rect2 = regions[j];\n          var overlap = !(rect1.right < rect2.left || \n              rect1.left > rect2.right || \n              rect1.bottom < rect2.top || \n              rect1.top > rect2.bottom);\n          if (overlap) {\n              overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n          }\n      }\n      if (overlapCnt[i] > 2) {\n          labelElements[i].setAttribute(\"opacity\", 0)\n      } else if (overlapCnt[i] > 0){\n          labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n      } else {\n\n      }\n  }\n}\n\nexport function triggerCustomEvent(eventName, eventParam) {\n  var event = new CustomEvent(eventName, { detail: eventParam });\n  document.dispatchEvent(event);\n}\n\nexport function formatPartyName(name) {\n  return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n}\n\nexport function getSubRegionName(properties, state) {\n  if (state.regionType === \"national\") {\n      return properties.SPROVINCE;\n  } else if (state.regionType === \"province\") {\n      return properties.smunicipal && properties.smunicipal.split(\" - \")[1].split(\"[\")[0]; \n  } else {//municipality\n    if (properties.Municipali) {\n      return properties.Municipali.split(\" - \")[1].split(\"[\")[0];\n    }\n    return properties.SMUNICIPAL && properties.SMUNICIPAL.split(\" - \")[1].split(\"[\")[0]; \n  }\n}\n\nexport function getMunicipalityCode(properties) {\n  return properties.code || (properties.smunicipal && properties.smunicipal.split(\" - \")[0].replace(/\\s/g, \"\"));\n}\n\nexport function getMunicipalityiecId(properties) {\n  return properties.VDNumber || properties.PKLVDNUMBE;\n}\n\nexport function getRegionFileName(state) {\n  var nationalMapFile = \"province_lo-res.geojson\";\n  function getProvinceFileName(provinceName) {\n      var provinceNameToFileMap = {\n          \"Limpopo\": \"lim_lo-res.geojson\",\n          \"Mpumalanga\": \"mp_lo-res.geojson\",\n          \"Gauteng\": \"gt_lo-res.geojson\",\n          \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n          \"North West\": \"nw_lo-res.geojson\",\n          \"Free State\": \"fs_lo-res.geojson\",\n          \"Eastern Cape\": \"ec_lo-res.geojson\",\n          \"Northern Cape\": \"nc_lo-res.geojson\",\n          \"Western Cape\": \"wc_lo-res.geojson\",\n      }\n      return provinceNameToFileMap[provinceName];\n  }\n  switch(state.regionType) {\n      case \"national\":\n          return nationalMapFile;\n      case \"province\":\n          return getProvinceFileName(state.provinceName);\n      case \"municipality\":\n          return state.muniCode + \".topojson\";//\".geojson\";\n      case \"municipality-vd\":\n          return \"vd-data/\" + state.muniCode + \"-\" + state.iecId + \".topojson\"; //\".geojson\";\n      default:\n          return null;\n  }\n}\n\nexport function loadScript(id, scriptURL, callback) {\n  if (document.getElementById(id))\n    return;\n  var script = document.createElement('script');\n  script.onload = function () {\n    if(callback) {\n      callback();\n    }\n  };\n  script.id = id;\n  script.src = scriptURL;\n\n  document.head.appendChild(script);\n}\n\nexport function loadCanvg() {\n  loadScript(\"canvgScript\", \"https://cdn.jsdelivr.net/npm/canvg/dist/browser/canvg.min.js\", function() {\n    console.log(\"canvgScript load finished\");\n  });\n}\n\nexport function loadJSZip() {\n  loadScript(\"jsZipScript\", \"https://cdnjs.cloudflare.com/ajax/libs/jszip/3.2.0/jszip.min.js\", function() {\n    console.log(\"loadJSZip load finished\");\n  });\n}\n\nexport function loadScriptsForEmbedMode() {\n  loadCanvg();\n  loadJSZip();\n}"],"sourceRoot":""}