{"version":3,"sources":["webpack:///./src/api/index.js","webpack:///./src/components/Map/map.css","webpack:///./src/components/Map/map.js","webpack:///./src/components/Map/mapEmbed.js","webpack:///./src/components/Map/map.mdx","webpack:///./src/components/Map/mapEmbed.css","webpack:///./src/config/index.js","webpack:///./src/events/index.js","webpack:///./src/utils/index.js"],"names":["client","apollo_client__WEBPACK_IMPORTED_MODULE_0__","link","apollo_link_http__WEBPACK_IMPORTED_MODULE_1__","uri","useGETForQueries","headers","Content-Type","cache","apollo_cache_inmemory__WEBPACK_IMPORTED_MODULE_2__","getElectionEvents","query","gql","_templateObject","getPartyColors","_templateObject2","getVotesDataM","options","eventDescription","_templateObject3","numParties","_templateObject4","provinceName","muniCode","_templateObject5","_templateObject6","vdNumber","getMainParties","_templateObject7","_templateObject8","muniRegName","_templateObject9","module","exports","region","loading-spinner","map-navbar","map-container","map","partyColorsData","regionColor","className","originName","styles","Map","props","_this","_classCallCheck","this","_getPrototypeOf","call","state","disableNavigation","regionType","muniName","handlePreviewEvent","bind","_assertThisInitialized","Component","container","console","drawGraph","draw","getContainer","document","events","event","newState","detail","setState","selectionData","CustomEvent","REGION_CHANGE","d3","refs","vizcontainer","loading","react_default","a","createElement","getRegionName","ref","react_loading_default","type","color","height","width","style","display","self","nationalMapFile","tooltipDiv","fullRouteGeoJsonFile","config","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","process","svg","dataLoaders","partyColorsLoader","Promise","all","then","values","geoJsonData","locationToMainParty","parseMainPartyData","getJsonDataFeatures","partyColorByName","edge","topojson","projection","path","d","i","partyName","properties","SPROVINCE","PKLVDNUMBE","getMunicipalityVdNumber","getFillColorFromPartyName","concat","center","projectionCenter","polylabel","labelElements","regions","overlapCnt","length","j","rect1","rect2","bottom","pageX","smunicipal","w","fo","muniImuniCodeD","window","redrawChart","Map_map","mapEmbed_className","originClassName","bootstrapStyles","MapEmbed","mapEmbed_classCallCheck","mapEmbed_possibleConstructorReturn","mapEmbed_getPrototypeOf","elementId","e","value","MAP_PREVIEW","_this2","DOMAIN","_this$state","placeholder","onChange","onRegionTypeChange","checked","onClick","onPreview","replace","Map_mapEmbed","MDXContent","map_classCallCheck","map_possibleConstructorReturn","map_getPrototypeOf","layout","React","_this$props","components","_objectWithoutProperties","dist","name","id","index_m","__codesandbox","__position","__code","__scope","embedcode","__webpack_exports__","BARCHART_PREVIEW","parseVotesData","data","firstEdge","nodeData","results","node","el","validVotes","percOfVotes","partyInfo","edges","__webpack_require__"],"mappings":"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","file":"static/js/src-components-map-map.a747079f.js","sourcesContent":["import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport gql from \"graphql-tag\"\n\n\nvar API_URI = \"https://elections2019.xyz/graphql\";\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n  cache: new InMemoryCache()\n})\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            colour\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getVotesDataM(options) {\n  var eventDescription = options.eventDescription;\n  if (!eventDescription)\n  return;\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots(\n          event_Description:\"${eventDescription}\"\n        ){\n          edges{\n            node{\n              topResult(first:${options.numParties}) {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n                \n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          event_Description:\"${eventDescription}\",\n          location_Name_Icontains:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              topResult(first:${options.numParties}) {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniCode = options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          event_Description:\"${eventDescription}\",\n          location_Province_Name:\"${options.provinceName}\", \n          location_Code: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              topResult(first:${options.numParties}){\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n        event_Description:\"${eventDescription}\",\n        location_Id:\"${options.vdNumber}\", \n        location_Ward_Municipality_Name_Icontains:\"${options.muniCode}\") {\n          edges{\n            node{\n              location {\n                vdNumber\n              }\n              topResult(first:${options.numParties}) {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getMainParties(options) {\n  var eventDescription = options.eventDescription;\n  if (!eventDescription)\n    return;\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          event_Description:\"${eventDescription}\"\n        ){\n          edges{\n            node{\n              topResult(first:1) {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          event_Description:\"${eventDescription}\",\n          location_Province_Name:\"${options.provinceName}\"\n        ) {\n          edges{\n            node {\n              topResult(first:1){\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniRegName = options.muniName.split(\" - \")[1];\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots( \n          event_Description:\"${eventDescription}\",\n          location_Ward_Municipality_Name_Icontains:\"${muniRegName}\") {\n            edges{\n              node{\n                location {\n                  vdNumber\n                }\n                topResult(first:1) {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                      }\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"region\":\"map_region__1GVD7\",\"loading-spinner\":\"map_loading-spinner__2woTM\",\"map-navbar\":\"map_map-navbar__1sP3i\",\"map-container\":\"map_map-container__1nrEx\",\"map\":\"map_map__1IdTC\"};","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { SideNav, Nav } from \"react-sidenav\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"./map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData,\n  parseMainPartyData\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar provincesData = [\n    {\n        \"name\": \"Limpopo\",\n        \"abbreviation\": \"LIM\",\n        \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n    },\n    {\n        \"name\": \"Mpumalanga\",\n        \"abbreviation\": \"MP\",\n        \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n    },\n    {\n        \"name\": \"Gauteng\",\n        \"abbreviation\": \"GT\",\n        \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n    },\n    {\n        \"name\": \"KwaZulu-Natal\",\n        \"abbreviation\": \"KZN\",\n        \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n    },\n    {\n        \"name\": \"North West\",\n        \"abbreviation\": \"NW\",\n        \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n    },\n    {\n        \"name\": \"Free State\",\n        \"abbreviation\": \"FS\",\n        \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n    },\n    {\n        \"name\": \"Eastern Cape\",\n        \"abbreviation\": \"EC\",\n        \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n    },\n    {\n        \"name\": \"Northern Cape\",\n        \"abbreviation\": \"NC\",\n        \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n    },\n    {\n        \"name\": \"Western Cape\",\n        \"abbreviation\": \"WC\",\n        \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n    }\n]\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            vdNumber: \"\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        console.log(\"drawing ...map\");\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state)\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    handleNavBarSelection(regionType, selectionData) {\n        var newState;\n        if (regionType == \"national\") {\n            newState = {regionType: regionType};\n            if (this.state.regionType == newState.regionType)\n                return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            if (this.state.regionType == newState.regionType && this.state.provinceName == newState.provinceName)\n                return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            if (this.state.regionType == newState.regionType \n                && this.state.provinceName == newState.provinceName\n                && this.state.newState == newState.muniName)\n                return;\n        }\n\n        var event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n        document.dispatchEvent(event);\n        this.setState(newState);\n    }\n\n    getRegionName() {\n        if (this.state.regionType == \"national\") {\n          return \"SA\";\n        }\n        if (this.state.regionType == \"province\") {\n          return this.state.provinceName;\n        }\n        if (this.state.regionType == \"municipality\") {\n          return this.state.muniName;\n        }\n        if (this.state.regionType == \"municipality-vd\") {\n          return this.state.muniName + \"-\" + this.state.vdNumber;\n        }\n      }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        const theme = {\n            selectionColor: \"#C51162\"\n        };\n        var {\n            disableNavigation\n        } = this.state;\n        return (\n            <div className=\"map-container\">\n                {/* {\n                    !disableNavigation &&\n                        <div className={className(\"map-navbar\")}>\n                            <SideNav\n                                defaultSelectedPath=\"1\"\n                                theme={theme}\n                                onItemSelection={this.onItemSelection}\n                                className={className(\"map-navbar\")}\n                            >\n                                <Nav id=\"navbar-national\" onClick={this.handleNavBarSelection.bind(this, \"national\")}>\n                                    National\n                                </Nav>\n                                {\n                                    provincesData.map(province => {\n                                        return <Nav \n                                            key={province.abbreviation} \n                                            id={\"navbar-province-\"+province.abbreviation}\n                                            onClick={this.handleNavBarSelection.bind(this, \"province\", province)}>\n                                                { province.name }\n                                                {\n                                                    province.munis.map(muni => {\n                                                        return <Nav \n                                                            key={muni.muniCode} \n                                                            id={\"navbar-muni-\"+muni.muniCode}\n                                                            onClick={this.handleNavBarSelection.bind(this, \"municipality\", muni)}\n                                                            >\n                                                                {muni.muniName.split(\"-\")[1].split(\"[\")[0] }\n                                                            </Nav>\n                                                    })\n                                                }\n                                        </Nav>\n                                    })\n                                }\n                            </SideNav>\n                        </div> \n                } */}\n\n                {this.getRegionName()}\n\n                <div className=\"loading-spinner\" ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n                <div ref=\"vizcontainer\" style={{display: 'hidden'}} className=\"map\"></div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(provinceName) {\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[provinceName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.provinceName);\n                case \"municipality\":\n                    return self.state.muniCode + \".topojson\";\n                default:\n                    return null;\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv;\n        if (document.getElementsByClassName(\"tooltip\")[0]) {\n          tooltipDiv = d3.select(\".tooltip\");\n        } else {\n          tooltipDiv = d3.select(\"body\").append(\"div\")\t\n            .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n            .style(\"opacity\", 0);\n        }\n\n        console.log(\"process.env\", process.env)\n\n        var w = 900;\n        var h = 800;\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\").style(\"background-color\",\"#ffffff\")\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h)\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        Promise.all(dataLoaders).then(function(values){ \n            var geoJsonData = values[0];\n            var locationToMainParty = parseMainPartyData(values[1], props);\n            partyColorsData = partyColorsData || values[2];  \n\n            var partyColorByName = {};\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n              partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                partyColorByName[edge.node.name] = edge.node.colour;\n              })\n            }            \n\n            function getFillColorFromPartyName(partyName) {\n              if (!partyName)\n                return regionColor;\n              return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n            }\n\n            function getMainPartyColorFromRegion(d, i) {\n                var partyName;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    partyName = locationToMainParty[provinceName];\n                } else if (regionType === \"province\") {\n                    function getMunicipalityCode(properties) {\n                        return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                    }\n                    var muniCode = getMunicipalityCode(d.properties);\n                    partyName = locationToMainParty[muniCode];\n                } else {// \"municipality\"\n                    function getMunicipalityVdNumber(properties) {\n                        return properties.PKLVDNUMBE;\n                    }\n                    var vdNumber = getMunicipalityVdNumber(d.properties);\n                    partyName = locationToMainParty[vdNumber];\n                }\n                return getFillColorFromPartyName(partyName);\n            }\n\n            var getJsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for only munis\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n            }\n\n            getJsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(getJsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getMainPartyColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            // if (self.state.regionType == \"province\") {\n            //    console.log(\"fetch muni Names and codes\", JSON.stringify(getJsonDataFeatures.map(d => {\n            //         function getMunicipalityCode(properties) {\n            //             return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n            //         }\n            //         var newState = {\n            //             provinceName: self.state.provinceName,\n            //             muniName: d.properties.smunicipal,\n            //             muniCode: getMunicipalityCode(d.properties),\n            //         }\n            //         return newState;\n            //     })));\n            // }\n            \n            if (self.state.regionType !== \"municipality\") {\n                svg.selectAll(\".place-label\")\n                    .data(getJsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function(d) { \n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    })\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                var labelElements = document.getElementsByClassName(\"place-label\");\n\n                var regions = {};\n                var overlapCnt = {};\n                var i;\n\n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    regions[i] = labelElements[i].getBoundingClientRect();\n                }\n    \n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    for (var j = 0; j < i; j ++) {\n                        var rect1 = regions[i];\n                        var rect2 = regions[j];\n                        var overlap = !(rect1.right < rect2.left || \n                            rect1.left > rect2.right || \n                            rect1.bottom < rect2.top || \n                            rect1.top > rect2.bottom);\n                        if (overlap) {\n                            overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n                        }\n                    }\n                    if (overlapCnt[i] > 2) {\n                        labelElements[i].setAttribute(\"opacity\", 0)\n                    } else if (overlapCnt[i] > 0){\n                        labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n                    } else {\n    \n                    }\n                }\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(getJsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n                    function regionName() {\n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    }\n                    tooltipDiv.html(regionName())\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        function getMunicipalityCode(properties) {\n                            return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        function getMunicipalityVdNumber(properties) {\n                            return properties.PKLVDNUMBE;\n                        }\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            vdNumber: getMunicipalityVdNumber(d.properties),\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                    }\n                })\n            if (!self.state.disableNavigation) {\n                var fo = svg.append(\"foreignObject\")\n                    .attr(\"x\", w - 100)\n                    .attr(\"y\", 10)\n                    .attr(\"width\", 100)\n                    .attr(\"height\", 30)\n                    .attr(\"class\", \"map-controls\")\n                fo.append(\"xhtml:div\")\n                    .append(\"button\")\n                    .attr(\"class\", \"go-back\")\n                    .html(\"go back\")\n                    .on(\"click\", function() {\n                        var regionType = self.state.regionType;\n                        var newState, event;\n    \n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniImuniCodeD: self.state.muniCode,\n                            vdNumber: self.state.vdNumber,\n                        }\n                        \n                        if (regionType === \"province\") {\n                            newState.regionType = \"national\";\n                        } else if (regionType === \"municipality\") {\n                            newState.regionType = \"province\";\n                        }\n    \n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    });\n            }\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        })\n\n        var redrawChart = function() {\n\n        };\n\n        window.addEventListener(\"resize\", redrawChart, 200);\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        var event = new CustomEvent(events.MAP_PREVIEW, { detail: this.state });\n        document.dispatchEvent(event);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,            \n            disableNavigation,\n            regionType,\n            provinceName,\n            muniName,\n        } = this.state;\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"City of Cape Town\"\n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} \n                            />\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showMap(document.getElementById(\"${elementId}\"),{\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from \"docz\";\nimport Map from \"./map\";\nimport MapEmbed from \"./mapEmbed\";\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"barchart\"}}>{`BarChart`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<Map />\\n<MapEmbed />'} __scope={{props: this ? this.props : props,Map,MapEmbed}}>\n    <Map/>\n    <MapEmbed />\n</Playground>\n           </MDXTag>\n  }\n}\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embedcode\":\"mapEmbed_embedcode__1_eoN\"};","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\"\n}\n\nexport default config;","const REGION_CHANGE = \"region-change\";\nconst BARCHART_PREVIEW = \"barchart-preview\";\nconst MAP_PREVIEW = \"map-preview\";\n\nexport default {\n    REGION_CHANGE,\n    BARCHART_PREVIEW,\n    MAP_PREVIEW\n};","export function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            validVotes: el[\"validVotes\"],\n            percOfVotes: el[\"percOfVotes\"],\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function parseMainPartyData(data, props) {\n    if (!data)  return null;\n    var locationToMainParty = {};\n    var edges;\n    var regionType = props.regionType;\n    if (regionType === \"national\") {\n        edges = data[\"data\"][\"allProvincialBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var provinceName = node[\"location\"][\"name\"];\n            var partyName = node[\"topResult\"][\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[provinceName] = partyName;\n        })\n    } else if (regionType === \"province\") {\n        edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var muniCode = node[\"location\"][\"code\"];\n            var partyName = node[\"topResult\"][\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[muniCode] = partyName;\n        })\n    } else {// \"municipality\"\n        edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var vdNumber = node[\"location\"][\"vdNumber\"];\n            var partyName = node[\"topResult\"][\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[vdNumber] = partyName;\n        })\n    }\n    return locationToMainParty;\n}"],"sourceRoot":""}