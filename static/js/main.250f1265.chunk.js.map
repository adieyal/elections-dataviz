{"version":3,"sources":["config/index.js","utils/index.js","components/BarChart/d3barchart.js","events/index.js","api/config.js","api/race-for-seats.js","api/race-for-votes.js","api/turnout.js","api/spoilt.js","api/prog-votescount.js","api/index.js","components/BarChart/barchart.js","components/RaceForSeatBarchart/barchart.js","components/SpoiltBarchart/barchart.js","components/Map/map.js","components/TurnoutMap/map.js","components/TurnoutBarchart/barchart.js","components/BarchartWithNavMap/barchartMap.js","components/ProgVotesCountPiechart/d3piechart.js","components/ProgVotesCountPiechart/piechart.js","components/RaceForSeatDonut/piechart.js","components/VoteCompBarchart/barchart.js","components/SeatCompBarchart/barchart.js","components/SeatHorseShoeChart/d3horseshoe.js","components/SeatHorseShoeChart/horseshoe.js","components/VotePredictionLineChart/d3voteprediction.js","components/VotePredictionLineChart/voteprediction.js","components/SplitNatProv/d3groupbarchart.js","components/SplitNatProv/barchart.js","components/NavBar/navbar.js","components/QuickResultsWidget/quickResultsWidget.js","components/TVVoteCompBarchart/d3groupbarchart.js","components/TVSeatCompBarchart/barchart.js","components/TVVoteSwingBarchart/d3deltabarchart.js","components/TVSeatSwingBarchart/barchart.js","components/TVVoteCompBarchart/barchart.js","components/TVVoteSwingBarchart/barchart.js","App.js","serviceWorker.js","index.js"],"names":["config","DOMAIN","CSS_PREFIX","calcPercent","a","b","toFixed","parseVotesData","data","props","firstEdge","regionType","edges","console","error","nodeData","sort","node","percOfVotes","slice","numParties","map","el","name","iecId","validVotes","partyInfo","parseVotesComparisonData","eventDescriptions","electionType","results","edge","partyResults","result","filter","partyIecId","partyAbbr","abbreviation","indexOf","reverse","new_results","i","length","available","j","push","parseVotesComparisonDataMultipleParties","partyAbbrs","partyIdx","newProps","Object","objectSpread","partyIecIds","parseProgressVotesCount","percent","totalCount","count","getTopPartyNameFromNode","parseSeatsData","seats","parseSeatsComparisonData","parseSeatsComparisonDataMultipleParties","parseSpoiltVotesData","getRegionName","state","beautifiedMuniName","muniName","split","provinceName","getNationOrProvinceName","getNationOrProvinceName2","createTooltip","className","tooltipClassName","document","getElementsByClassName","d3","concat","append","attr","style","fixMapLabelIntersect","labelElements","regions","overlapCnt","getBoundingClientRect","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","triggerCustomEvent","eventName","eventParam","event","CustomEvent","detail","dispatchEvent","formatPartyName","toLowerCase","replace","l","toUpperCase","getSubRegionName","properties","SPROVINCE","smunicipal","getMunicipalityiecId","getMunicipalityCode","code","VDNumber","PKLVDNUMBE","getRegionFileName","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","muniCode","handleRegionChange","newState","JSON","parse","stringify","componentID","this","setState","fetchDataFromOBJ","keys","forEach","key","formatClassNameFromString","str","createSvg","container","width","height","selectAll","remove","classed","createErrorText","xOffset","yOffset","undefined","Chart","options","chartType","yAxisLabel","yValue","d","yValueFormat","value","offset","predefColors","svg","showLegend","tooltipDiv","x","rangeRound","y","text","barSvg","barTextSvg","errorText","draw","chartData","colorsData","partyColorByName","partyAbbrByName","getFillColorFromPartyName","partyName","getFillColor","noXaxisByParty","colour","domain","minMaxY","dynamicYAxisFromValues","maxValue","parseFloat","customizeDynamicMaxValue","select","transition","duration","call","ticks","tickFormat","bars","exit","enter","bandwidth","on","html","getTooltipText","pageX","pageY","Number","barTexts","parties","_ref","party","log","legends","xydata","parseInt","getLegendXY","destroy","events","client","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","getSeatsDataForComparison","query","gql","_templateObject","_templateObject2","getSeatsData","eventDescription","_templateObject3","_templateObject4","getVotesDataForComparison","race_for_votes_templateObject","race_for_votes_templateObject2","race_for_votes_templateObject3","race_for_votes_templateObject4","getVotesDataM","_templateObject9","_templateObject10","_templateObject11","_templateObject12","getTurnoutDataForOneEvent","turnout_templateObject4","turnout_templateObject5","turnout_templateObject6","turnout_templateObject7","getSpoiltData","spoilt_templateObject","spoilt_templateObject2","spoilt_templateObject3","spoilt_templateObject4","getProgressVotesCount","prog_votescount_templateObject","prog_votescount_templateObject2","prog_votescount_templateObject3","prog_votescount_templateObject4","getPartyColors","api_templateObject2","getProvincesData","provincesData","munis","localeCompare","partyColorsData","originName","styles","cn","chartOptions","maxVal","Math","min","BarChart","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","comp","stylesheetFor","chart","refreshIntervalID","exportAsPNG","bind","assertThisInitialized","exportAsPNGUri","handlePreviewEvent","self","getContainer","setInterval","addEventListener","removeEventListener","clearInterval","svgToPng","saveSvgAsPng","refs","vizcontainer","childNodes","Promise","resolve","reject","svgAsPngUri","_this$state","react_default","createElement","ref","dataLoaders","partyColorsLoader","all","then","values","votesData","drawGraph","catch","locationResult","fetchLocationTrackFromVDdata","needUpdate","Component","regionColor","Map","disableNavigation","prevProps","prevState","rect","rendercanvas","window","canvg","ignoreDimensions","scaleWidth","scaleHeight","toDataURL","e","canvas","filename","lnk","download","href","createEvent","initMouseEvent","fireEvent","loading","react_loading_default","type","color","_this2","fullRouteGeoJsonFile","getLoadingSpinner","h","geoJsonLoader","_templateObject13","_templateObject14","_templateObject15","getMainParties","geoJsonData","locationToMainParty","parseMainPartyData","jsonDataFeatures","getMainPartyName","objects","topojson","features","projection","fitSize","path","availableCnt","center","projectionCenter","geometry","polylabel","coordinates","undefinedText","mainPartyName","subRegionName","tooltipText","appendSpan","foDiv","regionName","addSub","appendLink","setRegionType","currentRegionName","setTimeout","alert","turnout_templateObject","turnout_templateObject2","turnout_templateObject3","getTurnoutData","locationToTurnout","percVoterTurnout","parseTurnoutData","getFillColorFromTurnout","turnout","getTurnout","it","turnoutData","eventType","turnout_templateObject8","turnout_templateObject9","turnout_templateObject10","turnout_templateObject11","getTurnoutDataForAllEvents","edge1","edge2","edge1Year","exec","parseTurnoutDataForAllEvents","margin","variable","category","floatFormat","random","radius","pie","arc","outerRadius","innerRadius","cornerRadius","padAngle","totalSvg","transformX","labelSvg","toolTip","selection","tip","toolTipHTML","arcTween","_current","t","colorsDataP","updatePath","data0","data1","each","m","k","findPreceding","startAngle","endAngle","n","findFollowing","findNeighborArc","attrTween","PieChart","progressVotesData","Completed","Not Completed","viewBox","seatsData","mainSvg","originChartData","largest","rest","totalSeats","rows","poslist","J","R","angle","Totals","PI","asin","sin","cos","onMouseMove","onMouseOut","Counter","partySvg","pythonConvertedCode","HorseShoeChart","has_drawn","showPoints","pointRadius","showPointLabels","pointLabelOffset","showCurrentLine","getPartyColour","partyColours","partyColourByName","PartyColours","range","radiusScale","axisContainer","lineContainer","eventCaptureContainer","valueline","cleaned_name","VotePredictionLineChart","Date","hr","getHours","getMinutes","currentTimeText","getDate","getMonth","getFullYear","predictionData","XaxisOffset","groupChartData","topLabel","item","groupSvgs","groupSvg","_loop","subX","_ref2","usedValue","numPartiesSplitNatProv","eventDescriptionsSplitNatProv","_templateObject5","_templateObject6","_templateObject7","_templateObject8","getVotesDataForAllEvents","year","shortenedNatProv","getShortenedEventDescription","longEventDescription","edge2Year","parseVotesDataForAllEvents","cssPrefix","metrosData","CustomLink","onClick","hasSubMenu","toggleSubMenu","activateMe","newLocation","to","selectedMenuLabel","label","children","React","NavBar","nationalEventDescription","provincialEventDescription","activeLinkId","handleNavBarSelection","getElementById","id","rel","head","appendChild","navbar","target","classList","passInfo","enableMap","enableTurnoutProgressSpoilt","selectionData","join","preventDefault","content","icon","toConsumableArray","province","metro","lib_default","LinkComponent","QuickResultsWidget","enableBarChart","national","provincial","currentTurnout","currentCountingProg","currentSpoiltVotes","fetchCurrentResultData","handleSeatsElectedsEvent","spoiltData","progVotesData","parsedSpoiltData","parsedTurnoutData","parseTurnoutDataForOneEvent","parsedProgVotesData","parsedVotesData","voteItem","parsedSeatsData","seatItem","zipfileName","imageLoadPromises","barchartInstances","instance","mapInstance","barchartInstance","zip","JSZip","imgs","folder","element","idx","file","base64","generateAsync","saveAs","triggerState","_this$state2","toLocaleLowerCase","getRegionName2","_this$state3","mapState","Map_map","assign","TurnoutMap_map","_this3","_this$state4","BarChart_barchart","SeatHorseShoeChart_horseshoe","TurnoutBarchart_barchart","ProgVotesCountPiechart_piechart","VotePredictionLineChart_voteprediction","Array","VoteCompBarchart_barchart","SeatCompBarchart_barchart","SplitNatProv_barchart","placeholder","onShowVDResult","vdInput","components","renderQuickResultsTitle","renderTurnoutProgressSpoilt","renderMyVDEnterForm","renderBarchart","renderMap","NavBar_navbar","YaxisOffset","barAxisTextSvg","barAxisTexts","newGroupChartData","delta","deltaData","abs","barTextYDelta","axisThick","App","QuickResultsWidget_quickResultsWidget","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.250f1265.chunk.js","sourcesContent":["var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\",\n    // \"DOMAIN\": \"http://127.0.0.1:8080\",\n    \"CSS_PREFIX\": \"ELVIZ_\"\n}\n\nexport default config;","import * as d3 from \"d3\";\nimport config from \"../config\";\n\nfunction calcPercent(a, b) {\n  if (b == 0) {\n    return 0;\n  } else {\n    return (a/b*100).toFixed(2);\n  }\n}\n\nexport function getShortenedEventDescription(event) {\n  var year = /(19|20)\\d{2}/g.exec(event[\"description\"])[0];\n  var shortenedNatProv = (event[\"eventType\"][\"description\"] == \"National Election\"? \"Nat\": \"Prov\");\n  return `${year} ${shortenedNatProv}`;\n}\n\nexport function parseVotesDataForAllEvents(data, props) {\n    var results, edges;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      edges = data[\"data\"][\"allBallots\"].edges;\n    } else if (regionType == \"province\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n    } else if (regionType == \"municipality\") {\n      edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n    } else { //\"municipality-vd\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n    }\n\n    console.log(\"props\", props)\n    return edges.map(edge => {\n      var nodeData = edge[\"node\"];\n\n      var eventDescription = getShortenedEventDescription(nodeData[\"event\"]); //nodeData[\"event\"][\"description\"];\n      var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n      results = partyResults[\"edges\"];\n      results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n      results = results.slice(0, props.numPartiesSplitNatProv);\n\n      return {\n        longEventDescription: nodeData[\"event\"][\"description\"],\n        eventDescription,\n        data: results.map(function(node) {\n          var el = node[\"node\"];\n          return {\n              name: el[\"party\"][\"abbreviation\"],\n              iecId: el[\"party\"][\"iecId\"],\n              validVotes: el[\"validVotes\"].toFixed(2),\n              percOfVotes: el[\"percOfVotes\"].toFixed(2),\n              partyInfo: el[\"party\"]\n          }\n        })\n      }\n    }).filter(edge => props.eventDescriptionsSplitNatProv.indexOf(edge.longEventDescription) != -1)\n    .sort(function(edge1, edge2) {\n      var edge1Year = parseInt(/(19|20)\\d{2}/g.exec(edge1.eventDescription)[0]);\n      var edge2Year = parseInt(/(19|20)\\d{2}/g.exec(edge2.eventDescription)[0]);\n      if (edge1Year == edge2Year) {\n        if (edge1.eventDescription > edge2.eventDescription) {\n          return 1;\n        }\n        return -1;\n      }\n      return edge1Year - edge2Year;\n    })\n}\n \nexport function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n    results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n\n    results = results.slice(0, props.numParties);\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            iecId: el[\"party\"][\"iecId\"],\n            validVotes: el[\"validVotes\"].toFixed(2),\n            percOfVotes: el[\"percOfVotes\"].toFixed(2),\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function fetchLocationTrackFromVDdata(data) {\n  var firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  var nodeData = firstEdge[\"node\"];\n  var locationResult = nodeData[\"location\"];\n  var newState = {\n    regionType: \"municipality-vd\",\n    iecId: locationResult[\"iecId\"],\n    muniCode: locationResult[\"ward\"][\"municipality\"][\"code\"],\n    provinceName: locationResult[\"ward\"][\"municipality\"][\"province\"][\"name\"],\n  };     \n  return newState;      \n}\n\nexport function parseVotesComparisonData(data, props) {\n  var results, edges;\n\n  var regionType = props.regionType;\n  var eventDescriptions = props.eventDescriptions[\"national\"]\n  if (props.electionType === \"provincial\")\n    eventDescriptions = props.eventDescriptions[\"provincial\"]\n\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else { //\"municipality-vd\"\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n\n  var partyfilter_edges = edges.map(edge => {\n    var nodeData = edge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"]\n      .filter(a => props.partyIecId\n        ? (a.node[\"party\"][\"iecId\"] == props.partyIecId) \n        : (a.node[\"party\"][\"abbreviation\"] == props.partyAbbr));\n    var result = results[0];\n    if (result) {\n      var el = result[\"node\"];\n      return {\n          name: nodeData[\"event\"][\"description\"],\n          percOfVotes: el[\"percOfVotes\"].toFixed(2),\n          partyInfo: el[\"party\"]\n      }\n    }\n    return {\n      name: nodeData[\"event\"][\"description\"],\n      percOfVotes: 0,\n      partyInfo: {\n        name: props.partyAbbr,\n        abbreviation: props.partyAbbr,\n      }\n    }\n  });\n  var results = partyfilter_edges.filter(edge => eventDescriptions.indexOf(edge.name) != -1).reverse();\n\n  var new_results = [];\n  for(var i = 0; i < eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == eventDescriptions[i]) {\n        var available = true;\n        new_results.push(results[j]);\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: eventDescriptions[i],\n        percOfVotes: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n  return new_results;\n}\n\nexport function parseVotesComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map((partyAbbr, partyIdx) => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    newProps.partyIecId = props.partyIecIds[partyIdx];\n    return {\n      partyAbbr,\n      data: parseVotesComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseProgressVotesCount(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"progress votes count data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Completed\",\n      percent: calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdWithResultsCaptured\"]\n    }, {\n      name: \"Not Completed\",\n      percent: 100 - calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdCount\"] - nodeData[\"vdWithResultsCaptured\"]\n    }\n  ]\n}\n\n// export function parseMainPartyData(data, props) {\n//     if (!data)  return null;\n//     var locationToMainParty = {};\n//     var edges;\n//     var regionType = props.regionType;\n//     var sort_results = function(party_results) {\n//         party_results[\"edges\"] = party_results[\"edges\"].sort(function(a, b) {\n//             return b.node.percOfVotes - a.node.percOfVotes;\n//         })\n//         return party_results;\n//     }\n//     if (regionType === \"national\") {\n//         edges = data[\"data\"][\"allProvincialBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var provinceName = node[\"location\"][\"name\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[provinceName] = partyName;\n//         })\n//     } else if (regionType === \"province\") {\n//         edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var muniCode = node[\"location\"][\"code\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[muniCode] = partyName;\n//         })\n//     } else {// \"municipality\"\n//         edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var iecId = node[\"location\"][\"iecId\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[iecId] = partyName;\n//         })\n//     }\n//     return locationToMainParty;\n// }\n\nfunction getTopPartyNameFromNode(node) {\n  if (node && node[\"topParty\"] && node[\"topParty\"][\"party\"] && node[\"topParty\"][\"party\"][\"name\"])\n      return node[\"topParty\"][\"party\"][\"name\"];\n  return \"\";\n}\n\nexport function parseMainPartyData(data, props) {\n  if (!data)  return null;\n  var locationToMainParty = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"topPartiesByProvince\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          locationToMainParty[provinceName] = getTopPartyNameFromNode(node);\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"topPartiesByMunicipality\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          locationToMainParty[muniCode] = getTopPartyNameFromNode(node);\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"topPartiesByVotingDistrict\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          locationToMainParty[iecId] = getTopPartyNameFromNode(node);\n      })\n  }\n  return locationToMainParty;\n}\n\nexport function parseSeatsData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"abbreviation\"],\n      iecId: node[\"party\"][\"iecId\"],\n      partyInfo: node[\"party\"],\n    }\n  })\n  \n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return results.slice(0, props.numParties);\n}\n\nexport function parseVotesPredictionData(data, props) {\n  // TODO actually implement a function that removes hypens and .s\n  var lineData = [{\n      name : \"AFRICAN NATIONAL CONGRESS\",\n      cleaned_name : \"anc\",\n      data : [\n        {'x': 3, 'y': 51.6},\n        {'x': 6, 'y': 59.3},\n        {'x': 12, 'y': 55.4},\n        {'x': 20, 'y': 56},\n        {'x': 27, 'y': 59.5},\n        {'x': 33, 'y': 59.8},\n        {'x': 39, 'y': 61.2},\n        {'x': 45, 'y': 61.8},\n        {'x': 51, 'y': 62.7},\n        {'x': 57, 'y': 63.1},\n        {'x': 63, 'y': 63.6},\n        {'x': 69, 'y': 62.7},\n        {'x': 69, 'y': 62.7},\n        {'x': 75, 'y': 62.3},\n        {'x': 81, 'y': 62.9},\n        {'x': 87, 'y': 63},\n        {'x': 93, 'y': 62.8},\n        {'x': 100, 'y': 62.8},\n      ]\n    },\n    {\n      name : \"DEMOCRATIC ALLIANCE\",\n      cleaned_name: \"da\",\n      data : [\n        {'x': 3, 'y': 31.6},\n        {'x': 6, 'y': 39.3},\n        {'x': 12, 'y': 35.4},\n        {'x': 20, 'y': 36},\n        {'x': 27, 'y': 39.6},\n        {'x': 33, 'y': 39.8},\n        {'x': 39, 'y': 31.2},\n        {'x': 45, 'y': 31.4},\n        {'x': 51, 'y': 22.7},\n        {'x': 57, 'y': 33.1},\n        {'x': 63, 'y': 23.6},\n        {'x': 69, 'y': 32.7},\n        {'x': 69, 'y': 32.7},\n        {'x': 75, 'y': 22.3},\n        {'x': 81, 'y': 32.9},\n        {'x': 87, 'y': 33},\n        {'x': 93, 'y': 22.8},\n        {'x': 100, 'y': 22.8},\n      ]\n    }\n  ];\n\n  return lineData;\n}\n\nexport function parseSeatsComparisonData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var eventDescriptions = props.eventDescriptions[\"national\"]\n  if (props.electionType === \"provincial\")\n    eventDescriptions = props.eventDescriptions[\"provincial\"]\n\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"event\"][\"description\"],\n      partyInfo: node[\"party\"]\n    }\n  }).filter(result => eventDescriptions.indexOf(result.name) != -1)\n  .filter(result => \n    props.partyIecId\n    ? (result.partyInfo[\"iecId\"] == props.partyIecId)\n    : (result.partyInfo[\"abbreviation\"] == props.partyAbbr)\n  )\n\n  var new_results = [];\n  for(var i = 0; i < eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == eventDescriptions[i]) {\n        var available = true;\n        new_results.push(results[j]);\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: props.eventDescriptions[i],\n        seats: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n      // name: nodeData[\"event\"][\"description\"],\n      // percOfVotes: 0,\n      // partyInfo: {\n      //   name: props.partyAbbr,\n      //   abbreviation: props.partyAbbr,\n      // }\n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return new_results;\n}\n\nexport function parseSeatsComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map((partyAbbr, partyIdx) => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    newProps.partyIecId = props.partyIecIds[partyIdx];\n    return {\n      partyAbbr,\n      data: parseSeatsComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseTurnoutData(data, props) {\n  if (!data)  return null;\n  var locationToTurnout = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[provinceName] = percVoterTurnout;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[muniCode] = percVoterTurnout;\n      })\n  } else {// \"municipality\" or \"municipality-vd\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[iecId] = percVoterTurnout;\n      })\n  }\n  return locationToTurnout;\n}\n\nexport function parseTurnoutDataForAllEvents(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var eventType = node[\"event\"][\"eventType\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n    return {\n      name: event,\n      eventType: eventType,\n      percVoterTurnout\n    }\n  }).filter(edge => edge.eventType.toLowerCase().indexOf(props.eventType) != -1)\n  .sort(function(edge1, edge2) {\n    var edge1Year = parseInt(/(19|20)\\d{2}/g.exec(edge1.name)[0]);\n    var edge2Year = parseInt(/(19|20)\\d{2}/g.exec(edge2.name)[0]);\n    return edge2Year - edge1Year;\n  })\n}\n\nexport function parseTurnoutDataForOneEvent(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n    return {\n      name: event,\n      percVoterTurnout\n    }\n  })\n}\n\nexport function parseSpoiltVotesData(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"spoilt data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Valid\",\n      percent: calcPercent(nodeData[\"totalValidVotes\"], nodeData[\"totalVotesCast\"])\n    }, {\n      name: \"Spoilt\",\n      percent: calcPercent(nodeData[\"spoiltVotes\"], nodeData[\"totalVotesCast\"])\n    }\n  ]\n}\n\nexport function getRegionName(state) {\n  function beautifiedMuniName(muniName) {\n    if (muniName.indexOf(\" - \") != -1) {\n        muniName = muniName.split(\" - \")[1];\n    }\n    if (muniName.indexOf(\"[\") != -1) {\n        muniName = muniName.split(\"[\")[0];\n    }\n    return muniName;\n  }\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  if (state.regionType == \"province\") {\n    return state.provinceName;\n  }\n  if (state.regionType == \"municipality\") {\n    return beautifiedMuniName(state.muniName);\n  }\n  if (state.regionType == \"municipality-vd\") {\n    return beautifiedMuniName(state.muniName) + \"-\" + state.iecId;\n  }\n}\n\nexport function getRegionName2(state) {\n  if (state.regionType == \"national\") {\n    var event = state.eventDescription.toLocaleLowerCase()\n\n    if (event.indexOf(\"national election\") >= 0) {\n      return \"National Assembly\"\n    }\n    else if (event.indexOf(\"provincial election\") >= 0) {\n      return \"Results for Provincial Legislatures\"\n    }\n    else\n      return \"\"\n  }\n  else\n      return getRegionName(state);\n}\n\nexport function getRegionName3(state) {\n  if (state.regionType == \"national\")\n    return \"NATIONAL\";\n  return getRegionName(state);\n}\n\n\n\nexport function getNationOrProvinceName(state) {\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  return state.provinceName;\n}\n\nexport function getNationOrProvinceName2(state) {\n  if (state.regionType == \"national\") {\n    return \"National Assembly\";\n  }\n  return state.provinceName;\n}\n\nexport function createTooltip(className) {\n  var tooltipClassName = className(config.CSS_PREFIX + \"tooltip\")\n  if (document.getElementsByClassName(tooltipClassName)[0]) {\n    return d3.select(`.${tooltipClassName}`);\n  } else {\n    return d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", tooltipClassName)\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n}\n\n\n\nexport function fixMapLabelIntersect() {\n  var labelElements = document.getElementsByClassName(\"place-label\");\n  var regions = {};\n  var overlapCnt = {};\n  var i;\n\n  for (i = 0; i < labelElements.length; i ++) {\n      regions[i] = labelElements[i].getBoundingClientRect();\n  }\n\n  for (i = 0; i < labelElements.length; i ++) {\n      for (var j = 0; j < i; j ++) {\n          var rect1 = regions[i];\n          var rect2 = regions[j];\n          var overlap = !(rect1.right < rect2.left || \n              rect1.left > rect2.right || \n              rect1.bottom < rect2.top || \n              rect1.top > rect2.bottom);\n          if (overlap) {\n              overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n          }\n      }\n      if (overlapCnt[i] > 2) {\n          labelElements[i].setAttribute(\"opacity\", 0)\n      } else if (overlapCnt[i] > 0){\n          labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n      } else {\n\n      }\n  }\n}\n\nexport function triggerCustomEvent(eventName, eventParam) {\n  var event = new CustomEvent(eventName, { detail: eventParam });\n  document.dispatchEvent(event);\n}\n\nexport function formatPartyName(name) {\n  return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n}\n\nexport function getSubRegionName(properties, state) {\n  if (state.regionType === \"national\") {\n      return properties.SPROVINCE;\n  } else if (state.regionType === \"province\") {\n      return properties.smunicipal && properties.smunicipal.split(\" - \")[1].split(\"[\")[0]; \n  } else {//municipality\n    return getMunicipalityiecId(properties);\n    // if (properties.Municipali) {\n    //   return properties.Municipali.split(\" - \")[1].split(\"[\")[0];\n    // }\n    // return properties.SMUNICIPAL && properties.SMUNICIPAL.split(\" - \")[1].split(\"[\")[0]; \n  }\n}\n\nexport function getMunicipalityCode(properties) {\n  return properties.code || (properties.smunicipal && properties.smunicipal.split(\" - \")[0].replace(/\\s/g, \"\"));\n}\n\nexport function getMunicipalityiecId(properties) {\n  return properties.VDNumber || properties.PKLVDNUMBE;\n}\n\nexport function getRegionFileName(state) {\n  var nationalMapFile = \"province_lo-res.geojson\";\n  function getProvinceFileName(provinceName) {\n      var provinceNameToFileMap = {\n          \"Limpopo\": \"lim_lo-res.geojson\",\n          \"Mpumalanga\": \"mp_lo-res.geojson\",\n          \"Gauteng\": \"gt_lo-res.geojson\",\n          \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n          \"North West\": \"nw_lo-res.geojson\",\n          \"Free State\": \"fs_lo-res.geojson\",\n          \"Eastern Cape\": \"ec_lo-res.geojson\",\n          \"Northern Cape\": \"nc_lo-res.geojson\",\n          \"Western Cape\": \"wc_lo-res.geojson\",\n      }\n      return provinceNameToFileMap[provinceName];\n  }\n  switch(state.regionType) {\n      case \"national\":\n          return nationalMapFile;\n      case \"province\":\n          return getProvinceFileName(state.provinceName);\n      case \"municipality\":\n          return state.muniCode + \".topojson\";//\".geojson\";\n      case \"municipality-vd\":\n          return \"vd-data/\" + state.muniCode + \"-\" + state.iecId + \".topojson\"; //\".geojson\";\n      default:\n          return null;\n  }\n}\n\nexport function loadScript(id, scriptURL, callback) {\n  if (document.getElementById(id))\n    return;\n  var script = document.createElement('script');\n  script.onload = function () {\n    if(callback) {\n      callback();\n    }\n  };\n  script.id = id;\n  script.src = scriptURL;\n\n  document.head.appendChild(script);\n}\n\nexport function loadCanvg() {\n  loadScript(\"canvgScript\", \"https://cdn.jsdelivr.net/npm/canvg/dist/browser/canvg.min.js\", function() {\n    console.log(\"canvgScript load finished\");\n  });\n}\n\nexport function loadJSZip() {\n  loadScript(\"jsZipScript\", \"https://cdnjs.cloudflare.com/ajax/libs/jszip/3.2.0/jszip.min.js\", function() {\n    console.log(\"loadJSZip load finished\");\n  });\n}\n\nexport function loadScriptsForEmbedMode() {\n  loadCanvg();\n  loadJSZip();\n}\n\n\nexport function handleRegionChange(event) {\n  var newState = JSON.parse(JSON.stringify(event.detail));\n  delete newState.componentID;\n  this.setState(newState)\n}\n\nexport function fetchDataFromOBJ(state, props) {\n  Object.keys(state).forEach(key => {\n    if (props[key]) {\n      state[key] = props[key];\n    }\n  })\n}\n\nexport function formatClassNameFromString(str) {\n  return \"formedClass_\" + str.replace(/[^a-zA-Z0-9]+/g, '');\n}\n\nexport function onPartyAbbrsChange(e) {\n    var options = e.target.options;\n    var values = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        values.push(options[i].value);\n      }\n    }\n    values = values.slice(0, 4);\n    this.setState({\n        partyAbbrs: values.map(value => value.split(\"\\x22\")[0]),\n        partyIecIds: values.map(value => value.split(\"\\x22\")[1]),\n    })\n}\n\nexport function nationalEventSelected(state) {\n  for (var i = 0; i < state.electionEvents.length; i ++) {\n    if (state.electionEvents[i].description == state.eventDescription) {\n      if (state.electionEvents[i].eventType.description.toLowerCase().indexOf(\"national\") != -1) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function createSvg(container, width, height) {\n  container.selectAll(\"svg\").remove();\n  var svg = container.append(\"svg\")\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", \"0 0 \" + (width) + \" \" + (height))\n      .classed(\"svg-content\", true);\n\n  return svg;\n}\n\nexport function createErrorText(container, xOffset, yOffset) {\n  if (xOffset === undefined) xOffset = 0;\n  if (yOffset === undefined) yOffset = 0;\n\n  var errorText = container.append(\"g\")\n    .attr(\"transform\", \"translate(\"+ xOffset + \",\" + yOffset + \")\")\n    .append(\"text\")\n    .attr(\"text-anchor\", \"middle\");\n\n  return errorText;\n}\n\nexport function PartyColours(partyColours) {\n  var partyColourByName = {};\n\n  if (partyColours && partyColours[\"data\"][\"allParties\"][\"edges\"]) {\n      partyColours[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n        partyColourByName[edge.node.name] = edge.node.colour;\n      })\n  }\n\n  // TODO should used cleaned name\n  function getFillColourFromPartyName(partyName, i) {\n    // console.log(partyColourByName[partyName])\n    // console.log(partyColourByName)\n    return partyColourByName[partyName];\n    //return partyColourByName[partyName.split(\"/\")[0]] || predefColours[i%predefColours.length];\n  }\n\n  return getFillColourFromPartyName;\n}\n\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, createErrorText} from \"../../utils\";\nimport { type } from \"os\";\nimport config from \"../../config\";\nimport {\n  formatPartyName\n} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n\n\n  if (!options) {\n    options = {};\n  } \n  if (!options.chartType) {\n    options.chartType = \"Race For Votes\";\n  }\n  if (!options.yAxisLabel) {\n    options.yAxisLabel = \"PERCENTAGE VOTES\";\n  }\n  if (!options.yValue) {\n    options.yValue = function(d) {\n      return d.percOfVotes;\n    }\n  }\n  if (!options.yValueFormat) {\n    options.yValueFormat = function(value) {\n      return value + '%';\n    }\n  }\n\n  var offset = {\n    width: 70,\n    height: 20\n  }\n\n  width = 700;\n  height = 200;\n\n  var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n  var svg = createSvg(container, width + offset.width, height + offset.height + (options.showLegend ? 50 : 0))\n  var tooltipDiv = createTooltip(className);\n\n  var x = d3.scaleBand()\n    .rangeRound([offset.width, width])\n\n  var y = d3.scaleLinear()\n    .rangeRound([height, offset.height]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+offset.height/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(config.CSS_PREFIX + \"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(options.yAxisLabel)\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + offset.width +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n\n    var errorText = createErrorText(svg, width / 2, height / 2);\n\n    this.draw = function(chartData, colorsData) {\n\n      if (!chartData) {\n        errorText.text(\"chart data is not available\");\n        barSvg.selectAll('rect').remove();\n        barTextSvg.selectAll('text').remove();\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n      var partyAbbrByName = {};\n\n      if (options.noXaxisByParty) {\n\n      } else {\n        if (colorsData && colorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          colorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n          })\n        }\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n        if (options.noXaxisByParty) {\n          if (typeof colorsData == \"object\")\n            return colorsData[d.name];\n          if (typeof colorsData == \"function\")\n            return colorsData(d, i);\n          return colorsData;\n        } else {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n        }\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        var maxValue = d3.max(chartData, function(d) { return parseFloat(options.yValue(d)); });\n        if (options.customizeDynamicMaxValue) {\n          minMaxY[1] = options.customizeDynamicMaxValue(maxValue);\n        } else {\n          minMaxY[1] = maxValue + 1;\n        }\n      }\n      y.domain(minMaxY);\n  \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => getFillColor(d, i))\n          .on(\"mousemove\", function(d, i) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              tooltipDiv.html(getTooltipText(d, i))\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .attr(\"fill\", (d, i) => getFillColor(d, i))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d)));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(options.yValue(d)));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .text(function(d) {\n            return options.yValueFormat(options.yValue(d));\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d))) - 5;\n          })\n        \n        if (options.showLegend) {\n          var parties = [];\n          var partyIecIds = [];\n          chartData.forEach(({partyInfo}) => {\n            var party = partyInfo.name;\n            if (partyIecIds.indexOf(partyInfo.iecId) === -1 && partyInfo.iecId) {\n                parties.push(party);\n                partyIecIds.push(partyInfo.iecId);\n            }\n          })\n          console.log(\"parties\", parties, chartData);\n          \n          function getLegendXY(i) {\n            \n            var xydata = [offset.width + (i%5)*100, height + 30 + parseInt(i/5) * 40];\n            if (parties.length < 6) {\n              xydata[0] += 100 * ( 6 - parties.length) / 2;\n            }\n            return xydata;\n          }\n          svg.selectAll(`.${className(\"legend\")}`).remove();\n          var legends = svg.selectAll(`.${className(\"legend\")}`)\n              .data(parties)\n              .enter()\n              .append('g')\n              .attr(\"class\", className(\"legend\"))\n              .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n          legends\n              .append(\"rect\")\n              .attr('width', 10)\n              .attr('height', 10)\n              .attr('x', 0)\n              .attr('y', 0)\n              .attr(\"fill\", (party, i) => {\n                  return getFillColorFromPartyName(party);\n              })\n          legends.append('text')\n              .attr('x', 30)\n              .attr('y', 10)\n              .style('font-size', '12px')\n              .text(party => partyAbbrByName[party])\n        }\n        \n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","const REGION_CHANGE = \"region-change\";\nconst CHART_PREVIEW = \"chart-preview\";\nconst SEATS_ELECTEDS_EVENT = \"seats-electeds-event\";\nconst MAP_PREVIEW = \"map-preview\";\nconst QUICK_RESULTS_PREVIEW = \"quick-results-preview\"\nconst EXPORT_PNG = \"export-png\";\nconst EXPORT_SUPERWIDGET_PNG = \"export-superwidget-png\";\n\nexport default {\n    REGION_CHANGE,\n    CHART_PREVIEW,\n    SEATS_ELECTEDS_EVENT,\n    MAP_PREVIEW,\n    QUICK_RESULTS_PREVIEW,\n    EXPORT_PNG,\n    EXPORT_SUPERWIDGET_PNG,\n};","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\n// var API_URI = \"https://elections2019.xyz/graphql\";\nvar API_URI = \"https://eds.elections.sabc.co.za/graphql\";\n\n\nconst client = new ApolloClient({\n    link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n    cache: new InMemoryCache()\n  })\n\nexport {\n    API_URI,\n    client\n}","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getSeatsDataForComparison(options) {\n  if (options.regionType === \"national\") {\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            eventType:\"National Election\" \n            orderBy:[\"-seats\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                  iecId\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  } else { //  if (options.regionType === \"province\")\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            province:\"${options.provinceName}\", \n            orderBy:[\"-seats\"]\n          ) {\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                  iecId\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  }\n}\n\n\nexport function getSeatsData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(\n              event:\"${eventDescription}\", \n              orderBy:[\"-seats\"]\n            ) {\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                    iecId\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    } else { //  if (options.regionType === \"province\")\n      eventDescription = eventDescription.replace(\"National\", \"Provincial\");\n      eventDescription = eventDescription.replace(\"NATIONAL\", \"PROVINCIAL\");\n      eventDescription = eventDescription.replace(\"national\", \"provincial\");\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(\n              province:\"${options.provinceName}\", \n              event:\"${eventDescription}\", \n              orderBy:[\"-seats\"]\n            ) {\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                    iecId\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n\nexport function getVotesPredictionData(options) {\n    return [[1, 3], [5,7], [7, 9]]\n}\n\nexport function getVotesDataForComparison(options) {\n  if (options.regionType === \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots{\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType === \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          province:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType === \"municipality\") {\n    var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          province:\"${options.provinceName}\", \n          municipalCode: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                      iecId\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType === \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n          iecId:\"${options.iecId}\", \n        ) {\n          edges{\n            node{\n              event {\n                description\n              }\n              location {\n                iecId\n              }\n              partyResults {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getVotesDataForAllEvents(options) {\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                location {\n                  iecId\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n\nexport function getVotesDataM(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event:\"${eventDescription}\",\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                location {\n                  iecId\n                  ward {\n                    municipality {\n                      code\n                      province {\n                        name\n                      }\n                    }\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n\n  export function getMainParties(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByProvince(event:\"${eventDescription}\") {\n            edges {\n              node {\n                location{\n                  id\n                  name\n                }\n                totalVotesCast\n                topParty{\n                  validVotes\n                  percOfVotes\n                  party {\n                      id\n                      name\n                      abbreviation\n                      iecId\n                  }\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByMunicipality(\n            event:\"${eventDescription}\", \n            province:\"${options.provinceName}\") {\n            \n            edges {\n              node {\n                location{\n                    code\n                    name\n                    longName\n                }\n                totalVotesCast\n                topParty{\n                  party {               \n                    name\n                    abbreviation\n                    iecId\n                  }\n                  validVotes\n                  percOfVotes\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { //if (options.regionType === \"municipality\") {\n        return client.query({\n          query: gql`\n          {\n            topPartiesByVotingDistrict(\n              event:\"${eventDescription}\", \n              province:\"${options.provinceName}\",\n              municipalCode: \"${options.muniCode}\"\n            ) {\n              \n              edges {\n                node {\n                  location{\n                    iecId\n                  }\n                  topParty{\n                    party{\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n\n\n  export function getTurnoutData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                percVoterTurnout\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                percVoterTurnout\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { // municipality or municipality-vd\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots( \n              event:\"${eventDescription}\",\n              municipalCode:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n  export function getTurnoutDataForOneEvent(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ) {\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\"\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n              event:\"${eventDescription}\"\n              province:\"${options.provinceName}\", \n              municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType === \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              event:\"${eventDescription}\"\n              iecId:\"${options.iecId}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n\n  export function getTurnoutDataForAllEvents(options) {\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n              province:\"${options.provinceName}\", \n              municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType === \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              iecId:\"${options.iecId}\" \n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getSpoiltData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                    id\n                    name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                event:\"${eventDescription}\",\n                province:\"${options.provinceName}\", \n                municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    code\n                    name\n                    longName\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType === \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              event:\"${eventDescription}\",\n              iecId:\"${options.iecId}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n  ","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getProgressVotesCount(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event:\"${eventDescription}\",\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport {getSeatsData, getSeatsDataForComparison} from \"./race-for-seats\"\nexport {getVotesPredictionData, getVotesDataM, getVotesDataForAllEvents, getVotesDataForComparison, getMainParties} from \"./race-for-votes\"\nexport {getTurnoutData, getTurnoutDataForOneEvent, getTurnoutDataForAllEvents} from \"./turnout\"\nexport {getSpoiltData} from \"./spoilt\"\nexport {getProgressVotesCount} from \"./prog-votescount\"\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n        eventType {\n          description\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            abbreviation\n            colour\n            iecId\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getProvincesData() {\n  var provincesData = [\n      {\n          \"name\": \"Limpopo\",\n          \"abbreviation\": \"LIM\",\n          \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n      },\n      {\n          \"name\": \"Mpumalanga\",\n          \"abbreviation\": \"MP\",\n          \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n      },\n      {\n          \"name\": \"Gauteng\",\n          \"abbreviation\": \"GT\",\n          \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n      },\n      {\n          \"name\": \"KwaZulu-Natal\",\n          \"abbreviation\": \"KZN\",\n          \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n      },\n      {\n          \"name\": \"North West\",\n          \"abbreviation\": \"NW\",\n          \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n      },\n      {\n          \"name\": \"Free State\",\n          \"abbreviation\": \"FS\",\n          \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n      },\n      {\n          \"name\": \"Eastern Cape\",\n          \"abbreviation\": \"EC\",\n          \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n      },\n      {\n          \"name\": \"Northern Cape\",\n          \"abbreviation\": \"NC\",\n          \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHâI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n      },\n      {\n          \"name\": \"Western Cape\",\n          \"abbreviation\": \"WC\",\n          \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n      }\n  ]\n  provincesData.sort(function(a, b) {\n    return ('' + a.name).localeCompare(b.name);\n  })\n  return provincesData;\n}\n\nexport function getMetrosData() {\n  var metrosData = [\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},\n    {\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},\n    {\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},\n    {\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"},\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}\n  ]\n  return metrosData;\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataM,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange,\n  triggerCustomEvent,\n  fetchLocationTrackFromVDdata\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  dynamicYAxisFromValues: true,\n  customizeDynamicMaxValue: (maxVal) => Math.min(100, maxVal * 1.5),\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        comp: \"votes-default\",\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 1\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID !== this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n        console.log(d3);\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID !== -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataM(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesData(data, props);\n\n        if (props.comp === \"votes-myvd\") {\n          var newState;\n          if (chartData) {\n            newState = fetchLocationTrackFromVDdata(data);\n          } else {\n            newState = {iecId: \"\"}\n          }\n          var needUpdate = false;\n          Object.keys(newState).forEach(key => {\n            if (props[key] !== newState[key]) {\n              needUpdate = true;\n            }\n          })\n          if (needUpdate) {\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n          }\n        }\n       \n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName2,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 6\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-barchart(${getNationOrProvinceName2(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n        \n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName2(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSpoiltData\n} from \"../../api\";\nimport {\n  parseSpoiltVotesData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Spoilt vs Valid Votes',\n  yAxisLabel: 'PERCENTAGE VOTES',\n  noXaxisByParty: true,\n  yValue: d => d.percent,\n  yValueFormat: value => value + '%'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 9\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID !== this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `spoilt-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID !== -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var spoiltDataLoader = getSpoiltData(props);\n      var dataLoaders = [spoiltDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var spoiltData = values[0];\n        self.drawGraph(container, props, spoiltData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseSpoiltVotesData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Valid\": \"rgb(0,255,0)\",\n          \"Spoilt\": \"rgb(255,0,0)\"\n        });\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors,\n} from \"../../api\";\nimport {\n  parseMainPartyData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName,\n  fetchDataFromOBJ\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            disableNavigation: false,\n            stylesheetFor: \"web\",\n            componentID: 3\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        var self = this;\n        this.draw(this.getContainer(), this.state);\n        this.refreshIntervalID = setInterval(() => {\n          self.draw(self.getContainer(), self.state)\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      this.getContainer().selectAll(\"svg\").remove();\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    // componentWillReceiveProps(newProps) {\n    //     var newState = JSON.parse(JSON.stringify(this.state));\n    //     fetchDataFromOBJ(newState, newProps);\n    //     this.setState(newState);\n    // }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state))\n            this.draw(this.getContainer(), this.state)\n    }\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n\n            window.canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID !== this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        if (!window.canvg) {\n            return console.error(\"canvg module not available\");\n        }\n        window.canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n\n        var canvas = rendercanvas, filename = `race-for-votes-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        if (!this.state.disableNavigation) {\n            var newState = event.detail;\n            this.setState(newState)\n        }\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            stylesheetFor,\n            componentID\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n                {\n                    componentID !== -1000 && <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n                }\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        // var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n        var dataLoaders = [mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        geoJsonLoader.then(function(value) {\n            var geoJsonData = value;\n            Promise.all(dataLoaders).then(function(values){ \n                var locationToMainParty = parseMainPartyData(values[0], props);\n                partyColorsData = partyColorsData || values[1];  \n    \n                var partyColorByName = {};\n                var partyAbbrByName = {};\n                if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n                  partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                    partyColorByName[edge.node.name] = edge.node.colour;\n                    partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n                  })\n                }            \n    \n                function getFillColorFromPartyName(partyName) {\n                  if (!partyName)\n                    return regionColor;\n                  return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n                }\n    \n                function getMainPartyName(d, i) {\n                    var partyName;\n                    var regionType = self.state.regionType;\n                    if (regionType === \"national\") {\n                        var provinceName = d.properties.SPROVINCE;\n                        partyName = locationToMainParty[provinceName];\n                    } else if (regionType === \"province\") {\n                        var muniCode = getMunicipalityCode(d.properties);\n                        partyName = locationToMainParty[muniCode];\n                    } else if (regionType === \"municipality\"){// \"municipality\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        partyName = locationToMainParty[iecId];\n                    } else {// \"municipality-vd\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        partyName = locationToMainParty[iecId];\n                    }\n                    return partyName;\n                }\n                function getMainPartyColorFromRegion(d, i) {\n                    var partyName = getMainPartyName(d, i);\n                    var partyColor = getFillColorFromPartyName(partyName);\n                    return partyColor;\n                }\n    \n                var jsonDataFeatures;\n                if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                    var regionType = self.state.regionType\n                    if (regionType == \"municipality\") {\n                        if (!geoJsonData.objects[self.state.muniCode])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                    } else { // \"municipality-vd\"\n                        if (!geoJsonData.objects[self.state.iecId])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                    }\n                }\n    \n                jsonDataFeatures = geoJsonData.features;\n    \n                var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n                var path = d3.geoPath().projection(projection);\n    \n                // fill region with regionColor\n                svg.selectAll(`.${className(\"region\")}`)\n                    .data(jsonDataFeatures)\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"class\", className(\"region\"))\n                    .attr(\"stroke\", regionBorderColor)\n                    .attr(\"fill\", getMainPartyColorFromRegion)\n                    .attr(\"id\", function(d, i) {\n                        return `region-${i}`;\n                    })\n                    .attr(\"d\", path);\n                \n                var parties = [];\n                var availableCnt = [];\n                jsonDataFeatures.forEach((d, i) => {\n                    var party = getMainPartyName(d, i);\n                    if (parties.indexOf(party) == -1) {\n                        parties.push(party);\n                        availableCnt.push(1);\n                    } else {\n                        availableCnt[parties.indexOf(party)] ++;\n                    }\n                })\n    \n                parties.sort(function(a, b){\n                    return availableCnt[parties.indexOf(b)] - availableCnt[parties.indexOf(a)];\n                })\n    \n                function getLegendXY(i) {\n                    return [(i%5)*150, h + 10 + parseInt(i/5) * 40];\n                }\n                var legends = svg.selectAll(`.${className(\"legend\")}`)\n                    .data(parties)\n                    .enter()\n                    .append('g')\n                    .attr(\"class\", className(\"legend\"))\n                    .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n                legends\n                    .append(\"rect\")\n                    .attr('width', 20)\n                    .attr('height', 20)\n                    .attr('x', 0)\n                    .attr('y', 0)\n                    .attr(\"fill\", (party, i) => {\n                        return getFillColorFromPartyName(party);\n                    })\n                legends.append('text')\n                    .attr('x', 30)\n                    .attr('y', 16)\n                    .text(party => partyAbbrByName[party])\n                \n                if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                    svg.selectAll(\".place-label\")\n                        .data(jsonDataFeatures)\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"place-label\")\n                        .attr(\"font-size\", \"12px\")\n                        .attr(\"transform\", function(d) { \n                            var center, projectionCenter;\n                            if (d.geometry.type === \"Polygon\") {\n                                center = polylabel(d.geometry.coordinates);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 12;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            } else { //\"MultiPolygon\"\n                                center = polylabel(d.geometry.coordinates[0]);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 5;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            }\n                        })\n                        .attr(\"dy\", \".35em\")\n                        .style(\"text-anchor\", \"middle\")\n                        .text(d => getSubRegionName(d.properties, self.state))\n                }\n    \n                if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                    fixMapLabelIntersect();\n                }\n    \n                //hidden area for catching events\n                svg.selectAll(\".eventLayer\")\n                    .data(jsonDataFeatures)\n                .enter()\n                    .append(\"path\")\n                    .attr(\"d\", path)\n                    .attr(\"class\", \"eventLayer\")\n                    .attr(\"id\", function(d, i) {\n                        return `eventLayer-${i}`;\n                    })\n                    .attr(\"fill\", \"transparent\")\n                    .on(\"mouseover\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 3)\n                            .style(\"fill-opacity\", 0.8);\n                    })\n                    .on(\"mousemove\", function(d, i) {\t\n                        // if (self.state.regionType === \"municipality\") return;\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 1);\n    \n                        var undefinedText;\n                        if (self.state.regionType === \"province\") {\n                            undefinedText = \"New municipality - no previous results available\"\n                        } else {\n                            undefinedText = \"New voting district - no previous results available\"\n                        }\n                        var mainPartyName = getMainPartyName(d, i);\n                        var subRegionName = getSubRegionName(d.properties, self.state);\n                        var tooltipText = (typeof mainPartyName !== \"undefined\")? \n                                    (subRegionName + \" : \" + mainPartyName) : undefinedText;\n    \n                        tooltipDiv.html(tooltipText)\t\n                            .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                    })\n                    .on(\"mouseout\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 1)\n                            .style(\"fill-opacity\", 1);\n                        \n                        if (self.state.regionType === \"municipality\") return;\n    \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                    })\n                    .on(\"click\", function(d, i) {                  \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                        \n                        var regionType = self.state.regionType;\n                        var newState, event;\n                        if (regionType === \"national\") {\n                            newState = {\n                                regionType: \"province\",\n                                provinceName: d.properties.SPROVINCE\n                            }\n                        } else if (regionType === \"province\") {\n                            newState = {\n                                regionType: \"municipality\", \n                                provinceName: self.state.provinceName,\n                                muniName: d.properties.smunicipal,\n                                muniCode: getMunicipalityCode(d.properties),\n                            }\n                        } else if (regionType === \"municipality\"){ // \"municipality\"\n                            var newState = {\n                                regionType: \"municipality-vd\", \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: getMunicipalityiecId(d.properties),\n                            }\n                        } else { // \"municipality-vd\"\n                            return;\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        if (self.state.disableNavigation) {\n                            return;\n                        }\n                        self.setState(newState);\n                    })\n                if (!self.state.disableNavigation) {\n                    var fo = svg.append(\"foreignObject\")\n                        .attr(\"x\", 0)\n                        .attr(\"y\", 10)\n                        .attr(\"width\", 500)\n                        .attr(\"height\", 30)\n                        .attr(\"class\", \"map-controls\")\n                    \n                    function setRegionType(regionType) {\n                        var newState;\n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: self.state.iecId,\n                        }\n                        newState.regionType = regionType;\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    }\n    \n                    function appendSpan(foDiv, regionName, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"span\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"default\")\n                            .html(regionName);\n                    }\n    \n                    function appendLink(foDiv, regionName, regionType, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"a\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"pointer\")\n                            .html(regionName)\n                            .on(\"click\", function() {\n                                setRegionType(regionType);\n                            });\n                    }\n                    \n                    var foDiv = fo.append(\"xhtml:div\");\n                    var regionType = self.state.regionType;\n                    if (regionType == \"national\") {\n                        appendSpan(foDiv, \"South Africa\", false);\n                    } else {\n                        appendLink(foDiv, \"South Africa\", \"national\", false);\n                        if (regionType == \"province\") {\n                            appendSpan(foDiv, self.state.provinceName, true);\n                        } else {\n                            appendLink(foDiv, self.state.provinceName, \"province\", true);\n                            if (regionType == \"municipality\") {\n                                appendSpan(foDiv, self.state.muniCode, true);\n                            } else {\n                                appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                                appendSpan(foDiv, self.state.iecId, true);\n                            }\n                        }\n                    }\n                }\n                self.getLoadingSpinner()\n                    .style(\"display\", \"none\");\n            }).catch(error => {\n                console.error(error);\n                console.log(`failed to get data from server`);\n            })\n        }).catch(error => {\n            console.error(error);\n\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n            \n            if (self.state.disableNavigation) {\n                return;\n            }\n\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniCode: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                if (regionType == \"national\" || regionType == \"province\") {\n                  console.log(`Can't get map data for $currentRegionName`)\n                } else {\n                    alert(`${currentRegionName} has been disestablished`); \n                }\n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getTurnoutData,\n    getProvincesData\n} from \"../../api\";\nimport {\n  parseTurnoutData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName,\n  fetchDataFromOBJ\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar provincesData = getProvincesData();\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 11\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        var self = this;\n        this.draw(this.getContainer(), this.state);\n        this.refreshIntervalID = setInterval(() => {\n          self.draw(self.getContainer(), self.state)\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n        this.getContainer().selectAll(\"svg\").remove();\n        document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state))\n            this.draw(this.getContainer(), this.state)\n    }\n\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n\n            if (!window.canvg) {\n                return reject(\"canvg module not available\");\n            }\n\n            window.canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        if (!window.canvg) {\n            return console.error(\"canvg module not available\");\n        }\n\n        window.canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n        var canvas = rendercanvas, filename = `turnout-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor,\n            componentID\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n                {\n                    componentID != -1000 && <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n                }\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n \n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var turnoutDataLoader = getTurnoutData(props);\n        // var dataLoaders = [geoJsonLoader, turnoutDataLoader];\n        var dataLoaders = [turnoutDataLoader];\n\n        geoJsonLoader.then(function(value) {\n            var geoJsonData = value;\n            Promise.all(dataLoaders).then(function(values){ \n                var locationToTurnout = parseTurnoutData(values[0], props);      \n    \n                function getMergedColorWithWhite(percent) {\n                    var originRGB = {\n                        R: 0,\n                        G: 255,\n                        B: 0\n                    }\n                    var mixedR = (originRGB.R * (percent) + 255 * (100-percent))/100;\n                    var mixedG = (originRGB.G * (percent) + 255 * (100-percent))/100;\n                    var mixedB = (originRGB.B * (percent) + 255 * (100-percent))/100;\n                    return `rgb(${mixedR},${mixedG},${mixedB})`;\n                }\n                function getFillColorFromTurnout(turnout) {\n                  if (turnout > 65)\n                    return \"#39711D\";//getMergedColorWithWhite(100);//\"rgb(0,165,138)\";\n                  if (turnout >= 60)\n                    return \"#458923\";//getMergedColorWithWhite(90);//\"rgb(4,68,95)\";\n                  if (turnout >= 55)\n                    return \"#53B025\";//getMergedColorWithWhite(80);//\"rgb(4,98,138)\";\n                  if (turnout >= 50)\n                    return \"#4BDC02\";//getMergedColorWithWhite(70);//\"rgb(4,117,164)\";\n                  if (turnout >= 45)\n                    return \"#7CE547\";//getMergedColorWithWhite(60);//\"rgb(4,136,191)\";\n                  if (turnout >= 40)\n                    return \"#93E968\";//getMergedColorWithWhite(50);//\"rgb(0,154,216)\";\n                  if (turnout >= 35)\n                    return \"#A6ED83\";//getMergedColorWithWhite(40);//\"rgb(77,174,224)\";\n                  if (turnout >= 30)\n                    return \"#C5F3AF\";//getMergedColorWithWhite(30);//\"rgb(124,194,231)\";\n                  return \"#D3F6C3\";//regionColor;\n                }\n    \n                function getTurnout(d, i) {\n                    var turnout;\n                    var regionType = self.state.regionType;\n                    if (regionType === \"national\") {\n                        var provinceName = d.properties.SPROVINCE;\n                        turnout = locationToTurnout[provinceName];\n                    } else if (regionType === \"province\") {\n                        var muniCode = getMunicipalityCode(d.properties);\n                        turnout = locationToTurnout[muniCode];\n                    } else if (regionType === \"municipality\"){// \"municipality\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        turnout = locationToTurnout[iecId];\n                    } else {// \"municipality-vd\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        turnout = locationToTurnout[iecId];\n                    }\n                    return turnout;\n                }\n                function getFillColorFromRegion(d, i) {\n                    var turnout = getTurnout(d, i);\n                    var fillColor = getFillColorFromTurnout(turnout);\n                    return fillColor;\n                }\n                var jsonDataFeatures;\n                if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                    var regionType = self.state.regionType\n                    if (regionType == \"municipality\") {\n                        if (!geoJsonData.objects[self.state.muniCode])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                    } else { // \"municipality-vd\"\n                        if (!geoJsonData.objects[self.state.iecId])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                    }\n                }\n    \n                jsonDataFeatures = geoJsonData.features;\n    \n                var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n                var path = d3.geoPath().projection(projection);\n    \n                // fill region with regionColor\n                svg.selectAll(`.${className(\"region\")}`)\n                    .data(jsonDataFeatures)\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"class\", className(\"region\"))\n                    .attr(\"stroke\", regionBorderColor)\n                    .attr(\"fill\", getFillColorFromRegion)\n                    .attr(\"id\", function(d, i) {\n                        return `region-${i}`;\n                    })\n                    .attr(\"d\", path);\n                \n                var turnoutColors = [{\n                    text: \"More than 65%\",\n                    turnout: 66\n                },{\n                    text: \"60% - 65%\",\n                    turnout: 60\n                },{\n                    text: \"55% - 60%\",\n                    turnout: 55\n                },{\n                    text: \"50% - 55%\",\n                    turnout: 50\n                },{\n                    text: \"45% - 50%\",\n                    turnout: 45\n                },{\n                    text: \"40% - 45%\",\n                    turnout: 40\n                },{\n                    text: \"35% - 40%\",\n                    turnout: 35\n                },{\n                    text: \"30% - 35%\",\n                    turnout: 30\n                },{\n                    text: \"Less than 30%\",\n                    turnout: 15\n                }];\n                \n                function getLegendXY(i) {\n                    return [(i%5)*170, h + 10 + parseInt(i/5) * 40];\n                }\n                var legends = svg.selectAll(`.${className(\"legend\")}`)\n                    .data(turnoutColors)\n                    .enter()\n                    .append('g')\n                    .attr(\"class\", className(\"legend\"))\n                    .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n                legends\n                    .append(\"rect\")\n                    .attr('width', 20)\n                    .attr('height', 20)\n                    .attr('x', 0)\n                    .attr('y', 0)\n                    .attr(\"fill\", (it) => {\n                        return getFillColorFromTurnout(it.turnout);\n                    })\n                legends.append('text')\n                    .attr('x', 30)\n                    .attr('y', 16)\n                    .text(it => it.text)\n                \n                if (self.state.regionType !== \"municipality\") {\n                    svg.selectAll(\".place-label\")\n                        .data(jsonDataFeatures)\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"place-label\")\n                        .attr(\"font-size\", \"12px\")\n                        .attr(\"transform\", function(d) { \n                            var center, projectionCenter;\n                            if (d.geometry.type === \"Polygon\") {\n                                center = polylabel(d.geometry.coordinates);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 12;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            } else { //\"MultiPolygon\"\n                                center = polylabel(d.geometry.coordinates[0]);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 5;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            }\n                        })\n                        .attr(\"dy\", \".35em\")\n                        .style(\"text-anchor\", \"middle\")\n                        .text(d => getSubRegionName(d.properties, self.state))\n                }\n    \n                if (self.state.regionType !== \"municipality\") {\n                    fixMapLabelIntersect();\n                }\n    \n                //hidden area for catching events\n                svg.selectAll(\".eventLayer\")\n                    .data(jsonDataFeatures)\n                .enter()\n                    .append(\"path\")\n                    .attr(\"d\", path)\n                    .attr(\"class\", \"eventLayer\")\n                    .attr(\"id\", function(d, i) {\n                        return `eventLayer-${i}`;\n                    })\n                    .attr(\"fill\", \"transparent\")\n                    .on(\"mouseover\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 3)\n                            .style(\"fill-opacity\", 0.8);\n                    })\n                    .on(\"mousemove\", function(d, i) {\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 1);\n                        \n                        var undefinedText;\n                        if (self.state.eventDescription.indexOf(\"2019\") == -1) {\n                            if (self.state.regionType === \"province\") {\n                                undefinedText = \"New municipality - no previous results available\"\n                            } else {\n                                undefinedText = \"New voting district - no previous results available\"\n                            }\n                        } else {\n                            undefinedText = \"votes not counted yet\";\n                        }\n    \n                        var turnoutData = getTurnout(d, i);\n                        var subRegionName = getSubRegionName(d.properties, self.state);\n                        var tooltipText = (typeof turnoutData !== \"undefined\")? \n                                    (subRegionName + \" : \" + turnoutData + \"%\") : undefinedText;\n    \n                        tooltipDiv.html(tooltipText)\t\n                            .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                    })\n                    .on(\"mouseout\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 1)\n                            .style(\"fill-opacity\", 1);\n                        \n                        if (self.state.regionType === \"municipality\") return;\n    \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                    })\n                    .on(\"click\", function(d, i) {\n                        if (self.state.disableNavigation) {\n                            return;\n                        }\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                        \n                        var regionType = self.state.regionType;\n                        var newState;\n                        if (regionType === \"national\") {\n                            newState = {\n                                regionType: \"province\",\n                                provinceName: d.properties.SPROVINCE\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        } else if (regionType === \"province\") {\n                            newState = {\n                                regionType: \"municipality\", \n                                provinceName: self.state.provinceName,\n                                muniName: d.properties.smunicipal,\n                                muniCode: getMunicipalityCode(d.properties),\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        } else { // \"municipality\"\n                            var newState = {\n                                regionType: \"municipality-vd\", \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: getMunicipalityiecId(d.properties),\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n    \n                            self.setState(newState);\n                        }\n                    })\n                    if (!self.state.disableNavigation) {\n                        var fo = svg.append(\"foreignObject\")\n                            .attr(\"x\", 0)\n                            .attr(\"y\", 10)\n                            .attr(\"width\", 500)\n                            .attr(\"height\", 30)\n                            .attr(\"class\", \"map-controls\")\n                        \n                        function setRegionType(regionType) {\n                            var newState;\n                            var newState = {\n                                regionType: self.state.regionType, \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: self.state.iecId,\n                            }\n                            newState.regionType = regionType;\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        }\n        \n                        function appendSpan(foDiv, regionName, addSub) {\n                            if (addSub) foDiv.append(\"span\").html(\" > \");\n                            foDiv.append(\"span\")\n                                .style(\"height\", \"30px\")\n                                .style(\"cursor\", \"default\")\n                                .html(regionName);\n                        }\n        \n                        function appendLink(foDiv, regionName, regionType, addSub) {\n                            if (addSub) foDiv.append(\"span\").html(\" > \");\n                            foDiv.append(\"a\")\n                                .style(\"height\", \"30px\")\n                                .style(\"cursor\", \"pointer\")\n                                .html(regionName)\n                                .on(\"click\", function() {\n                                    setRegionType(regionType);\n                                });\n                        }\n                        \n                        var foDiv = fo.append(\"xhtml:div\");\n                        var regionType = self.state.regionType;\n                        if (regionType == \"national\") {\n                            appendSpan(foDiv, \"South Africa\", false);\n                        } else {\n                            appendLink(foDiv, \"South Africa\", \"national\", false);\n                            if (regionType == \"province\") {\n                                appendSpan(foDiv, self.state.provinceName, true);\n                            } else {\n                                appendLink(foDiv, self.state.provinceName, \"province\", true);\n                                if (regionType == \"municipality\") {\n                                    appendSpan(foDiv, self.state.muniCode, true);\n                                } else {\n                                    appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                                    appendSpan(foDiv, self.state.iecId, true);\n                                }\n                            }\n                        }\n                        // foDiv\n                        //     .append(\"button\")\n                        //     .attr(\"class\", \"go-back\")\n                        //     .style(\"height\", \"30px\")\n                        //     .style(\"color\", \"black\")\n                        //     .html(\"go back\")\n                        //     .on(\"click\", function() {\n                        //         var regionType = self.state.regionType;\n                        //         var newState, event;\n            \n                        //         var newState = {\n                        //             regionType: self.state.regionType, \n                        //             provinceName: self.state.provinceName,\n                        //             muniName: self.state.muniName,\n                        //             muniCode: self.state.muniCode,\n                        //             iecId: self.state.iecId,\n                        //         }\n                                \n                        //         if (regionType === \"province\") {\n                        //             newState.regionType = \"national\";\n                        //         } else if (regionType === \"municipality\") {\n                        //             newState.regionType = \"province\";\n                        //         } else if (regionType === \"municipality-vd\") {\n                        //             newState.regionType = \"municipality\";\n                        //         }\n            \n                        //         triggerCustomEvent(events.REGION_CHANGE, newState);\n                        //         self.setState(newState);\n                        //     });\n                    }\n                self.getLoadingSpinner()\n                    .style(\"display\", \"none\");\n            }).catch(error => {\n                console.error(error);\n                console.log(`failed to get data from server`);\n            })\n        }).catch(error => {\n            console.error(error);       \n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniCode: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                if (regionType == \"national\" || regionType == \"province\") {\n                  console.log(`Can't get map data for ${currentRegionName}`);\n                } else {\n                    alert(`${currentRegionName} has been disestablished`); \n                }\n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getTurnoutDataForAllEvents,\n} from \"../../api\";\nimport {\n  parseTurnoutDataForAllEvents,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Turnout Barchart',\n  yAxisLabel: 'PERCENTAGE',\n  noXaxisByParty: true,\n  yValue: function(d) {\n    return d.percVoterTurnout;\n  },\n  yValueFormat: function(percVoterTurnout) {\n    return percVoterTurnout + '%';\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        eventType: \"national\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 10\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n    \n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `turnout-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var turnoutDataLoader = getTurnoutDataForAllEvents(props);\n      var dataLoaders = [turnoutDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var turnoutData = values[0];\n        self.drawGraph(container, props, turnoutData, 'rgb(157,51,55)');\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, colorsData) {\n        var chartData = parseTurnoutDataForAllEvents(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, colorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport styles from \"./barchartMap.css\";\nimport BarChart from '../BarChart/barchart';\nimport Map from '../Map/map';\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getRegionName,\n    fetchDataFromOBJ\n} from \"../../utils\";\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarchartWithNavMap extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 2\n        }      \n\n        fetchDataFromOBJ(this.state, props);\n\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var self = this;\n        Promise.all([\n            self.barchartInstance.exportAsPNGUri(),\n            self.mapInstance.exportAsPNGUri()\n        ]).then(values => {\n            var zip = new window.JSZip();\n\n            var imgs = zip.folder(\"export-images\");\n            imgs.file(\"barchart.png\", values[0], {base64: true});\n            imgs.file(\"map.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `race-for-votes-barchart-map(${getRegionName(self.state)}).zip`);\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n\n    render() {\n      const {\n        stylesheetFor\n      } = this.state;\n\n        return (\n        <div ref=\"superwidget\" className={className(\"barchart-map\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={className(\"barchart-container\")} ref=\"barchart\">\n                <BarChart \n                    ref={instance => { this.barchartInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n            <div className={className(\"map-container\")}>\n                <Map \n                    ref={instance => { this.mapInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BarchartWithNavMap;\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, createErrorText} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n    var data = [],\n        width = 700,\n        height = 300,\n        margin = {top: 10, right: 10, bottom: 10, left: 10},\n        variable = options.variable,\n        category = options.category,\n        padAngle = 0.015,\n        transTime = 750,\n        floatFormat = d3.format('.4r'),\n        cornerRadius = 3,\n        colorsData = null;\n\n\n        \n\n    function colour(key) {\n        if (colorsData && colorsData[key]) {\n            return colorsData[key];\n        }\n        return 'rgb(' + Math.random()*250 + ',' + Math.random()*250 + ',' + Math.random()*250 + ')';\n    }\n\n    var radius = Math.min(width, height) / 2;\n\n    var pie = d3.pie()\n        .value(function(d) { return floatFormat(d[variable]); })\n        .sort(null);\n\n    var arc = d3.arc()\n        .outerRadius(radius * 0.8)\n        .innerRadius(radius * 0.6)\n        .cornerRadius(cornerRadius)\n        .padAngle(padAngle);\n\n    var totalSvg = createSvg(container, width + margin.left + margin.right, height + margin.top + margin.bottom);\n    \n    \n    var transformX = height / 2, transformY = height / 2;\n    if (options.chartType === 'Progress on Votes Count') {\n    } else {\n        transformX = width / 2;\n    }\n    var svg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + transformX + ',' + transformY + ')');\n    \n    var labelSvg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + height * 6 / 5 + ',' + height / 2 + ')');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'lines');\n\n    var path = svg.select('.slices')\n        .selectAll('path')\n        .data(pie(data))\n        .enter().append('path')\n        .attr('fill', function(d) { return colour(d.data[category]); })\n        .attr('d', arc);\n\n    var errorText = createErrorText(svg);\n\n    this.destroy = function() {\n        container.selectAll(\"svg\").remove();\n    }\n    this.draw = function(value, colorsDataP) {\n        if (!value) {\n            errorText.text(\"chart data is not available\");\n            return;\n        } else {\n            errorText.text(\"\");\n        }\n\n        if (options.chartType === 'Progress on Votes Count') {\n            colorsData = colorsDataP;\n        } else {\n            var partyColorByName = {};\n\n            var partyColorsData = colorsDataP;\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n                partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                    partyColorByName[edge.node.abbreviation] = edge.node.colour;\n                })\n            }\n            colorsData = partyColorByName;\n        }\n        \n        data = value;\n\n        if (options.chartType === 'Progress on Votes Count') {\n            labelSvg.selectAll('text').remove();\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', -15)\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle')\n                .text('Completed' + ': ' + data[0][\"percent\"] + '%');\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', 0)\n                .text('Captured Votes' + ': ' + data[0][\"count\"])\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', 15)\n                .text('Total' + ': ' + data[0][\"totalCount\"])\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n        }\n\n        var updatePath = d3.select('.slices').selectAll('path');\n\n        var data0 = path.data(),\n            data1 = pie(data);\n\n        updatePath = updatePath.data(data1, key);\n\n        updatePath.enter().append('path')\n            .each(function(d, i) { this._current = findNeighborArc(i, data0, data1, key) || d; })\n            .attr('fill', function(d) {  return colour(d.data[category]); })\n            .attr('d', arc);\n\n        updatePath.exit()\n            .transition()\n            .duration(transTime)\n            .attrTween(\"d\", arcTween)\n            .remove();\n\n        updatePath.transition().duration(transTime)\n            .attrTween('d', arcTween);\n\n        d3.selectAll('.labelName text, .slices path').call(toolTip);\n\n    };\n\n    function toolTip(selection) {\n\n        selection.on('mouseenter', function (data) {\n            svg.append('text')\n                .attr('class', 'toolCircle')\n                .attr('dy', -15)\n                .html(toolTipHTML(data))\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n\n            svg.append('circle')\n                .attr('class', 'toolCircle')\n                .attr('r', radius * 0.55)\n                .style('fill', colour(data.data[category]))\n                .style('fill-opacity', 0.35);\n\n        });\n\n        selection.on('mouseout', function () {\n            d3.selectAll('.toolCircle').remove();\n        });\n    }\n\n    function toolTipHTML(data) {\n\n        if (options.chartType === 'Progress on Votes Count') {\n            var tip = '';\n            tip += '<tspan x=\"0\">' + 'Progress' + ': ' + data.data[\"percent\"] + '%' + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Captured Votes' + ': ' + data.data[\"count\"] + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Total' + ': ' + data.data[\"totalCount\"] + '</tspan>';\n        } else { //'Race for Seats Donut chart'\n            var tip = '';\n            tip += '<tspan x=\"0\">' + 'Seats' + ': ' + data.data[\"seats\"] + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Party' + ': ' + data.data[\"name\"] + '</tspan>';\n        }\n        return tip;\n    }\n\n    function arcTween(d) {\n        var i = d3.interpolate(this._current, d);\n        this._current = i(0);\n        return function(t) { return arc(i(t)); };\n    }\n\n    function findNeighborArc(i, data0, data1, key) {\n        var d;\n        return (d = findPreceding(i, data0, data1, key)) ? {startAngle: d.endAngle, endAngle: d.endAngle}\n            : (d = findFollowing(i, data0, data1, key)) ? {startAngle: d.startAngle, endAngle: d.startAngle}\n                : null;\n    }\n\n    function findPreceding(i, data0, data1, key) {\n        var m = data0.length;\n        while (--i >= 0) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n\n    function key(d) {\n        return d.data[category];\n    }\n\n    function findFollowing(i, data0, data1, key) {\n        var n = data1.length, m = data0.length;\n        while (++i < n) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"./d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getProgressVotesCount\n} from \"../../api\";\nimport {\n  parseProgressVotesCount,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Progress on Votes Count',\n  variable: 'percent',\n  category: 'name'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass PieChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 4\n      }     \n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `progress-on-votes-piechart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n   \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"piechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var progressVotesDataLoader = getProgressVotesCount(props);\n      var dataLoaders = [progressVotesDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var progressVotesData = values[0];\n        self.drawGraph(container, props, progressVotesData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseProgressVotesCount(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Completed\": \"#15707C\",\n          \"Not Completed\": \"#CCCCCC\"\n        });\n    }\n}\n\nexport default PieChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"../ProgVotesCountPiechart/d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Donut Chart',\n  variable: 'seats',\n  category: 'name',\n  viewBox: '170 0 360 320'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass DonutChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 17\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID !== this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-donutchart-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"donutchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID !== -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default DonutChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes Comparison\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  showLegend: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        partyIecId: null,\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 16\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonData(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Comparison',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        partyIecId: null,\n        eventDescriptions: [\n            \"National Elections 1999\",\n            \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            \"2019 PROVINCIAL ELECTION\",\n\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 7\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      \n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, createErrorText} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n    options = {};\n  } \n\n  width = 360;\n  height = 185;\n\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = createSvg(container, width, height);\n\n\n    var tooltipDiv = createTooltip(className);\n\n    var mainSvg = svg.append(\"g\");\n    var errorText = createErrorText(svg, width / 2, height / 2);\n\n    this.draw = function(originChartData, colorsData) {\n      var chartData = [];\n      if (!originChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n\n      chartData = originChartData;\n      var largest = chartData[0];\n      var rest = chartData.slice(1);\n\n\n      rest.push(largest);\n      chartData = rest;\n\n      var partyColorByName = {};\n\n      var partyColorsData = colorsData;\n      if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n          partyColorByName[edge.node.name] = edge.node.colour;\n          })\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getTooltipText(d, i) {\n          return d.name;\n      }\n\n      var totalSeats = 0;\n      for (var i = 0; i < chartData.length; i ++) {\n        totalSeats += chartData[i].seats;\n      }\n\n      function pythonConvertedCode(totalSeats, mainSvg) {\n        var Totals=[\n              3, 15, 33, 61, 95, 138, 189, 247, 313, 388, 469, 559, 657, 762, 876, 997,\n              1126, 1263, 1408, 1560, 1722, 1889, 2066, 2250, 2442, 2641, 2850, 3064, 3289, 3519,\n              3759, 4005, 4261, 4522, 4794, 5071, 5358, 5652, 5953, 6263, 6581, 6906, 7239, 7581,\n              7929, 8287, 8650, 9024, 9404, 9793, 10187, 10594, 11003, 11425, 11850, 12288, 12729,\n              13183, 13638, 14109, 14580, 15066, 15553, 16055, 16557, 17075, 17592, 18126, 18660,\n              19208, 19758, 20323, 20888, 21468, 22050, 22645, 23243, 23853, 24467, 25094, 25723,\n              26364, 27011, 27667, 28329, 29001, 29679, 30367, 31061\n        ]\n    \n        if (totalSeats > Totals[Totals.length-1]){\n            console.error(\"total seats >\", Totals[Totals.length-1]);\n        }\n    \n        if (totalSeats < 1) {\n          console.error(\"total seats < 1\");\n        }\n        var rows;\n        var radius;\n        var poslist;\n        var J, R, angle;\n          // Figure out how many rows are needed:\n          for (var i = 0; i < Totals.length; i++) {\n              if (Totals[i] >= totalSeats) {\n                  rows = i + 1;\n                  break\n              }\n          }\n          // Maximum radius of spot is 0.5/rows; leave a bit of space.\n          radius = 0.4/rows;\n    \n          // Create list of centre spots\n          poslist = []\n\n          for (var i = 1; i < rows; i ++) {\n            // Each row can contain pi/(2asin(2/(3n+4i-2))) spots, where n is the number of rows and i is the number of the current row.\n            J = parseInt((totalSeats)/Totals[rows-1]*Math.PI/(2*Math.asin(2.0/(3.0*rows+4.0*i-2.0))));\n            // The radius of the ith row in an N-row diagram (Ri) is (3*N+4*i-2)/(4*N)\n            R = (3.0*rows+4.0*i-2.0)/(4.0*rows);\n            if (J === 1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n            } else {\n              for (var j = 0; j < J; j ++){\n                // The angle to a spot is n.(pi-2sin(r/Ri))/(Ni-1)+sin(r/Ri) where Ni is the number in the arc\n                // x=R.cos(theta) + 1.75\n                // y=R.sin(theta)\n                angle = (j)*(Math.PI-2.0*Math.sin(radius/R))/(J-1.0)+Math.sin(radius/R);\n                poslist.push({\n                  angle,\n                  x: R*Math.cos(angle)+1.75,\n                  y: R*Math.sin(angle)\n                });\n              }\n            }\n          }\n          J=totalSeats-poslist.length\n          R=(7.0*rows-2.0)/(4.0*rows)\n          if (J===1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n          }\n          else {\n              for (var j = 0; j < J; j ++) {\n                  angle=(j)*(Math.PI-2.0*Math.sin(radius/R))/((J)-1.0)+Math.sin(radius/R)\n                  poslist.push({\n                    angle,\n                    x: R*Math.cos(angle)+1.75,\n                    y: R*Math.sin(angle)\n                  })\n              }\n          }\n\n          poslist.sort(function(a,b) {\n            function value(x) {\n              return x.angle - Math.PI/2;\n            }\n            return value(b) - value(a);\n          })\n\n          function onMouseMove(svg, i){\n            svg\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltipDiv.html(getTooltipText(chartData[i], i))\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n          }\n          function onMouseOut(svg) {\n            svg\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n          }\n          \n          mainSvg.append('text')\n            .attr('x', 175)\n            .attr('y', 175)\n            .attr('style', \"font-size:36px;font-weight:bold;text-align:center;text-anchor:middle;font-family:sans-serif\")\n            .text(totalSeats);\n\n          var Counter=0 //How many spots have we drawn?\n          for (var i = 0; i < chartData.length; i ++){\n            //Make each party's blocks an svg group\n            var partySvg = mainSvg.append('g')\n              .attr(\"fill\", getFillColorFromPartyName(chartData[i].partyInfo.name, i))\n              .attr(\"id\", chartData[i].name);\n            \n            partySvg.on(\"mousemove\", onMouseMove.bind(this, partySvg, i))\t\t\t\t\t\n              .on(\"mouseout\", onMouseOut.bind(this, partySvg))\n            \n            for (var j = 0; j < chartData[i].seats; j++, Counter++) {\n              partySvg.append('circle')\n                .attr('cx', poslist[Counter].x*100.0+5.0)\n                .attr('cy', 100.0*(1.75-poslist[Counter].y)+5.0)\n                .attr('r', radius*100.0)\n            }\n          }\n      }\n      pythonConvertedCode(totalSeats, mainSvg);\n\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./horseshoe.css\";\nimport {Chart} from \"../SeatHorseShoeChart/d3horseshoe\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats HorseShoe Chart',\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass HorseShoeChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 8\n      }\n\n      fetchDataFromOBJ(this.state, props);\n      this.state[\"numParties\"] = 100;\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      if (this.has_drawn === undefined) {\n        this.draw(this.getContainer(), this.state)\n        this.has_drawn = true;\n      } else {\n        // Hack to prevent drawing horseshoe twice\n        this.has_drawn = undefined;\n      }\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID !== this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-horseshoe-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"horseshoechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID !== -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default HorseShoeChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, createErrorText, PartyColours} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n    options = {};\n  }\n\n  var showPoints = options.showPoints || true;\n  var pointRadius = options.pointRadius || 2;\n  var showPointLabels = options.showPointLabels || false;\n  var pointLabelOffset = options.pointLabelOffset || 4;\n  var showCurrentLine = options.showCurrentLine || true;\n\n  width = 600;\n  height = 400;\n\n  var margin = {\n      top: 20,\n      right: 20,\n      bottom: 50,\n      left: 40\n  }\n\n  var canvas = {\n    top : margin.top,\n    bottom : height - margin.bottom - margin.top,\n    left : margin.left,\n    right : width - margin.right - margin.left\n  }\n\n  //var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n  var svg = createSvg(container, width, height);\n\n  var tooltipDiv = createTooltip(className);\n\n  var mainSvg = svg\n    .append(\"g\")\n\n  var errorText = createErrorText(svg, width / 2, height / 2);\n\n  this.draw = function(originChartData, colorsData) {\n    var chartData = [];\n    var getPartyColour = PartyColours(colorsData);\n\n    if (!originChartData) {\n      errorText.text(\"chart data is not available\");\n      return;\n    }\n\n    var x = d3.scaleLinear()\n      .domain([0, 100])\n      .range([canvas.left, canvas.right]);\n\n    var y = d3.scaleLinear()\n      .domain([0, 100])\n      .range([canvas.bottom, canvas.top]);\n\n    var radiusScale = d3.scaleLinear()\n      .domain([0, 100])\n      .range([0, 100]);\n\n    var axisContainer = mainSvg\n      .append(\"g\")\n        .classed(\"axes\", true)\n\n    axisContainer.append(\"g\")\n      .attr(\"transform\", \"translate(0, \" + canvas.bottom + \")\")\n      .classed(\"x-axis\", true)\n      .call(d3.axisBottom(x));\n\n    axisContainer.append(\"g\")\n      .attr(\"transform\", \"translate(\" + canvas.left + \", 0)\")\n      .classed(\"y-axis\", true)\n      .call(d3.axisLeft(y));\n\n    axisContainer.append(\"text\")\n      .text(\"% VDs declared\")\n      .attr(\"transform\", \"translate(\" + x(50) + \", \" + y(-10) + \")\")\n      .style(\"fill\", \"white\")\n      .attr(\"text-anchor\", \"middle\")\n      .classed(\"x-axis-text\", \"true\")\n      .classed(\"axis-text\", \"true\")\n\n    axisContainer.append(\"text\")\n      .text(\"% Party support\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(-90) translate(-180, 10)\")\n      .style(\"fill\", \"white\")\n      .classed(\"y-axis-text\", \"true\")\n      .classed(\"axis-text\", \"true\")\n\n    var data = null;\n    var party = null;\n    var lineContainer = null;\n    var eventCaptureContainer = null;\n    var cleaned_party_name = null;\n    var valueline = null;\n\n    originChartData.map(function(party) {\n      valueline = d3.line()\n        .x(function(d) { return x(d.x); })\n        .y(function(d) { return y(d.y); });\n\n      data = party.data;\n      var colour = getPartyColour(party.name);\n\n      lineContainer = mainSvg.append(\"g\")\n        .classed(\"line-container\", true)\n        .classed(party.cleaned_name, true);\n\n      eventCaptureContainer = mainSvg.append(\"g\")\n        .classed(\"event-capture-container\", true)\n        .classed(party.cleaned_name, true);\n\n      lineContainer.append(\"path\")\n        .data([data])\n          .attr(\"class\", \"line\")\n          .attr(\"d\", valueline)\n          .style(\"stroke\", colour)\n\n      if (showPoints) {\n        lineContainer.selectAll(\"circle\")\n          .data(data)\n          .enter()\n          .append(\"circle\")\n            .attr(\"cx\", function(d) { return x(d.x) })\n            .attr(\"cy\", function(d) { return y(d.y) })\n            .attr(\"r\", function(d) { return radiusScale(pointRadius) })\n            .style(\"fill\", colour)\n            .classed(\"graph-points\", true)\n        \n        eventCaptureContainer.selectAll(\"circle\")\n          .data(data)\n          .enter()\n          .append(\"circle\")\n            .attr(\"cx\", function(d) { return x(d.x) })\n            .attr(\"cy\", function(d) { return y(d.y) })\n            .attr(\"r\", function(d) { return radiusScale(pointRadius) * 3 })\n            .style(\"fill\", \"transparent\")\n            .classed(\"graph-points\", true)\n            .on(\"mousemove\", function(d, i) {\t\t\n              console.log(\"tooltip mousemove\");\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              tooltipDiv.html(d.y + \"%\")\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n              console.log(\"tooltip mouseout\");\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n            })\n      }\n\n      if (showPointLabels) {\n        lineContainer.selectAll(\"text\")\n          .data(data)\n          .enter()\n          .append(\"text\")\n            .text(function(d) { return d.y})\n            .attr(\"transform\", function(d) {\n              return \"translate(\" +  x(d.x - radiusScale(pointRadius / 2)) + \", \" + y(d.y + pointLabelOffset) + \")\"\n            })\n            .classed(\"graph-labels\", true)\n      }\n\n    })\n\n\n\n\n\n     /*\n\n      function getTooltipText(d, i) {\n          return d.name;\n      }\n      */\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./voteprediction.css\";\nimport {Chart} from \"../VotePredictionLineChart/d3voteprediction\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesPredictionData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesPredictionData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Votes prediction line charts',\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass VotePredictionLineChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 8\n      }\n\n      fetchDataFromOBJ(this.state, props);\n      this.state[\"numParties\"] = 100;\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state);\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n\n      // TODO not sure what to change race-for-seats-horseshoe.... to\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-horseshoe-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n\n      var d = new Date();\n      var hr = d.getHours();\n      var min = d.getMinutes();\n      if (min < 10) {\n          min = \"0\" + min;\n      }\n\n      var date = d.getDate();\n      var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      var month = months[d.getMonth()];\n      var year = d.getFullYear();\n\n      var currentTimeText = hr + \":\" + min + \" on \" + date + \" \" + month + \" \" + year;\n\n      return (\n          <div className={className(\"votepredictionlinechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div className={cn(\"prediction-time\")}> \n              Predictions at {currentTimeText}\n            </div>\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n              <div className={cn(\"CSIR-bottom-label\")}><b>CSIR's election prediction  model</b></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var predictionDataLoader = getVotesPredictionData(props);\n      var predictionDataLoader = null;\n      var dataLoaders = [predictionDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var predictionData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, predictionData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesPredictionData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default VotePredictionLineChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, formatPartyName, formatClassNameFromString} from \"../../utils\";\nimport config from \"../../config\"\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 250;\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 50;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    // TODO not sure what options.viewBox is below - don't see it being used anywhere\n    /*\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", options.viewBox || (\"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset)))\n        .classed(\"svg-content\", true);\n    */\n\n    var svg = createSvg(container, width + XaxisOffset, height + YaxisOffset);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n    svg.selectAll(\".topLabel\").remove();\n    svg.append(\"text\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n    if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n    } else {\n        errorText.text(\"\");\n    }\n    var partyColorByName = {};\n    var partyAbbrByName = {};\n    if (colorsData && colorsData[\"data\"][\"allParties\"][\"edges\"]) {\n      colorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n        partyColorByName[edge.node.name] = edge.node.colour;\n        partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n      })\n    }   \n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(groupChartData.map(item => item.eventDescription));\n\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = Math.min(100, d3.max(groupChartData.map(item => d3.max(item.data, function(d) { return parseFloat(options.yValue(d)); }))) * 1.5);\n      }\n      y.domain(minMaxY);\n\n      var availableParties = \n \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(4)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n\n      svg.selectAll(`.bar-group`).remove();\n      var groupSvgs = svg.selectAll(`.bar-group`).data(groupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.eventDescription)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.eventDescription) + x.bandwidth()*1/20}, 0)`);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n      \n      for (var i = 0; i < groupChartData.length; i ++) {\n        var eventDescription = groupChartData[i].eventDescription;\n        var chartData = groupChartData[i].data;\n\n        var subX = d3.scaleBand()\n          .rangeRound([0, x.bandwidth()*9/10])\n          .domain(chartData.map(function (d) {\n            return d.name;\n          }));\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(eventDescription)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n    \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", function (d, i) {\n              return subX(d.name)+subX.bandwidth()/4;\n            })\n            .attr(\"width\", subX.bandwidth()*1/2)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d)));\n            })\n            .attr(\"height\", function (d) {\n              return height - y(Number(options.yValue(d)));\n            })\n\n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return options.yValueFormat(options.yValue(d));\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d))) - 5;\n            })\n          \n          var parties = [];\n          var partyIecIds = [];\n          groupChartData.forEach(({data: chartData}) => {\n            chartData.forEach(({partyInfo}) => {\n              var party = partyInfo.name;\n              if (partyIecIds.indexOf(partyInfo.iecId) == -1) {\n                  parties.push(party);\n                  partyIecIds.push(partyInfo.iecId);\n              }\n            })\n          })\n          \n          function getLegendXY(i) {\n              return [XaxisOffset + (i%5)*100, height + 30 + parseInt(i/5) * 40];\n          }\n          svg.selectAll(`.${className(\"legend\")}`).remove();\n          var legends = svg.selectAll(`.${className(\"legend\")}`)\n              .data(parties)\n              .enter()\n              .append('g')\n              .attr(\"class\", className(\"legend\"))\n              .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n          legends\n              .append(\"rect\")\n              .attr('width', 10)\n              .attr('height', 10)\n              .attr('x', 0)\n              .attr('y', 0)\n              .attr(\"fill\", (party, i) => {\n                  return getFillColorFromPartyName(party);\n              })\n          legends.append('text')\n              .attr('x', 30)\n              .attr('y', 10)\n              .style('font-size', '12px')\n              .text(party => partyAbbrByName[party])\n      }\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../SplitNatProv/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForAllEvents,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesDataForAllEvents,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  dynamicYAxisFromValues: false\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numPartiesSplitNatProv: 3,\n        eventDescriptionsSplitNatProv: [\n          // \"National Elections 1999\",\n          // \"Provincial Elections 1999\",\n          // \"14 Apr 2004 National Election\",\n          // \"14 Apr 2004 Provincial Election\",\n          \"22 Apr 2009 National Election\",\n          \"22 Apr 2009 Provincial Election\",\n          \"2014 National Election\",\n          \"2014 Provincial Election\",\n          // \"2019 NATIONAL ELECTION\",\n          // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"province\",\n        provinceName: \"Western Cape\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 18\n      }\n\n      console.log(\"SplitNatProv state and props\", this.state, props)\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForAllEvents(props);\n      var dataLoaders = [votesDataLoader];\n\n      chartOptions.topLabel = `${getRegionName(props)} Race for Votes - Split (Nat/Prov)`;\n      if (this.state.componentID == -1000) {\n        chartOptions.topLabel = ``;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesDataForAllEvents(data, props);\n        // console.log(\"SplitNatProvProps\", props);\n        // console.log(\"SplitNatProvData\", data);\n        // console.log(\"SplitNatProvParsed\", chartData);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport MetisMenu from 'react-metismenu';\n\nimport config from '../../config'\nimport styles from \"./navbar.css\";\nimport events from \"../../events\";\nimport {\n    getProvincesData,\n    getMetrosData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    fetchDataFromOBJ\n} from \"../../utils\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cssPrefix(originName) {\n    return config.CSS_PREFIX+originName;\n}\n\nvar provincesData = getProvincesData();\nvar metrosData = getMetrosData();\n\nclass CustomLink extends React.Component {\n    constructor() {\n      super();\n  \n      this.onClick = this.onClick.bind(this);\n    }\n  \n    onClick(e) {\n      if (this.props.hasSubMenu) this.props.toggleSubMenu(e);\n      else {\n        this.props.activateMe({\n          newLocation: this.props.to,\n          selectedMenuLabel: this.props.label,\n        });\n      }\n    }\n  \n    render() {\n      if (this.props.hasSubMenu) {\n        return (\n          <div className=\"metismenu-link\" onClick={this.onClick}>\n            {this.props.children}\n          </div>\n      )} else {\n        return (\n          <div className=\"metismenu-link metismenu-end\" onClick={this.onClick}>\n            {this.props.children}\n          </div>\n        );\n      }\n    }\n  };\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2019 National Election\",\n            nationalEventDescription: \"2019 National Election\",\n            provincialEventDescription: \"2019 Provincial Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            comp: \"Race for Votes\",\n            activeLinkId: ''\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        this.handleNavBarSelection = this.handleNavBarSelection.bind(this);\n    }\n\n    componentDidMount() {\n        if(!document.getElementById('navbarcss')) {\n            var link = document.createElement('link');\n            link.id = 'navbarcss';\n            link.rel = 'stylesheet';\n            link.href = config.DOMAIN + '/navbar.css';\n            document.head.appendChild(link);\n        }\n\n        if(!document.getElementById('font-awesome')) {\n            var link = document.createElement('link');\n            link.id = 'font-awesome';\n            link.rel = 'stylesheet';\n            link.href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\";\n            document.head.appendChild(link);\n        }\n\n        this.refs.navbar.addEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentWillUnmount() {\n        this.refs.navbar.removeEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentDidUpdate() {\n    }\n\n    handleNavBarSelection(e) {\n        console.log(\"handleNavBarSelection\");\n        if (e.target.className.indexOf(\"metismenu-link\") == -1) {\n            return;\n        }\n        var iconClass = e.target.childNodes[0].className;\n        var classList = iconClass.split(' ');\n        var lastClass = classList[classList.length - 1];\n        var passInfo = lastClass.split('-');\n        var enableMap = true;\n        var enableTurnoutProgressSpoilt = true;\n\n        var eventDescription, electionType, regionType, selectionData = {}, chartType = \"\";\n        var activeLinkId = passInfo.slice(1, passInfo.length).join('-');\n\n        if (passInfo[1] == '1') {\n            eventDescription = this.state.nationalEventDescription;\n            regionType = \"national\";\n            if (passInfo[2] == '1') {\n                switch (passInfo[3]) {\n                    case '1':\n                        chartType = \"votes-default\";\n                        break;\n                    case '2':\n                        chartType = \"votes-comparisons\";\n                        break;\n                    case '3':\n                        chartType = \"votes-predictions\";\n                        enableMap = false;\n                        enableTurnoutProgressSpoilt = false;\n                        if (passInfo[4] > 0) {\n                            regionType = \"province\";\n                            selectionData = provincesData[passInfo[4]-1];\n                        }\n                        break;\n                    case '4':\n                        chartType = \"votes-progress\";\n                        break;\n                    case '5':\n                        chartType = \"votes-turnout\";\n                        break;\n                    case '6':\n                        chartType = \"votes-myvd\";\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[2] == '2') {\n                switch (passInfo[3]) {\n                    case '1':\n                        chartType = \"seats-default\";\n                        enableMap = false;\n                        break;\n                    case '2':\n                        chartType = \"seats-comparisons\";\n                        break;\n                    case '3':\n                        chartType = \"seats-electeds\";\n                        break;\n                    case '4':\n                        chartType = \"seats-women\";\n                        break;\n                    case '5':\n                        chartType = \"seats-age\";\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[3] == '4') {\n                // Main page for National Assembly\n                chartType = \"votes-default\";\n            } else {\n                return;\n            }\n        } else if (passInfo[1] == '2') {\n            eventDescription = this.state.provincialEventDescription;\n            regionType = \"province\";\n            selectionData = provincesData[passInfo[2]];\n            if (passInfo[3] == '1') {\n                switch (passInfo[4]) {\n                    case '1':\n                        chartType = \"votes-default\"; // done\n                        break;\n                    case '2':\n                        chartType = \"votes-comparisons\";\n                        break;\n                    case '3':\n                        chartType = \"votes-progress\"; // done\n                        break;\n                    case '4':\n                        chartType = \"votes-turnout\";// done\n                        break;\n                    case '5':\n                        chartType = \"votes-split\";\n                        break;\n                    case '6':\n                        chartType = \"votes-CSIR\";\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[3] == '2') {\n                switch (passInfo[4]) {\n                    case '1':\n                        chartType = \"seats-default\"; // done\n                        break;\n                    case '2':\n                        chartType = \"seats-comparisons\";\n                        break;\n                    case '3':\n                        chartType = \"seats-electeds\";\n                        break;\n                    case '4':\n                        chartType = \"seats-women\";\n                        break;\n                    case '5':\n                        chartType = \"seats-age\";\n                        break;\n                    default:\n                        return;\n                }\n\n            } else if (passInfo[3] == '4') {\n                // Main page for National Legislature\n                regionType = \"national\";\n                chartType = \"votes-default\";\n            } else {\n                return;\n            }\n        } else if (passInfo[1] == '3') { // metros\n            eventDescription = this.state.nationalEventDescription;\n            regionType = \"municipality\"\n            selectionData = metrosData[passInfo[2]];\n            chartType = \"votes-default\";\n        } else {\n            return;\n        }\n\n        if (!chartType)\n            return;\n\n        if (eventDescription)\n            if (eventDescription.toLowerCase().indexOf(\"provincial\") > 0) {\n                electionType = \"provincial\"\n            }\n        else {\n            electionType = \"national\"\n        }\n\n        e.preventDefault();\n        var newState;\n        if (regionType == \"national\") {\n            newState = {\n                regionType: regionType\n            };\n            // if (this.state.regionType == newState.regionType \n            //     && this.state.comp == chartType)\n            //     return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            // if (this.state.regionType == newState.regionType \n            //     && this.state.provinceName == newState.provinceName \n            //     && this.state.comp == chartType)\n            //     return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            // if (this.state.regionType == newState.regionType \n            //     && this.state.provinceName == newState.provinceName\n            //     && this.state.muniName == newState.muniName\n            //     && this.state.comp == chartType)\n            //     return;\n        }\n        newState.eventDescription = eventDescription;\n        newState.electionType = electionType\n        newState.comp = chartType;\n        newState.enableMap = enableMap;\n        newState.enableTurnoutProgressSpoilt = enableTurnoutProgressSpoilt;\n\n        console.log(\"newState\", newState);\n\n        if (newState.comp == \"votes-myvd\") {\n            newState.regionType = \"municipality-vd\";\n            newState.iecId = \"\";\n        }\n\n        if (newState.comp == \"seats-electeds\" || newState.comp == \"seats-women\" || newState.comp == \"seats-age\") {\n            triggerCustomEvent(events.SEATS_ELECTEDS_EVENT, newState);\n            return;\n        }\n\n        triggerCustomEvent(events.QUICK_RESULTS_PREVIEW, newState);\n        // triggerCustomEvent(events.REGION_CHANGE, newState);\n        // triggerCustomEvent(events.MAP_PREVIEW, newState);\n\n        newState.activeLinkId = activeLinkId;\n        this.setState(newState);\n    }\n      \n    render () {\n        var content = [\n            {\n                label: 'National Assembly',\n                icon: `1-3-4-1`,\n                content: [\n                    {\n                        label: \"Race for votes\",\n                        content: [\n                            {\n                                icon: `1-1-1`,\n                                label: `National assembly`,\n                                to: `1-1-1`,\n                            },\n                            {\n                                icon: `1-1-2`,\n                                label: `Comparisons`,\n                                to: `1-1-2`,\n                            },\n                            {\n                                label: `CSIR predictions`,\n                                content: [\n                                    {\n                                        icon: `1-1-3-0`,\n                                        label: `National Assembly`,\n                                        to: `1-1-3-0`,\n                                    },\n                                    ...provincesData.map((province, i) => {\n                                        return {\n                                            icon: `1-1-3-${i+1}`,\n                                            label: province.name,\n                                            to: `1-1-3-${i+1}`,\n                                        }\n                                    })\n                                ]\n                            },\n                            {\n                                icon: `1-1-4`,\n                                label: `Counting progress`,\n                                to: `1-1-4`,\n                            },\n                            {\n                                icon: `1-1-5`,\n                                label: `Turnout`,\n                                to: `1-1-5`,\n                            },\n                            {\n                                icon: `1-1-6`,\n                                label: `My voting District`,\n                                to: `1-1-6`,\n                            },\n                            {\n                                label: `Metros`,\n                                icon: `3-2`, // Setting default metros view to JHB\n                                content: metrosData.map((metro, i) => {\n                                    return {\n                                        icon: `3-${i}`,\n                                        label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                                        to: `3-${i}`,\n                                    }\n                                })\n                            },\n                        ]\n                    },\n                    {\n                        label: \"Race for seats\",\n                        content: [\n                            {\n                                icon: `1-2-1`,\n                                label: `National assembly`,\n                                to: `1-2-1`\n                            },\n                            {\n                                icon: `1-2-2`,\n                                label: `Comparisons`,\n                                to: `1-2-2`,\n                            },\n                            {\n                                icon: `1-2-3`,\n                                label: `Electeds`,\n                                to: `1-2-3`,\n                            },\n                            // {\n                            //     icon: `1-2-4`,\n                            //     label: `Women`,\n                            //     to: `1-2-4`,\n                            // },\n                            // {\n                            //     icon: `1-2-5`,\n                            //     label: `Age`,\n                            //     to: `1-2-5`,\n                            // }\n                        ]\n                    }\n                ]\n            },\n            {\n                label: 'Provincial Legislature',\n                icon: `2-3-4-1`,\n                content: provincesData.map((province, i) => {\n                    return {\n                        label: province.name,\n                        content: [\n                            {\n                                label: \"Race for votes\",\n                                content: [\n                                    {\n                                        icon: `2-${i}-1-1`,\n                                        label: `Provincial legislature`,\n                                        to: `2-${i}-1-1`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-2`,\n                                        label: `Comparisons`,\n                                        to: `2-${i}-1-2`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-3`,\n                                        label: `Counting progress`,\n                                        to: `2-${i}-1-3`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-4`,\n                                        label: `Turnout`,\n                                        to: `2-${i}-1-4`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-5`,\n                                        label: `Split (Nat/Prov)`,\n                                        to: `2-${i}-1-5`,\n                                    },\n                                    // {\n                                    //     icon: `2-${i}-1-6`,\n                                    //     label: `CSIR Predictions`,\n                                    //     to: `2-${i}-1-6`,\n                                    // },\n                                ]\n                            },\n                            {\n                                label: \"Race for seats\",\n                                content: [\n                                    {\n                                        icon: `2-${i}-2-1`,\n                                        label: `Provincial legislature`,\n                                        to: `2-${i}-2-1`,\n                                    },\n                                    {\n                                        icon: `2-${i}-2-2`,\n                                        label: `Comparisons`,\n                                        to: `2-${i}-2-2`,\n                                    },\n                                    {\n                                        icon: `2-${i}-2-3`,\n                                        label: `Electeds`,\n                                        to: `2-${i}-2-3`,\n                                    },\n                                    // {\n                                    //     icon: `2-${i}-2-4`,\n                                    //     label: `Women`,\n                                    //     to: `2-${i}-2-4`,\n                                    // },\n                                    // {\n                                    //     icon: `2-${i}-2-5`,\n                                    //     label: `Age`,\n                                    //     to: `2-${i}-2-5`,\n                                    // }\n                                ]\n                            }\n                        ]\n                    }\n                })\n            },\n            // {\n            //     icon: '',\n            //     label: 'Metros',\n                // content: metrosData.map((metro, i) => {\n                //     return {\n                //         icon: `4-${i}`,\n                //         label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                //         to: `4-${i}`,\n                //         // content: toShowCharts.map((toshowchart, chartIdx) => {\n                //         //     return {\n                //         //         icon: `4-${i}-${chartIdx}`,\n                //         //         label: toshowchart,\n                //         //         to: `4-${i}-${chartIdx}`,\n                //         //     }\n                //         // })\n                //     }\n                // })\n            // }\n        ];\n\n        \n        return (\n            <div className={[className(cssPrefix(\"menu-widget\")), cssPrefix(\"menu-widget\")].join(\" \")} ref=\"navbar\">\n                <MetisMenu activeLinkId={this.state.activeLinkId} content={content} LinkComponent={CustomLink}/>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport styles from \"./quickResultsWidget.css\";\n\nimport config from '../../config'\nimport events from \"../../events\";\n\nimport BarChart from '../BarChart/barchart';\n\nimport ProgressVotesPieChart from '../ProgVotesCountPiechart/piechart';\n\nimport RaceForSeatDonut from '../RaceForSeatDonut/piechart';\nimport VoteCompBarchart from '../VoteCompBarchart/barchart';\nimport SeatCompBarchart from '../SeatCompBarchart/barchart';\nimport SeatHorseShoeChart from \"../SeatHorseShoeChart/horseshoe\";\nimport VotePredictionLineChart from \"../VotePredictionLineChart/voteprediction\";\n\nimport SpoiltBarChart from '../SpoiltBarchart/barchart';\nimport SplitNatProvChart from '../SplitNatProv/barchart';\n\nimport TurnoutBarchart from '../TurnoutBarchart/barchart';\nimport TurnoutMap from '../TurnoutMap/map';\n\nimport NavBar from '../NavBar/navbar';\nimport Map from '../Map/map';\n\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getSpoiltData,\n    getTurnoutDataForOneEvent,\n    getProgressVotesCount,\n    getVotesDataM,\n    getSeatsData\n} from \"../../api\";\n\nimport {\n    getRegionName,\n    getRegionName2,\n    getRegionName3,\n    triggerCustomEvent,\n    fetchDataFromOBJ,\n    handleRegionChange,\n\n    parseSpoiltVotesData,\n    parseTurnoutDataForOneEvent,\n    parseProgressVotesCount,\n    parseVotesData,\n    parseSeatsData,\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n    return className(config.CSS_PREFIX + originName);\n}\n\nclass QuickResultsWidget extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2019 National Election\",\n            nationalEventDescription: \"2019 National Election\",\n            provincialEventDescription: \"2019 Provincial Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"65010035\", // regionIecId\n            comp: \"votes-default\",\n            stylesheetFor: \"web\",\n            componentID: 5,\n            enableBarChart: true,\n            enableMap: true,\n            enableTurnoutProgressSpoilt: true,\n\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n            partyIecIds: [null, null, null, null],        \n            eventDescriptions: {\n                national : [\n                    \"2019 NATIONAL ELECTION\",\n                    \"2014 National Election\",\n                    \"22 Apr 2009 National Election\",\n                    \"14 Apr 2004 National Election\",\n                    //\"National Elections 1999\",\n                ],\n                provincial : [\n                    // \"Provincial Elections 1999\",\n                    \"2019 PROVINCIAL ELECTION\",\n                    \"2014 Provincial Election\",\n                    \"22 Apr 2009 Provincial Election\",\n                    \"14 Apr 2004 Provincial Election\",\n                ]\n            },\n            eventDescriptionsSplitNatProv: [\n                // \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                // \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                \"2014 Provincial Election\",\n                // \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            currentTurnout: 0,\n            currentCountingProg: 0,\n            currentSpoiltVotes: 0\n        }\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handleRegionChange = handleRegionChange.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    componentDidMount() {\n        var self = this;\n        this.refreshIntervalID = setInterval(() => {\n            self.fetchCurrentResultData();\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.addEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n\n        document.addEventListener(events.SEATS_ELECTEDS_EVENT, this.handleSeatsElectedsEvent); // \"seats-electeds-event\"\n\n        this.fetchCurrentResultData();\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.removeEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      this.fetchCurrentResultData()\n    }\n\n    handleSeatsElectedsEvent(event) {\n    }\n\n    fetchCurrentResultData() {\n        var self = this;\n        var newProps = JSON.parse(JSON.stringify(this.state));\n        var {comp, iecId} = this.state;\n\n        function dataLoadCallback(values) {\n            var spoiltData = values[0];\n            var turnoutData = values[1];\n            var progVotesData = values[2];\n\n            var parsedSpoiltData = parseSpoiltVotesData(spoiltData, newProps);\n            var parsedTurnoutData = parseTurnoutDataForOneEvent(turnoutData, newProps);\n            var parsedProgVotesData = parseProgressVotesCount(progVotesData, newProps);\n\n            var newState;\n            if (parsedTurnoutData[0] && parsedProgVotesData[0] && parsedSpoiltData[1]) {\n                newState = {            \n                    currentTurnout: parsedTurnoutData[0].percVoterTurnout,\n                    currentCountingProg: parsedProgVotesData[0].percent,\n                    currentSpoiltVotes: parsedSpoiltData[1].percent\n                };\n            } else {\n                newState = {            \n                    currentTurnout: 0,\n                    currentCountingProg: 0,\n                    currentSpoiltVotes: 0\n                };\n            }\n\n            if (comp == 'votes-comparisons') {\n                var votesData = values[3];\n                var parsedVotesData = parseVotesData(votesData, newProps);\n                newState.partyAbbrs = parsedVotesData.map(voteItem => voteItem.name);\n                newState.partyIecIds = parsedVotesData.map(voteItem => voteItem.iecId);\n            } else if (comp == 'seats-comparisons') {\n                var seatsData = values[3];\n                var parsedSeatsData = parseSeatsData(seatsData, newProps);\n                newState.partyAbbrs = parsedSeatsData.map(seatItem => seatItem.name);\n                newState.partyIecIds = parsedSeatsData.map(seatItem => seatItem.iecId);\n            }\n\n            if (newState.partyIecIds && newState.partyIecIds.join(\" \") != self.state.partyIecIds.join(\" \")) {\n                self.setState(newState);\n            } else {\n                if (self.refs.currentTurnout && self.refs.currentCountingProg && self.refs.currentSpoiltVotes) {\n                    self.refs.currentTurnout.innerHTML = newState.currentTurnout + \"%\";\n                    self.refs.currentCountingProg.innerHTML = newState.currentCountingProg + \"%\";\n                    self.refs.currentSpoiltVotes.innerHTML = newState.currentSpoiltVotes + \"%\";\n                }\n            }\n        }\n\n        if (newProps.regionType == \"municipality-vd\" && (!iecId || !iecId.length)) {\n            self.refs.currentTurnout.innerHTML = \"0%\";\n            self.refs.currentCountingProg.innerHTML = \"0%\";\n            self.refs.currentSpoiltVotes.innerHTML = \"0%\";\n            return;\n        }\n\n        // newProps.eventDescription = \"2019_mock1\";\n        var dataLoaders = [\n            getSpoiltData(newProps), \n            getTurnoutDataForOneEvent(newProps),\n            getProgressVotesCount(newProps),\n        ];\n\n        if (comp == 'votes-comparisons') {\n            dataLoaders.push(getVotesDataM(newProps));\n        }\n        if (comp == 'seats-comparisons') {\n            dataLoaders.push(getSeatsData(newProps));\n        }\n\n        Promise.all(dataLoaders)\n            .then(dataLoadCallback)\n            .catch(error => console.error(\"catched error\", error));\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var {\n            comp\n        } = this.state;\n        var self = this;\n        var zipfileName = `quick-results-widget-${comp.replace(/\\s/gi, '-')}(${getRegionName(self.state)})`;\n        var imageLoadPromises = [];\n        if (comp == 'votes-comparisons' || comp == 'seats-comparisons') {\n            imageLoadPromises = [\n                ...this.barchartInstances.map(instance => instance.exportAsPNGUri()),\n                this.mapInstance.exportAsPNGUri()\n            ];\n        } else {\n            imageLoadPromises = [\n                this.barchartInstance.exportAsPNGUri(), \n                this.mapInstance.exportAsPNGUri()\n            ];\n        }\n        Promise.all(imageLoadPromises).then(values => {\n            var zip = new window.JSZip();\n\n            var imgs = zip.folder(zipfileName);\n            values.forEach((element, idx) => {\n                imgs.file(`image${idx+1}.png`, element, {base64: true});\n            });\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `${zipfileName}.zip`);\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        if (newState.regionType == \"national\" && this.state.comp == \"votes-split\") {\n            newState.regionType = \"province\";\n            newState.provinceName = this.state.provinceName || \"Western Cape\";\n        }\n        this.setState(newState);\n\n        var triggerState = JSON.parse(JSON.stringify(newState));\n        triggerState.componentID = -1000;\n\n        triggerCustomEvent(events.CHART_PREVIEW, triggerState);\n        triggerCustomEvent(events.MAP_PREVIEW, triggerState);\n    };\n\n    renderTurnoutProgressSpoilt() {\n        var {\n            currentTurnout,\n            currentCountingProg,\n            currentSpoiltVotes,\n        } = this.state;\n\n        return (\n            <div className={cn(\"current-progress\")}>\n                <div className={cn(\"current-turnout\")}>\n                    <div>Turnout</div>\n                    <div ref=\"currentTurnout\">{currentTurnout}%</div>\n                </div>\n                <div className={cn(\"current-counting-progress\")}>\n                    <div>Counting Progress</div>\n                    <div ref=\"currentCountingProg\">{currentCountingProg}%</div>\n                </div>\n                <div className={cn(\"current-spoilt-votes\")}>\n                    <div>Spoilt Votes</div>\n                    <div ref=\"currentSpoiltVotes\">{currentSpoiltVotes}%</div>\n                </div>\n            </div>\n        )\n    }\n\n    renderQuickResultsTitle() {\n        var {\n            comp\n        } = this.state;\n        var self = this;\n        if (comp == 'votes-default') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    RACE FOR VOTES: <span className=\"regionName\">{getRegionName2(self.state)}</span>\n                </div>\n            );\n        }\n        if (comp == 'seats-default') {\n            return (\n                <div className={className(\"quick-results-title\")+\" \"+className(\"race-for-seats\")}>\n                    RACE FOR SEATS: <span className=\"regionName\">{getRegionName(self.state)}</span>(#SEATS)\n                </div>\n            );\n        }\n        if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    RACE FOR VOTES: TURNOUT - {getRegionName3(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-progress') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    COUNTING PROGRESS: {getRegionName(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-comparisons') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    VOTES COMPARISONS: {getRegionName(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'seats-comparisons') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    SEATS COMPARISONS: {getRegionName(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-myvd') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    Voting District //{getRegionName(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-split') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    {getRegionName(self.state)} Race for Votes - Split (Nat/Prov)\n                </div>\n            )\n        }\n        if (comp == 'votes-predictions') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    CSIR Vote and Turnout Predictions\n                </div>\n            )\n        }\n        return null;\n    }\n\n    renderMap() {\n        var {\n            comp,\n            iecId,\n            muniCode\n        } = this.state;\n        var mapState = JSON.parse(JSON.stringify(this.state));\n        if (comp == 'votes-myvd') {\n            if (iecId && iecId.length && muniCode && muniCode.length) {\n                mapState.disableNavigation = true;\n                return (\n                    <div className={className(\"map-container\")}>\n                        <Map\n                            ref={instance => { this.mapInstance = instance; }}\n                            key={comp}\n                            {...mapState}\n                            componentID={-1000}\n                        />\n                    </div>\n                );\n            }\n            return null;\n        }\n        if (comp == 'votes-split') {\n            mapState.disableNavigation = true;\n            mapState.regionType = \"national\";\n            return (\n                <div className={className(\"map-container\")}>\n                    <Map\n                        ref={instance => { this.mapInstance = instance; }}\n                        key={comp}\n                        {...mapState}\n                        componentID={-1000}\n                    />\n                </div>\n            );\n        } else if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"map-container\")}>\n                    <TurnoutMap\n                        ref={instance => { this.mapInstance = instance; }}\n                        key={comp}\n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        } else {\n            return (\n                <div className={className(\"map-container\")}>\n                    <Map\n                        ref={instance => { this.mapInstance = instance; }}\n                        key={comp}\n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n    }\n\n    renderBarchart() {\n        var {\n            comp,\n            partyIecIds,\n            partyAbbrs,\n            iecId\n        } = this.state;\n        if (comp == 'votes-default' || (comp == 'votes-myvd' && iecId && iecId.length)) {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <BarChart \n                        key={comp}\n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state} \n                        componentID={-1000}/>\n                </div>\n            );\n        }\n        if (comp == 'seats-default') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <SeatHorseShoeChart\n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <TurnoutBarchart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-progress') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <ProgressVotesPieChart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-predictions') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <VotePredictionLineChart\n                        ref={instance => { this.barchartInstance = instance; }}\n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-comparisons') {\n            var {numParties} = this.state;\n            this.barchartInstances = new Array(numParties);\n            return (\n                <div className={className(\"barchart-container\")}>\n                    {\n                        partyIecIds.map((partyIecId, partyIdx) => {\n                            return <VoteCompBarchart \n                                ref={instance => { this.barchartInstances[partyIdx] = instance; }} \n                                key={partyIdx}\n                                {...this.state}\n                                partyAbbr={partyAbbrs[partyIdx]}\n                                partyIecId={partyIecId}\n                                componentID={-1000}\n                            />\n                        })\n                    }\n                </div>\n            );\n        }\n        if (comp == 'seats-comparisons') {\n            this.barchartInstances = new Array(numParties);\n            return (\n                <div className={className(\"barchart-container\")}>\n                    {\n                        partyIecIds.map((partyIecId, partyIdx) => {\n                            return <SeatCompBarchart \n                                ref={instance => { this.barchartInstances[partyIdx] = instance; }} \n                                key={partyIdx}\n                                {...this.state}\n                                partyAbbr={partyAbbrs[partyIdx]}\n                                partyIecId={partyIecId}\n                                componentID={-1000}\n                            />\n                        })\n                    }\n                </div>\n            );\n        }\n        if (comp == 'votes-split') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <SplitNatProvChart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000}\n                    />\n                </div>\n                \n            )\n        }\n        return null;\n    }\n\n    renderMyVDEnterForm() {\n        var {comp} = this.state;\n        if (comp != 'votes-myvd') {\n            return null;\n        }\n        return (\n            <div className=\"voting-district-enter-form\">\n                <input ref=\"vdInput\" type=\"text\" placeholder=\"Enter your VD number\"/>\n                <button onClick={this.onShowVDResult.bind(this)}> Show Result</button>\n                <p className=\"iec-link\">Look up your voting district number at the <a href=\"http://maps.elections.org.za/vsfinder/\">IEC</a>.</p>\n            </div>\n        )\n    }\n\n    onShowVDResult() {\n        if (this.refs.vdInput.value.length == 0) {\n            alert(\"please enter valid vd number\");\n            return;\n        }\n        var newState = {\n            regionType: \"municipality-vd\",\n            iecId: this.refs.vdInput.value,\n            muniCode: \"\"\n        }\n        triggerCustomEvent(events.REGION_CHANGE, newState);\n    }\n\n    render() {\n        var {\n            stylesheetFor,\n        } = this.state;\n\n        var components = [];\n        components.push(this.renderQuickResultsTitle())\n        if (this.state.enableTurnoutProgressSpoilt) {\n            components.push(this.renderTurnoutProgressSpoilt())\n        }\n        components.push(this.renderMyVDEnterForm())\n\n        if (this.state.enableBarChart)\n          components.push(this.renderBarchart())\n\n        if (this.state.enableMap)\n          components.push(this.renderMap())\n\n        return (\n            <div className={className(\"quickresultswidget\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"row\")}>\n                    <div className={cn(\"col-md-4\")+\" \"+className(\"main-left-part\")}>\n                        <NavBar {...this.state}/>\n                    </div>\n                    <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                        {components}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuickResultsWidget;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName, formatClassNameFromString} from \"../../utils\";\nimport config from \"../../config\"\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", options.viewBox || (\"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset)))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      // svg.append(\"text\")\n      //   .attr(\"text-anchor\", \"end\")\n      //   .attr(\"x\", width)\n      //   .attr(\"y\", 40)\n      //   .text(options.usedValue);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(groupChartData.map(item => d3.max(item.data, function(d) { return parseFloat(options.yValue(d)); }))) + 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(groupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.partyAbbr)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append('rect')\n        .attr('class', className(config.CSS_PREFIX + \"grouprect\"))\n        .attr('x', -x.bandwidth()*1/12)\n        .attr('y', YaxisOffset - 85)\n        .attr('width', x.bandwidth()*5/6)\n        .attr('height', 120 + height - YaxisOffset);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"baraxistext-container\");\n      \n      for (var i = 0; i < groupChartData.length; i ++) {\n        var partyAbbr = groupChartData[i].partyAbbr;\n        var chartData = groupChartData[i].data;\n\n        var subX = d3.scaleBand()\n          .rangeRound([0, x.bandwidth()*2/3])\n          .domain(chartData.map(function (d) {\n            return d.name;\n          }));\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(partyAbbr)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n        var barAxisTextSvg = groupSvg.select(\".baraxistext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n    \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", function (d, i) {\n              return subX(d.name)+subX.bandwidth()/4;\n            })\n            .attr(\"width\", subX.bandwidth()*1/2)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d)));\n            })\n            .attr(\"height\", function (d) {\n              return height - y(Number(options.yValue(d)));\n            })\n            \n\n          var barAxisTexts = barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barAxisTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barAxisTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) + 18;\n            })\n          barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return /(19|20)\\d{2}/g.exec(d.name)[0];\n            });\n            \n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return options.yValueFormat(options.yValue(d));\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d))) - 5;\n            })\n      }\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true,\n  viewBox: '45 0 655 340'\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 12\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n      \n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Seats Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Seats Comparison - ${getNationOrProvinceName(props)}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName, formatClassNameFromString} from \"../../utils\";\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(d.delta);\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(d.delta);\n        }\t\n      }\n\n      var newGroupChartData = groupChartData.map(item => {\n        var chartData = item.data;\n        return {\n          ...item,\n          data: [{\n            ...chartData[1],\n            delta: options.yValue(chartData[1]) - options.yValue(chartData[0])\n          }]\n        }\n      });\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [-100, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(newGroupChartData.map(item => parseFloat(item.data[0].delta))) + 1\n        minMaxY[0] = d3.min(newGroupChartData.map(item => parseFloat(item.data[0].delta))) - 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(newGroupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.partyAbbr)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n      \n      for (var i = 0; i < newGroupChartData.length; i ++) {\n        var partyAbbr = newGroupChartData[i].partyAbbr;\n        var deltaData = newGroupChartData[i].data;\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(partyAbbr)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData);\n\n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", x.bandwidth()/6)\n            .attr(\"width\", x.bandwidth()*1/3)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return Math.min(y(Number(d.delta)), y(0));\n            })\n            .attr(\"height\", function (d) {\n              return Math.abs(y(Number(d.delta)) - y(0));\n            })\n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return x.bandwidth()/3;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"12px\")\n            .attr(\"y\", function(d) {\n              if (d.delta > 0)\n                return y(0) - 5;\n              return y(0) + 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData)\n            .text(function(d) {\n              return options.yValueFormat(d.delta);\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              var barTextYDelta = 0;\n              if (d.delta > 0) {\n                barTextYDelta = -5;\n              } else {\n                barTextYDelta = 15;\n              }\n              return y(Number(d.delta)) + barTextYDelta;\n            })\n      }\n\n      svg.selectAll(\".xAxisLine\").remove();\n      var axisThick = 2;\n      svg.append('line')\n        .attr('class', 'xAxisLine')\n        .attr('stroke-width', axisThick)\n        .attr('stroke', \"currentColor\")\n        .attr('x1', XaxisOffset)\n        .attr('y1', y(0)-axisThick/2)\n        .attr('x2', width)\n        .attr('y2', y(0)-axisThick/2)\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 13\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-swing-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"deltabarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getNationOrProvinceName(props)}: Swing ${years}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 14\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n      \n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Votes Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Votes Comparison - ${getRegionName(props)}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => (value > 0? '+': '') + (value.toFixed(2)) + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 15\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-swing-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"deltabarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      \n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getRegionName(props)}: Swing ${years}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed,\n  QuickResultsWidget,\n  QuickResultsWidgetEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <QuickResultsWidget stylesheetFor={\"tv\"} eventDescription={\"2019 NATIONAL ELECTION\"} nationalEventDescription={\"2019 NATIONAL ELECTION\"} provincialEventDescription={\"2019 PROVINCIAL ELECTION\"} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}