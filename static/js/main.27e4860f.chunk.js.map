{"version":3,"sources":["config/index.js","utils/index.js","components/BarChart/d3barchart.js","events/index.js","api/config.js","api/race-for-seats.js","api/index.js","components/BarChart/barchart.js","api/race-for-votes.js","components/BarChart/barchartEmbed.js","components/RaceForSeatBarchart/barchart.js","components/RaceForSeatBarchart/barchartEmbed.js","components/SpoiltBarchart/barchart.js","api/spoilt.js","components/SpoiltBarchart/barchartEmbed.js","components/Map/map.js","components/Map/mapEmbed.js","components/TurnoutMap/map.js","api/turnout.js","components/TurnoutMap/mapEmbed.js","components/TurnoutBarchart/barchart.js","components/TurnoutBarchart/barchartEmbed.js","components/BarchartWithNavMap/barchartMap.js","components/BarchartWithNavMap/barchartMapEmbed.js","components/ProgVotesCountPiechart/d3piechart.js","components/ProgVotesCountPiechart/piechart.js","api/prog-votescount.js","components/NavBar/navbar.js","components/QuickResultsWidget/quickResultsWidget.js","components/QuickResultsWidget/quickResultsWidgetEmbed.js","components/ProgVotesCountPiechart/piechartEmbed.js","components/SeatCompBarchart/barchart.js","components/SeatCompBarchart/barchartEmbed.js","components/SeatHorseShoeChart/d3horseshoe.js","components/SeatHorseShoeChart/horseshoe.js","components/SeatHorseShoeChart/horseshoeEmbed.js","components/VoteCompBarchart/barchart.js","components/VoteCompBarchart/barchartEmbed.js","App.js","serviceWorker.js","index.js"],"names":["config","DOMAIN","CSS_PREFIX","calcPercent","a","b","toFixed","parseVotesComparisonData","data","props","regionType","edges","map","edge","nodeData","partyResults","result","filter","node","partyAbbr","el","name","percOfVotes","partyInfo","eventDescriptions","indexOf","parseSeatsData","seats","slice","numParties","getRegionName","state","beautifiedMuniName","muniName","split","provinceName","iecId","getSubRegionName","properties","SPROVINCE","smunicipal","SMUNICIPAL","getNationOrProvinceName","createTooltip","className","tooltipClassName","document","getElementsByClassName","d3","concat","append","attr","style","getMunicipalityCode","code","replace","fixMapLabelIntersect","i","labelElements","regions","overlapCnt","length","getBoundingClientRect","j","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","triggerCustomEvent","eventName","eventParam","event","CustomEvent","detail","dispatchEvent","Chart","container","width","height","options","chartType","yAxisLabel","yValue","d","yValueFormat","value","selectAll","remove","predefColors","svg","classed","tooltipDiv","x","rangeRound","y","text","barSvg","barTextSvg","errorText","this","draw","chartData","colorsData","partyColorByName","noXaxisByParty","partyColorsData","forEach","colour","domain","minMaxY","dynamicYAxisFromValues","select","transition","duration","call","ticks","tickFormat","bars","exit","enter","bandwidth","getFillColor","on","html","toLowerCase","l","toUpperCase","getTooltipText","pageX","pageY","Number","barTexts","partyName","getFillColorFromPartyName","destroy","events","REGION_CHANGE","CHART_PREVIEW","MAP_PREVIEW","QUICK_RESULTS_PREVIEW","EXPORT_PNG","client","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","getSeatsData","eventDescription","query","gql","_templateObject3","_templateObject4","getElectionEvents","api_templateObject","getPartyColors","api_templateObject2","chart","originName","styles","refreshIntervalID","chartOptions","BarChart","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","assertThisInitialized","muniCode","_this$getWidthHeightB","getWidthHeightByScreenSize","modifW","modifH","exportAsPNG","bind","exportAsPNGUri","handleRegionChange","handlePreviewEvent","self","getContainer","setInterval","addEventListener","removeEventListener","clearInterval","Math","min","body","clientWidth","svgToPng","saveSvgAsPng","refs","vizcontainer","childNodes","Promise","resolve","reject","svgAsPngUri","newState","setState","react_default","createElement","ref","dataLoaders","_templateObject5","_templateObject6","_templateObject7","_templateObject8","getVotesDataM","partyColorsLoader","push","all","then","values","votesData","drawGraph","catch","error","console","firstEdge","sort","validVotes","parseVotesData","parseInt","Component","provincesData","abbreviation","munis","originClassName","bootstrapStyles","seatsData","percent","spoilt_templateObject","spoilt_templateObject2","spoilt_templateObject3","spoilt_templateObject4","getSpoiltData","spoiltData","parseSpoiltVotesData","Valid","Spoilt","regionColor","Map","disableNavigation","stylesheetFor","rect","rendercanvas","canvg","ignoreDimensions","scaleWidth","scaleHeight","toDataURL","e","canvas","filename","lnk","download","href","createEvent","initMouseEvent","window","fireEvent","loading","_this$state","react_loading_default","type","color","nationalMapFile","fullRouteGeoJsonFile","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","getLoadingSpinner","h","_templateObject9","_templateObject10","_templateObject11","getMainParties","geoJsonData","locationToMainParty","parseMainPartyData","jsonDataFeatures","partyAbbrByName","getMainPartyName","PKLVDNUMBE","objects","topojson","features","projection","fitSize","path","parties","availableCnt","party","legends","getLegendXY","center","projectionCenter","geometry","polylabel","coordinates","w","muniImuniCodeD","turnout_templateObject","turnout_templateObject2","muniRegName","turnout_templateObject3","getTurnoutData","locationToTurnout","percVoterTurnout","parseTurnoutData","getFillColorFromTurnout","turnout","getTurnout","it","eventType","turnout_templateObject4","turnout_templateObject5","turnout_templateObject6","turnout_templateObject7","getTurnoutDataForAllEvents","turnoutData","parseTurnoutDataForAllEvents","margin","category","floatFormat","key","random","radius","pie","arc","outerRadius","innerRadius","cornerRadius","padAngle","toolTip","selection","tip","toolTipHTML","arcTween","_current","t","colorsDataP","updatePath","data0","data1","each","m","k","findPreceding","startAngle","endAngle","n","findFollowing","findNeighborArc","attrTween","PieChart","prog_votescount_templateObject","prog_votescount_templateObject2","prog_votescount_templateObject3","prog_votescount_templateObject4","getProgressVotesCount","progressVotesData","totalCount","count","parseProgressVotesCount","Completed","Not Completed","cssPrefix","metrosData","CustomLink","onClick","hasSubMenu","toggleSubMenu","activateMe","newLocation","to","selectedMenuLabel","label","children","React","NavBar","_this2","activeLinkId","handleNavBarSelection","getElementById","id","rel","head","appendChild","navbar","target","classList","passInfo","selectionData","preventDefault","content","icon","province","metro","join","react_metismenu_lib_default","LinkComponent","QuickResultsWidget","comp","EXPORT_SUPERWIDGET_PNG","zipfileName","imageLoadPromises","votesInstance1","votesInstance2","seatsInstance1","seatsInstance2","turnoutInstance1","turnoutInstance2","progressInstance1","progressInstance2","spoiltInstance1","spoiltInstance2","log","zip","JSZip","imgs","folder","file","base64","generateAsync","saveAs","NavBar_navbar","BarChart_barchart","assign","instance","Map_map","RaceForSeatBarchart_barchart","TurnoutBarchart_barchart","TurnoutMap_map","ProgVotesCountPiechart_piechart","SpoiltBarchart_barchart","mainSvg","originChartData","totalSeats","rows","poslist","J","R","angle","Totals","PI","asin","sin","cos","onMouseMove","onMouseOut","Counter","partySvg","pythonConvertedCode","App","QuickResultsWidget_quickResultsWidget","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27e4860f.chunk.js","sourcesContent":["var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\",\n    \"CSS_PREFIX\": \"ELVIZ_\"\n}\n\nexport default config;","import * as d3 from \"d3\";\nimport config from \"../config\";\n\nfunction calcPercent(a, b) {\n  if (b == 0) {\n    return 0;\n  } else {\n    return (a/b*100).toFixed(2);\n  }\n}\n\nexport function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n    results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n\n    results = results.slice(0, props.numParties);\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            validVotes: el[\"validVotes\"],\n            percOfVotes: el[\"percOfVotes\"],\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function parseVotesComparisonData(data, props) {\n  var results, edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else { //\"municipality-vd\"\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n\n  var partyfilter_edges = edges.map(edge => {\n    var nodeData = edge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"].filter(a => a.node[\"party\"][\"abbreviation\"] == props.partyAbbr);\n    var result = results[0];\n    if (result) {\n      var el = result[\"node\"];\n      return {\n          name: nodeData[\"event\"][\"description\"],\n          percOfVotes: el[\"percOfVotes\"],\n          partyInfo: el[\"party\"]\n      }\n    }\n    return {\n      name: nodeData[\"event\"][\"description\"],\n      percOfVotes: 0,\n      partyInfo: null\n    }\n  });\n  return partyfilter_edges.filter(edge => props.eventDescriptions.indexOf(edge.name) != -1 && edge.partyInfo != null)\n}\n\nexport function parseVotesComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map(partyAbbr => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    return {\n      partyAbbr,\n      data: parseVotesComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseProgressVotesCount(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"progress votes count data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Completed\",\n      percent: calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdWithResultsCaptured\"]\n    }, {\n      name: \"Not Completed\",\n      percent: 100 - calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdCount\"] - nodeData[\"vdWithResultsCaptured\"]\n    }\n  ]\n}\n\n// export function parseMainPartyData(data, props) {\n//     if (!data)  return null;\n//     var locationToMainParty = {};\n//     var edges;\n//     var regionType = props.regionType;\n//     var sort_results = function(party_results) {\n//         party_results[\"edges\"] = party_results[\"edges\"].sort(function(a, b) {\n//             return b.node.percOfVotes - a.node.percOfVotes;\n//         })\n//         return party_results;\n//     }\n//     if (regionType === \"national\") {\n//         edges = data[\"data\"][\"allProvincialBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var provinceName = node[\"location\"][\"name\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[provinceName] = partyName;\n//         })\n//     } else if (regionType === \"province\") {\n//         edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var muniCode = node[\"location\"][\"code\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[muniCode] = partyName;\n//         })\n//     } else {// \"municipality\"\n//         edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var iecId = node[\"location\"][\"iecId\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[iecId] = partyName;\n//         })\n//     }\n//     return locationToMainParty;\n// }\n\n\n\nexport function parseMainPartyData(data, props) {\n  if (!data)  return null;\n  var locationToMainParty = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"topPartiesByProvince\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[provinceName] = partyName;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"topPartiesByMunicipality\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[muniCode] = partyName;\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"topPartiesByVotingDistrict\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var partyName = node[\"topParty\"][\"party\"][\"name\"];\n          locationToMainParty[iecId] = partyName;\n      })\n  }\n  return locationToMainParty;\n}\n\nexport function parseSeatsData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"abbreviation\"],\n      partyInfo: node[\"party\"]\n    }\n  })\n  \n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return results.slice(0, props.numParties);\n}\n\nexport function parseSeatsComparisonData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"event\"][\"description\"],\n      partyInfo: node[\"party\"]\n    }\n  }).filter(result => result.partyInfo[\"abbreviation\"] == props.partyAbbr)\n  .filter(result => props.eventDescriptions.indexOf(result.name) != -1)\n  \n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return results;\n}\n\nexport function parseTurnoutData(data, props) {\n  if (!data)  return null;\n  var locationToTurnout = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[provinceName] = percVoterTurnout;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[muniCode] = percVoterTurnout;\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"]; \n          locationToTurnout[iecId] = percVoterTurnout;\n      })\n  }\n  return locationToTurnout;\n}\n\nexport function parseTurnoutDataForAllEvents(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"]; \n    return {\n      name: event,\n      percVoterTurnout\n    }\n  }).filter(edge => edge.name.toLowerCase().indexOf(props.eventType) != -1)\n}\n\nexport function parseSpoiltVotesData(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"spoilt data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Valid\",\n      percent: calcPercent(nodeData[\"totalValidVotes\"], nodeData[\"totalVotesCast\"])\n    }, {\n      name: \"Spoilt\",\n      percent: calcPercent(nodeData[\"spoiltVotes\"], nodeData[\"totalVotesCast\"])\n    }\n  ]\n}\n\nexport function getRegionName(state) {\n  function beautifiedMuniName(muniName) {\n    if (muniName.indexOf(\" - \") != -1) {\n        muniName = muniName.split(\" - \")[1];\n    }\n    if (muniName.indexOf(\"[\") != -1) {\n        muniName = muniName.split(\"[\")[0];\n    }\n    return muniName;\n  }\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  if (state.regionType == \"province\") {\n    return state.provinceName;\n  }\n  if (state.regionType == \"municipality\") {\n    return beautifiedMuniName(state.muniName);\n  }\n  if (state.regionType == \"municipality-vd\") {\n    return beautifiedMuniName(state.muniName) + \"-\" + state.iecId;\n  }\n}\n\nexport function getSubRegionName(properties, state) {\n  if (state.regionType === \"national\") {\n      return properties.SPROVINCE;\n  } else if (state.regionType === \"province\") {\n      return properties.smunicipal && properties.smunicipal.split(\" - \")[1].split(\"[\")[0]; \n  } else {//municipality\n      return properties.SMUNICIPAL && properties.SMUNICIPAL.split(\" - \")[1].split(\"[\")[0]; \n  }\n}\n\nexport function getNationOrProvinceName(state) {\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  return state.provinceName;\n}\n\nexport function createTooltip(className) {\n  var tooltipClassName = className(config.CSS_PREFIX + \"tooltip\")\n  if (document.getElementsByClassName(tooltipClassName)[0]) {\n    return d3.select(`.${tooltipClassName}`);\n  } else {\n    return d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", tooltipClassName)\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n}\n\nexport function getMunicipalityCode(properties) {\n  return properties.code || (properties.smunicipal && properties.smunicipal.split(\" - \")[0].replace(/\\s/g, \"\"));\n}\n\nexport function fixMapLabelIntersect() {\n  var labelElements = document.getElementsByClassName(\"place-label\");\n  var regions = {};\n  var overlapCnt = {};\n  var i;\n\n  for (i = 0; i < labelElements.length; i ++) {\n      regions[i] = labelElements[i].getBoundingClientRect();\n  }\n\n  for (i = 0; i < labelElements.length; i ++) {\n      for (var j = 0; j < i; j ++) {\n          var rect1 = regions[i];\n          var rect2 = regions[j];\n          var overlap = !(rect1.right < rect2.left || \n              rect1.left > rect2.right || \n              rect1.bottom < rect2.top || \n              rect1.top > rect2.bottom);\n          if (overlap) {\n              overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n          }\n      }\n      if (overlapCnt[i] > 2) {\n          labelElements[i].setAttribute(\"opacity\", 0)\n      } else if (overlapCnt[i] > 0){\n          labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n      } else {\n\n      }\n  }\n}\n\nexport function triggerCustomEvent(eventName, eventParam) {\n  var event = new CustomEvent(eventName, { detail: eventParam });\n  document.dispatchEvent(event);\n}","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\nimport { type } from \"os\";\nimport config from \"../../config\";\n\nexport function Chart(container, width, height, className, options) {\n\n\n  if (!options) {\n    options = {};\n  } \n  if (!options.chartType) {\n    options.chartType = \"Race For Votes\";\n  }\n  if (!options.yAxisLabel) {\n    options.yAxisLabel = \"PERCENTAGE VOTES\";\n  }\n  if (!options.yValue) {\n    options.yValue = function(d) {\n      return d.percOfVotes;\n    }\n  }\n  if (!options.yValueFormat) {\n    options.yValueFormat = function(value) {\n      return value + '%';\n    }\n  }\n\n  width = 700;\n  height = 200;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 20;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(config.CSS_PREFIX + \"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(options.yAxisLabel)\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(chartData, colorsData) {\n\n      if (!chartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n      if (options.noXaxisByParty) {\n\n      } else {\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n          })\n        }\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n        if (options.noXaxisByParty) {\n          if (typeof colorsData == \"object\")\n            return colorsData[d.name];\n          if (typeof colorsData == \"function\")\n            return colorsData(d, i);\n          return colorsData;\n        } else {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n        }\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          function formatPartyName(name) {\n            return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n          }\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(chartData, function(d) { return options.yValue(d); })\n      }\n      y.domain(minMaxY);\n  \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => getFillColor(d, i))\n          .on(\"mousemove\", function(d, i) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              tooltipDiv.html(getTooltipText(d, i))\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .attr(\"fill\", (d, i) => getFillColor(d, i))\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d)));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(options.yValue(d)));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .text(function(d) {\n            return options.yValueFormat(options.yValue(d));\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d))) - 5;\n          })\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","const REGION_CHANGE = \"region-change\";\nconst CHART_PREVIEW = \"chart-preview\";\nconst MAP_PREVIEW = \"map-preview\";\nconst QUICK_RESULTS_PREVIEW = \"quick-results-preview\"\nconst EXPORT_PNG = \"export-png\";\nconst EXPORT_SUPERWIDGET_PNG = \"export-superwidget-png\";\n\nexport default {\n    REGION_CHANGE,\n    CHART_PREVIEW,\n    MAP_PREVIEW,\n    QUICK_RESULTS_PREVIEW,\n    EXPORT_PNG\n};","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\nvar API_URI = \"https://elections2019.xyz/graphql\";\n\n\nconst client = new ApolloClient({\n    link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n    cache: new InMemoryCache()\n  })\n\nexport {\n    API_URI,\n    client\n}","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getSeatsDataForComparison(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            party_Event_Description_Icontains:\"national\",\n            orderBy:[\"-national_pr\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  } else { //  if (options.regionType == \"province\")\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(province_Name:\"${options.provinceName}\", orderBy:[\"-regional\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  }\n}\n\n\nexport function getSeatsData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(party_Event_Description:\"${eventDescription}\", orderBy:[\"-national_pr\"]){\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    } else { //  if (options.regionType == \"province\")\n      eventDescription = eventDescription.replace(\"National\", \"Provincial\");\n      eventDescription = eventDescription.replace(\"NATIONAL\", \"PROVINCIAL\");\n      eventDescription = eventDescription.replace(\"national\", \"provincial\");\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(province_Name:\"${options.provinceName}\", party_Event_Description:\"${eventDescription}\", orderBy:[\"-regional\"]){\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport {getSeatsData, getSeatsDataForComparison} from \"./race-for-seats\"\nexport {getVotesDataM, getVotesDataForComparison, getMainParties} from \"./race-for-votes\"\nexport {getTurnoutData, getTurnoutDataForAllEvents} from \"./turnout\"\nexport {getSpoiltData} from \"./spoilt\"\nexport {getProgressVotesCount} from \"./prog-votescount\"\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            abbreviation\n            colour\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getProvincesData() {\n  var provincesData = [\n      {\n          \"name\": \"Limpopo\",\n          \"abbreviation\": \"LIM\",\n          \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n      },\n      {\n          \"name\": \"Mpumalanga\",\n          \"abbreviation\": \"MP\",\n          \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n      },\n      {\n          \"name\": \"Gauteng\",\n          \"abbreviation\": \"GT\",\n          \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n      },\n      {\n          \"name\": \"KwaZulu-Natal\",\n          \"abbreviation\": \"KZN\",\n          \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n      },\n      {\n          \"name\": \"North West\",\n          \"abbreviation\": \"NW\",\n          \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n      },\n      {\n          \"name\": \"Free State\",\n          \"abbreviation\": \"FS\",\n          \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n      },\n      {\n          \"name\": \"Eastern Cape\",\n          \"abbreviation\": \"EC\",\n          \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n      },\n      {\n          \"name\": \"Northern Cape\",\n          \"abbreviation\": \"NC\",\n          \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHâI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n      },\n      {\n          \"name\": \"Western Cape\",\n          \"abbreviation\": \"WC\",\n          \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n      }\n  ]\n  return provincesData;\n}\n\nexport function getMetrosData() {\n  var metrosData = [\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},\n    {\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},\n    {\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},\n    {\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"},\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}\n  ]\n  return metrosData;\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataM,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesData,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\n\n\nvar chart;\nvar partyColorsData;\nvar refreshIntervalID = 0;\n\nvar chartOptions = {\n  chartType: \"Race For Votes\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%'\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.width && props.height) {\n        this.state.width = props.width;\n        this.state.height = props.height;\n      } else {\n        var {\n          modifW,\n          modifH\n        } = this.getWidthHeightByScreenSize();\n        this.state.width = modifW;\n        this.state.height = modifH;\n      }\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (chart) {\n        chart.destroy();\n        chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(refreshIntervalID);\n    }\n\n    getWidthHeightByScreenSize() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/3.5;\n      return {\n        modifW,\n        modifH\n      }\n    }\n\n    exportAsPNG(event) {\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      return (\n          <div className={className(\"barchart\")}>\n            <div className={className(config.CSS_PREFIX + \"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataM(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesData(data, props);\n       \n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className);\n        chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getVotesDataForComparison(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots{\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          location_Name:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          location_Province_Name:\"${options.provinceName}\", \n          location_Code: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n          location_IecId:\"${options.iecId}\", \n          location_Ward_Municipality_Code:\"${options.muniCode}\"\n        ) {\n          edges{\n            node{\n              event {\n                description\n              }\n              location {\n                iecId\n              }\n              partyResults {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getVotesDataM(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\", \n            location_Code: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event_Description:\"${eventDescription}\",\n            location_IecId:\"${options.iecId}\", \n            location_Ward_Municipality_Code:\"${options.muniCode}\"\n          ) {\n            edges{\n              node{\n                location {\n                  iecId\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                      }\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n  \n  // export function getMainParties(options) {\n  //   var eventDescription = options.eventDescription;\n  //   if (!eventDescription)\n  //     return;\n  //   if (options.regionType == \"national\") {\n  //     return client.query({\n  //       query: gql`\n  //       {\n  //         allProvincialBallots(\n  //           event_Description:\"${eventDescription}\"\n  //         ){\n  //           edges{\n  //             node{\n  //               partyResults {\n  //                 edges{\n  //                   node{\n  //                     validVotes\n  //                     percOfVotes\n  //                     party {\n  //                       id\n  //                       name\n  //                       abbreviation\n  //                     }\n  //                   }\n  //                 }\n  //               }\n  //               location {\n  //                 id\n  //                 name\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //       `\n  //     })\n  //   } else if (options.regionType == \"province\") {\n  //     return client.query({\n  //       query: gql`\n  //       {\n  //         allMunicipalBallots(\n  //           event_Description:\"${eventDescription}\",\n  //           location_Province_Name:\"${options.provinceName}\"\n  //         ) {\n  //           edges{\n  //             node {\n  //               partyResults {\n  //                 edges{\n  //                   node{\n  //                     party {               \n  //                       name\n  //                       abbreviation\n  //                     }\n  //                     validVotes\n  //                     percOfVotes\n  //                   }\n  //                 }\n                  \n  //               }\n  //               location {\n  //                 code\n  //                 name\n  //                 longName\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //       `\n  //     })\n  //   } else if (options.regionType == \"municipality\") {\n  //     var muniRegName = options.muniName.split(\" - \")[1];\n  //     console.log(options.regionType, options.muniName, muniRegName);\n  //       return client.query({\n  //         query: gql`\n  //         {\n  //           allVotingDistrictBallots( \n  //           event_Description:\"${eventDescription}\",\n  //           location_Ward_Municipality_Code:\"${options.muniCode}\") {\n  //             edges{\n  //               node{\n  //                 location {\n  //                   iecId\n  //                 }\n  //                 partyResults {\n  //                   edges{\n  //                     node{\n  //                       party{\n  //                         name\n  //                         abbreviation\n  //                       }\n  //                     }\n  //                   }  \n  //                 }\n  //               }\n  //             }\n  //           }\n  //         }\n  //         `\n  //       })\n  //   }\n  // }\n\n\n  export function getMainParties(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByProvince(location_Country_Event_Description:\"${eventDescription}\") {\n            edges {\n              node {\n                location{\n                  id\n                  name\n                }\n                totalVotesCast\n                topParty{\n                  validVotes\n                  percOfVotes\n                  party {\n                      id\n                      name\n                      abbreviation\n                  }\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByMunicipality(\n            location_Province_Country_Event_Description:\"${eventDescription}\", \n            location_Province_Name:\"${options.provinceName}\") {\n            \n            edges {\n              node {\n                location{\n                    code\n                    name\n                    longName\n                }\n                totalVotesCast\n                topParty{\n                  party {               \n                    name\n                    abbreviation\n                  }\n                  validVotes\n                  percOfVotes\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniRegName = options.muniName.split(\" - \")[1];\n        return client.query({\n          query: gql`\n          {\n            topPartiesByVotingDistrict(\n              location_Ward_Municipality_Province_Country_Event_Description:\"${eventDescription}\", \n              location_Ward_Municipality_Province_Name:\"${options.provinceName}\",\n              location_Ward_Municipality_Code: \"${options.muniCode}\"\n            ) {\n              \n              edges {\n                node {\n                  location{\n                    iecId\n                  }\n                  topParty{\n                    party{\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar chart;\nvar partyColorsData;\nvar refreshIntervalID = 0;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.width && props.height) {\n        this.state.width = props.width;\n        this.state.height = props.height;\n      } else {\n        var {\n          modifW,\n          modifH\n        } = this.getWidthHeightByScreenSize();\n        this.state.width = modifW;\n        this.state.height = modifH;\n      }\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(refreshIntervalID);\n    }\n\n    getWidthHeightByScreenSize() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/3.5;\n      return {\n        modifW,\n        modifH\n      }\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n        \n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      return (\n          <div className=\"barchart\">\n            <div className={className(config.CSS_PREFIX + \"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className, chartOptions);\n        \n        chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n\n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSpoiltData\n} from \"../../api\";\nimport {\n  parseSpoiltVotesData,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Spoilt vs Valid Votes',\n  yAxisLabel: 'PERCENTAGE VOTES',\n  noXaxisByParty: true,\n  yValue: d => d.percent,\n  yValueFormat: value => value + '%'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar chart;\nvar refreshIntervalID = 0;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.width && props.height) {\n        this.state.width = props.width;\n        this.state.height = props.height;\n      } else {\n        var {\n          modifW,\n          modifH\n        } = this.getWidthHeightByScreenSize();\n        this.state.width = modifW;\n        this.state.height = modifH;\n      }\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(refreshIntervalID);\n    }\n\n    getWidthHeightByScreenSize() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/3.5;\n      return {\n        modifW,\n        modifH\n      }\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `spoilt-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      return (\n          <div className=\"barchart\">\n            <div className={className(config.CSS_PREFIX + \"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var spoiltDataLoader = getSpoiltData(props);\n      var dataLoaders = [spoiltDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var spoiltData = values[0];\n        self.drawGraph(container, props, spoiltData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseSpoiltVotesData(data, props);\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className, chartOptions);\n        \n        chart.draw(chartData, {\n          \"Valid\": \"rgb(0,255,0)\",\n          \"Spoilt\": \"rgb(255,0,0)\"\n        });\n    }\n}\n\nexport default BarChart;\n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getSpoiltData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                    id\n                    name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                event_Description:\"${eventDescription}\",\n                location_Province_Name:\"${options.provinceName}\", \n                location_Code: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    code\n                    name\n                    longName\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n                event_Description:\"${eventDescription}\",\n                location_IecId:\"${options.iecId}\", \n                location_Ward_Municipality_Code:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n  ","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showSpoiltBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport svgToPng from \"save-svg-as-png\";\nimport canvg from \"canvg\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors,\n    getProvincesData\n} from \"../../api\";\nimport {\n  parseMainPartyData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar provincesData = getProvincesData();\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"tv\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      this.getContainer().selectAll(\"svg\").remove();\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state)\n    }\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n    \n            // var ctx = rendercanvas.getContext(\"2d\");\n            // ctx.globalCompositeOperation = \"source-out\";\n            // ctx.fillStyle = \"#ffffff\";\n            // ctx.fillRect(0, 0, rect.width, rect.height);\n\n            canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n        // var ctx = rendercanvas.getContext(\"2d\");\n        // ctx.globalCompositeOperation = \"source-in\";\n        // ctx.fillStyle = \"#ffffff\";\n        // ctx.fillRect(0, 0, rect.width, rect.height);\n\n        var canvas = rendercanvas, filename = `race-for-votes-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\")+\" \"+className(`${config.CSS_PREFIX}stylesheet-${stylesheetFor}`)}>\n                <div className={className(config.CSS_PREFIX + \"map-title\")}>{getRegionName(this.state)}</div>\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={className(config.CSS_PREFIX + \"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(provinceName) {\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[provinceName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.provinceName);\n                case \"municipality\":\n                    return self.state.muniCode + \".topojson\";\n                default:\n                    return null;\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        Promise.all(dataLoaders).then(function(values){ \n            var geoJsonData = values[0];\n            var locationToMainParty = parseMainPartyData(values[1], props);\n            partyColorsData = partyColorsData || values[2];  \n\n            var partyColorByName = {};\n            var partyAbbrByName = {};\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n              partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                partyColorByName[edge.node.name] = edge.node.colour;\n                partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n              })\n            }            \n\n            function getFillColorFromPartyName(partyName) {\n              if (!partyName)\n                return regionColor;\n              return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n            }\n\n            function getMainPartyName(d, i) {\n                var partyName;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    partyName = locationToMainParty[provinceName];\n                } else if (regionType === \"province\") {\n                    var muniCode = getMunicipalityCode(d.properties);\n                    partyName = locationToMainParty[muniCode];\n                } else {// \"municipality\"\n                    function getMunicipalityiecId(properties) {\n                        return properties.PKLVDNUMBE;\n                    }\n                    var iecId = getMunicipalityiecId(d.properties);\n                    partyName = locationToMainParty[iecId];\n                }\n                return partyName;\n            }\n            function getMainPartyColorFromRegion(d, i) {\n                var partyName = getMainPartyName(d, i);\n                var partyColor = getFillColorFromPartyName(partyName);\n                return partyColor;\n            }\n\n            var jsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for only munis\n                if (!geoJsonData.objects[self.state.muniCode])\n                    return;\n    \n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n            }\n\n            jsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(jsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getMainPartyColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            var parties = [];\n            var availableCnt = [];\n            jsonDataFeatures.forEach((d, i) => {\n                var party = getMainPartyName(d, i);\n                if (parties.indexOf(party) == -1) {\n                    parties.push(party);\n                    availableCnt.push(1);\n                } else {\n                    availableCnt[parties.indexOf(party)] ++;\n                }\n            })\n\n            parties.sort(function(a, b){\n                return availableCnt[parties.indexOf(b)] - availableCnt[parties.indexOf(a)];\n            })\n\n            function getLegendXY(i) {\n                return [(i%5)*150, h + 10 + parseInt(i/5) * 40];\n            }\n            var legends = svg.selectAll(`.${className(\"legend\")}`)\n                .data(parties)\n                .enter()\n                .append('g')\n                .attr(\"class\", className(\"legend\"))\n                .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n            legends\n                .append(\"rect\")\n                .attr('width', 20)\n                .attr('height', 20)\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr(\"fill\", (party, i) => {\n                    return getFillColorFromPartyName(party);\n                })\n            legends.append('text')\n                .attr('x', 30)\n                .attr('y', 16)\n                .text(party => partyAbbrByName[party])\n            \n            if (self.state.regionType !== \"municipality\") {\n                svg.selectAll(\".place-label\")\n                    .data(jsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(d => getSubRegionName(d.properties, self.state))\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                fixMapLabelIntersect();\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(jsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d, i) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n\n                    tooltipDiv.html(getSubRegionName(d.properties, self.state) + \" : \" + getMainPartyName(d, i))\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        function getMunicipalityiecId(properties) {\n                            return properties.PKLVDNUMBE;\n                        }\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: getMunicipalityiecId(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                    }\n                })\n            if (!self.state.disableNavigation) {\n                var fo = svg.append(\"foreignObject\")\n                    .attr(\"x\", w - 100)\n                    .attr(\"y\", 10)\n                    .attr(\"width\", 100)\n                    .attr(\"height\", 30)\n                    .attr(\"class\", \"map-controls\")\n                fo.append(\"xhtml:div\")\n                    .append(\"button\")\n                    .attr(\"class\", \"go-back\")\n                    .style(\"height\", \"30px\")\n                    .html(\"go back\")\n                    .on(\"click\", function() {\n                        var regionType = self.state.regionType;\n                        var newState, event;\n    \n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniImuniCodeD: self.state.muniCode,\n                            iecId: self.state.iecId,\n                        }\n                        \n                        if (regionType === \"province\") {\n                            newState.regionType = \"national\";\n                        } else if (regionType === \"municipality\") {\n                            newState.regionType = \"province\";\n                        }\n    \n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    });\n            }\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nimport {\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n      \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n    \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,            \n            disableNavigation,\n            regionType,\n            provinceName,\n            muniName,\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showMap(document.getElementById(\"${elementId}\"),{\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport svgToPng from \"save-svg-as-png\";\nimport canvg from \"canvg\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getTurnoutData,\n    getProvincesData\n} from \"../../api\";\nimport {\n  parseTurnoutData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar provincesData = getProvincesData();\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"tv\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n        this.getContainer().selectAll(\"svg\").remove();\n        document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state)\n    }\n\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n    \n            // var ctx = rendercanvas.getContext(\"2d\");\n            // ctx.globalCompositeOperation = \"source-out\";\n            // ctx.fillStyle = \"#ffffff\";\n            // ctx.fillRect(0, 0, rect.width, rect.height);\n\n            canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n        var canvas = rendercanvas, filename = `turnout-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor\n        } = this.state;\n        return (\n            <div className={className(\"map-container\")+\" \"+className(`${config.CSS_PREFIX}stylesheet-${stylesheetFor}`)}>\n                <div className={className(config.CSS_PREFIX + \"map-title\")}>{getRegionName(this.state)}</div>\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n\n                <div className={className(config.CSS_PREFIX + \"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(provinceName) {\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[provinceName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.provinceName);\n                case \"municipality\":\n                    return self.state.muniCode + \".topojson\";\n                default:\n                    return null;\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var turnoutDataLoader = getTurnoutData(props);\n        var dataLoaders = [geoJsonLoader, turnoutDataLoader];\n\n        Promise.all(dataLoaders).then(function(values){ \n            var geoJsonData = values[0];\n            var locationToTurnout = parseTurnoutData(values[1], props);      \n\n            function getMergedColorWithWhite(percent) {\n                var originRGB = {\n                    R: 0,\n                    G: 255,\n                    B: 0\n                }\n                var mixedR = (originRGB.R * (percent) + 255 * (100-percent))/100;\n                var mixedG = (originRGB.G * (percent) + 255 * (100-percent))/100;\n                var mixedB = (originRGB.B * (percent) + 255 * (100-percent))/100;\n                return `rgb(${mixedR},${mixedG},${mixedB})`;\n            }\n            function getFillColorFromTurnout(turnout) {\n              if (turnout > 65)\n                return \"#39711D\";//getMergedColorWithWhite(100);//\"rgb(0,165,138)\";\n              if (turnout >= 60)\n                return \"#458923\";//getMergedColorWithWhite(90);//\"rgb(4,68,95)\";\n              if (turnout >= 55)\n                return \"#53B025\";//getMergedColorWithWhite(80);//\"rgb(4,98,138)\";\n              if (turnout >= 50)\n                return \"#4BDC02\";//getMergedColorWithWhite(70);//\"rgb(4,117,164)\";\n              if (turnout >= 45)\n                return \"#7CE547\";//getMergedColorWithWhite(60);//\"rgb(4,136,191)\";\n              if (turnout >= 40)\n                return \"#93E968\";//getMergedColorWithWhite(50);//\"rgb(0,154,216)\";\n              if (turnout >= 35)\n                return \"#A6ED83\";//getMergedColorWithWhite(40);//\"rgb(77,174,224)\";\n              if (turnout >= 30)\n                return \"#C5F3AF\";//getMergedColorWithWhite(30);//\"rgb(124,194,231)\";\n              return \"#D3F6C3\";//regionColor;\n            }\n\n            function getTurnout(d, i) {\n                var turnout;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    turnout = locationToTurnout[provinceName];\n                } else if (regionType === \"province\") {\n                    var muniCode = getMunicipalityCode(d.properties);\n                    turnout = locationToTurnout[muniCode];\n                } else {// \"municipality\"\n                    function getMunicipalityiecId(properties) {\n                        return properties.PKLVDNUMBE;\n                    }\n                    var iecId = getMunicipalityiecId(d.properties);\n                    turnout = locationToTurnout[iecId];\n                }\n                return turnout;\n            }\n            function getFillColorFromRegion(d, i) {\n                var turnout = getTurnout(d, i);\n                var fillColor = getFillColorFromTurnout(turnout);\n                return fillColor;\n            }\n            var jsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for only munis\n                if (!geoJsonData.objects[self.state.muniCode])\n                    return;\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n            }\n\n            jsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(jsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getFillColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            var turnoutColors = [{\n                text: \"More than 65%\",\n                turnout: 66\n            },{\n                text: \"60% - 65%\",\n                turnout: 60\n            },{\n                text: \"55% - 60%\",\n                turnout: 55\n            },{\n                text: \"50% - 55%\",\n                turnout: 50\n            },{\n                text: \"45% - 50%\",\n                turnout: 45\n            },{\n                text: \"40% - 45%\",\n                turnout: 40\n            },{\n                text: \"35% - 40%\",\n                turnout: 35\n            },{\n                text: \"30% - 35%\",\n                turnout: 30\n            },{\n                text: \"Less than 30%\",\n                turnout: 15\n            }];\n            \n            function getLegendXY(i) {\n                return [(i%5)*170, h + 10 + parseInt(i/5) * 40];\n            }\n            var legends = svg.selectAll(`.${className(\"legend\")}`)\n                .data(turnoutColors)\n                .enter()\n                .append('g')\n                .attr(\"class\", className(\"legend\"))\n                .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n            legends\n                .append(\"rect\")\n                .attr('width', 20)\n                .attr('height', 20)\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr(\"fill\", (it) => {\n                    return getFillColorFromTurnout(it.turnout);\n                })\n            legends.append('text')\n                .attr('x', 30)\n                .attr('y', 16)\n                .text(it => it.text)\n            \n            if (self.state.regionType !== \"municipality\") {\n                svg.selectAll(\".place-label\")\n                    .data(jsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(d => getSubRegionName(d.properties, self.state))\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                fixMapLabelIntersect();\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(jsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d, i) {\t\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n\n                    tooltipDiv.html(getSubRegionName(d.properties, self.state) + \" : \" + getTurnout(d, i) + \"%\")\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        function getMunicipalityiecId(properties) {\n                            return properties.PKLVDNUMBE;\n                        }\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: getMunicipalityiecId(d.properties),\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                    }\n                })\n            if (!self.state.disableNavigation) {\n                var fo = svg.append(\"foreignObject\")\n                    .attr(\"x\", w - 100)\n                    .attr(\"y\", 10)\n                    .attr(\"width\", 100)\n                    .attr(\"height\", 30)\n                    .attr(\"class\", \"map-controls\")\n                fo.append(\"xhtml:div\")\n                    .append(\"button\")\n                    .attr(\"class\", \"go-back\")\n                    .style(\"height\", \"30px\")\n                    .html(\"go back\")\n                    .on(\"click\", function() {\n                        var regionType = self.state.regionType;\n                        var newState, event;\n    \n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniImuniCodeD: self.state.muniCode,\n                            iecId: self.state.iecId,\n                        }\n                        \n                        if (regionType === \"province\") {\n                            newState.regionType = \"national\";\n                        } else if (regionType === \"municipality\") {\n                            newState.regionType = \"province\";\n                        }\n    \n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    });\n            }\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        })\n    }\n}\n\nexport default Map;\n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getTurnoutData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                percVoterTurnout\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                percVoterTurnout\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniRegName = options.muniName.split(\" - \")[1];\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots( \n            event_Description:\"${eventDescription}\",\n            location_Ward_Municipality_Name_Icontains:\"${muniRegName}\") {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n  export function getTurnoutDataForAllEvents(options) {\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            location_Name:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                location_Province_Name:\"${options.provinceName}\", \n                location_Code: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n                location_IecId:\"${options.iecId}\", \n                location_Ward_Municipality_Code:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            electionEvents: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,            \n            disableNavigation,\n            eventDescription,\n            regionType,\n            provinceName,\n            muniName,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showTurnoutMap(document.getElementById(\"${elementId}\"),{\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getTurnoutDataForAllEvents,\n} from \"../../api\";\nimport {\n  parseTurnoutDataForAllEvents,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Turnout Barchart',\n  yAxisLabel: 'PERCENTAGE',\n  noXaxisByParty: true,\n  yValue: function(d) {\n    return d.percVoterTurnout;\n  },\n  yValueFormat: function(percVoterTurnout) {\n    return percVoterTurnout + '%';\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar chart;\nvar refreshIntervalID = 0;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        eventType: \"national\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.width && props.height) {\n        this.state.width = props.width;\n        this.state.height = props.height;\n      } else {\n        var {\n          modifW,\n          modifH\n        } = this.getWidthHeightByScreenSize();\n        this.state.width = modifW;\n        this.state.height = modifH;\n      }\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(refreshIntervalID);\n    }\n\n    getWidthHeightByScreenSize() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/3.5;\n      return {\n        modifW,\n        modifH\n      }\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `turnout-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      return (\n          <div className=\"barchart\">\n            <div className={className(config.CSS_PREFIX + \"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var turnoutDataLoader = getTurnoutDataForAllEvents(props);\n      var dataLoaders = [turnoutDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var turnoutData = values[0];\n        self.drawGraph(container, props, turnoutData, 'rgb(157,51,55)');\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, colorsData) {\n        var chartData = parseTurnoutDataForAllEvents(data, props);\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className, chartOptions);\n        \n        chart.draw(chartData, colorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventType: \"national\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventType,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event Type</label>\n                  <select className={className(\"form-control\")} \n                     value={eventType}\n                     onChange={(e) => this.setState({eventType: e.target.value})}>\n                        <option value=\"national\">National</option>\n                        <option value=\"provincial\">Provincial</option>\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"\">Select ...</option>\n                        { \n                            eventType == \"national\" && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showTurnoutBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventType: \"${eventType}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport styles from \"./barchartMap.css\";\nimport BarChart from '../BarChart/barchart';\nimport Map from '../Map/map';\nimport events from \"../../events\";\nimport JSZip from \"jszip\";\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getRegionName\n} from \"../../utils\";\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nclass BarchartWithNavMap extends Component {    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n        }\n        if (props.numParties) {\n            this.state.numParties = props.numParties;\n        }\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.width && props.height) {\n            this.state.width = props.width;\n            this.state.height = props.height;\n        }\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n    }\n\n    exportAsPNG(event) {\n        var self = this;\n        Promise.all([\n            self.barchartInstance.exportAsPNGUri(),\n            self.mapInstance.exportAsPNGUri()\n        ]).then(values => {\n            console.log(\"exporting ...\");\n            var zip = new JSZip();\n\n            var imgs = zip.folder(\"export-images\");\n            imgs.file(\"barchart.png\", values[0], {base64: true});\n            imgs.file(\"map.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `race-for-votes-barchart-map(${getRegionName(self.state)}).zip`);\n                console.log(\"exporting ended successfully\");\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n\n    render() {\n        return (\n        <div ref=\"superwidget\" >\n            <div className={className(\"barchart-container\")} ref=\"barchart\">\n                <BarChart \n                    ref={instance => { this.barchartInstance = instance; }} \n                    {...this.state} />\n            </div>\n            <div className={className(\"map-container\")}>\n                <Map \n                    ref={instance => { this.mapInstance = instance; }} \n                    {...this.state}/>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BarchartWithNavMap;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartMapEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartWithNavMapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            numParties: 5,\n\n            electionEvents: []\n        }\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n        triggerCustomEvent(events.MAP_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_SUPERWIDGET_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Map + Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div>\n                Way to customize size and position of Bar Chart and Map.<br/>\n                For bar chart, you can use .barchart-container\n                <div className={className(\"embedcode\")}>\n                    {`.barchart-container {\n                        width: 1000px;\n                        height: 300px;\n                        margin-left: 100px;\n                    }`}\n                </div>\n                For Map, you can use .map-container\n                <div className={className(\"embedcode\")}>\n                    {`.map-container {\n                        width: 1000px;\n                        height: 300px;\n                        margin-left: 100px;\n                    }`}\n                </div>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarchartWithNavMap(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartWithNavMapEmbed;","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n    var data = [],\n        width = 700,\n        height = 300,\n        margin = {top: 10, right: 10, bottom: 10, left: 10},\n        variable = 'percent',\n        category = 'name',\n        padAngle = 0.015,\n        transTime = 750,\n        floatFormat = d3.format('.4r'),\n        cornerRadius = 3,\n        colorsData = null;\n\n    function colour(key) {\n        if (colorsData && colorsData[key]) {\n            return colorsData[key];\n        }\n        return 'rgb(' + Math.random()*250 + ',' + Math.random()*250 + ',' + Math.random()*250 + ')';\n    }\n\n    container.selectAll(\"svg\").remove();\n\n    var radius = Math.min(width, height) / 2;\n\n    var pie = d3.pie()\n        .value(function(d) { return floatFormat(d[variable]); })\n        .sort(null);\n\n    var arc = d3.arc()\n        .outerRadius(radius * 0.8)\n        .innerRadius(radius * 0.6)\n        .cornerRadius(cornerRadius)\n        .padAngle(padAngle);\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width + margin.left + margin.right) + \" \" + (height + margin.top + margin.bottom))\n        .classed(\"svg-content\", true)\n        .append('g')\n        .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'lines');\n\n    var path = svg.select('.slices')\n        .selectAll('path')\n        .data(pie(data))\n        .enter().append('path')\n        .attr('fill', function(d) { return colour(d.data[category]); })\n        .attr('d', arc);\n\n    var errorText = svg.append(\"g\")\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\");\n      \n    this.destroy = function() {\n        container.selectAll(\"svg\").remove();\n    }\n    this.draw = function(value, colorsDataP) {\n        if (!value) {\n            errorText.text(\"chart data is not available\");\n            return;\n        } else {\n            errorText.text(\"\");\n        }\n        colorsData = colorsDataP;\n        data = value;\n\n        var updatePath = d3.select('.slices').selectAll('path');\n\n        var data0 = path.data(),\n            data1 = pie(data);\n\n        updatePath = updatePath.data(data1, key);\n\n        updatePath.enter().append('path')\n            .each(function(d, i) { this._current = findNeighborArc(i, data0, data1, key) || d; })\n            .attr('fill', function(d) {  return colour(d.data[category]); })\n            .attr('d', arc);\n\n        updatePath.exit()\n            .transition()\n            .duration(transTime)\n            .attrTween(\"d\", arcTween)\n            .remove();\n\n        updatePath.transition().duration(transTime)\n            .attrTween('d', arcTween);\n\n        d3.selectAll('.labelName text, .slices path').call(toolTip);\n\n    };\n\n    function toolTip(selection) {\n\n        selection.on('mouseenter', function (data) {\n\n            svg.append('text')\n                .attr('class', 'toolCircle')\n                .attr('dy', -15)\n                .html(toolTipHTML(data))\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n\n            svg.append('circle')\n                .attr('class', 'toolCircle')\n                .attr('r', radius * 0.55)\n                .style('fill', colour(data.data[category]))\n                .style('fill-opacity', 0.35);\n\n        });\n\n        selection.on('mouseout', function () {\n            d3.selectAll('.toolCircle').remove();\n        });\n    }\n\n    function toolTipHTML(data) {\n\n        var tip = '';\n        tip += '<tspan x=\"0\">' + 'Progress' + ': ' + data.data[\"percent\"] + '%' + '</tspan>';\n        tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Captured Votes' + ': ' + data.data[\"count\"] + '</tspan>';\n        tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Total' + ': ' + data.data[\"totalCount\"] + '</tspan>';\n\n        return tip;\n    }\n\n    function arcTween(d) {\n        var i = d3.interpolate(this._current, d);\n        this._current = i(0);\n        return function(t) { return arc(i(t)); };\n    }\n\n    function findNeighborArc(i, data0, data1, key) {\n        var d;\n        return (d = findPreceding(i, data0, data1, key)) ? {startAngle: d.endAngle, endAngle: d.endAngle}\n            : (d = findFollowing(i, data0, data1, key)) ? {startAngle: d.startAngle, endAngle: d.startAngle}\n                : null;\n    }\n\n    function findPreceding(i, data0, data1, key) {\n        var m = data0.length;\n        while (--i >= 0) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n\n    function key(d) {\n        return d.data[category];\n    }\n\n    function findFollowing(i, data0, data1, key) {\n        var n = data1.length, m = data0.length;\n        while (++i < n) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"./d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getProgressVotesCount\n} from \"../../api\";\nimport {\n  parseProgressVotesCount,\n  getRegionName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Progress on Votes Count'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar chart;\nvar refreshIntervalID = 0;\n\nclass PieChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.width && props.height) {\n        this.state.width = props.width;\n        this.state.height = props.height;\n      } else {\n        var {\n          modifW,\n          modifH\n        } = this.getWidthHeightByScreenSize();\n        this.state.width = modifW;\n        this.state.height = modifH;\n      }\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(refreshIntervalID);\n    }\n\n    getWidthHeightByScreenSize() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/3.5;\n      return {\n        modifW,\n        modifH\n      }\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `progress-on-votes-piechart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n   \n    render () {\n      return (\n          <div className=\"piechart\">\n            <div className={className(config.CSS_PREFIX + \"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var progressVotesDataLoader = getProgressVotesCount(props);\n      var dataLoaders = [progressVotesDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var progressVotesData = values[0];\n        self.drawGraph(container, props, progressVotesData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseProgressVotesCount(data, props);\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className, chartOptions);\n        \n        chart.draw(chartData, {\n          \"Completed\": \"#15707C\",\n          \"Not Completed\": \"#CCCCCC\"\n        });\n    }\n}\n\nexport default PieChart;\n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getProgressVotesCount(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event_Description:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event_Description:\"${eventDescription}\",\n            location_Name:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event_Description:\"${eventDescription}\",\n            location_Province_Name:\"${options.provinceName}\", \n            location_Code: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event_Description:\"${eventDescription}\",\n            location_IecId:\"${options.iecId}\", \n            location_Ward_Municipality_Code:\"${options.muniCode}\"\n          ) {\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }","import React, { Component } from \"react\";\nimport MetisMenu from 'react-metismenu';\n\nimport config from '../../config'\nimport styles from \"./navbar.css\";\nimport events from \"../../events\";\nimport {\n    getProvincesData,\n    getMetrosData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cssPrefix(originName) {\n    return config.CSS_PREFIX+originName;\n}\n\nvar provincesData = getProvincesData();\nvar metrosData = getMetrosData();\n\n\nclass CustomLink extends React.Component {\n    constructor() {\n      super();\n  \n      this.onClick = this.onClick.bind(this);\n    }\n  \n    onClick(e) {\n      if (this.props.hasSubMenu) this.props.toggleSubMenu(e);\n      else {\n        this.props.activateMe({\n          newLocation: this.props.to,\n          selectedMenuLabel: this.props.label,\n        });\n      }\n    }\n  \n    render() {\n      return (\n        <div className=\"metismenu-link\" onClick={this.onClick}>\n          {this.props.children}\n        </div>\n      );\n    }\n  };\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            activeLinkId: ''\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        this.handleNavBarSelection = this.handleNavBarSelection.bind(this);\n    }\n\n    componentDidMount() {\n        if(!document.getElementById('navbarcss')) {\n            var link = document.createElement('link');\n            link.id = 'navbarcss';\n            link.rel = 'stylesheet';\n            link.href = config.DOMAIN + '/navbar.css';\n            document.head.appendChild(link);\n        }\n\n        if(!document.getElementById('font-awesome')) {\n            var link = document.createElement('link');\n            link.id = 'font-awesome';\n            link.rel = 'stylesheet';\n            link.href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\";\n            document.head.appendChild(link);\n        }\n\n        this.refs.navbar.addEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentWillUnmount() {\n        this.refs.navbar.removeEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentDidUpdate() {\n    }\n\n    handleNavBarSelection(e) {\n        if (e.target.className.indexOf(\"metismenu-link\") == -1) {\n            return;\n        }\n        var iconClass = e.target.childNodes[0].className;\n        var classList = iconClass.split(' ');\n        var lastClass = classList[classList.length - 1];\n        var passInfo = lastClass.split('-');\n\n        var regionType, selectionData = {};\n        var activeLinkId = '';\n\n        if (passInfo[1] == '1') {\n            regionType = \"national\";\n            activeLinkId = '1';\n        } else if (passInfo[1] == '2') {\n            regionType = \"province\";\n            selectionData = provincesData[passInfo[2]];\n        } else if (passInfo[1] == '3') { // muni level\n            regionType = \"municipality\";\n            selectionData = provincesData[passInfo[2]].munis[passInfo[3]];\n            activeLinkId = `3-${passInfo[2]}-${passInfo[3]}`;\n        } else if (passInfo[1] == '4') { // metros\n            regionType = \"municipality\"\n            selectionData = metrosData[passInfo[2]];\n            activeLinkId = `4-${passInfo[2]}`;\n        } else {\n            return;\n        }\n        \n        e.preventDefault();\n        var newState;\n        if (regionType == \"national\") {\n            newState = {regionType: regionType};\n            if (this.state.regionType == newState.regionType)\n                return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            if (this.state.regionType == newState.regionType && this.state.provinceName == newState.provinceName)\n                return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            if (this.state.regionType == newState.regionType \n                && this.state.provinceName == newState.provinceName\n                && this.state.newState == newState.muniName)\n                return;\n        }\n\n        triggerCustomEvent(events.REGION_CHANGE, newState);\n        triggerCustomEvent(events.MAP_PREVIEW, newState);\n\n        newState.activeLinkId = activeLinkId;\n        this.setState(newState);\n    }\n      \n    render () {\n        var content = [\n            {\n                icon: '1',\n                label: 'National',\n                to: '1',\n            },\n            {\n                icon: '',\n                label: 'Provinces',\n                content: provincesData.map((province, i) => {\n                    return {\n                        icon: `2-${i}`,\n                        label: province.name,\n                        to: `2-${i}`,\n                        // content: province.munis.map((muni, j) => {\n                        //     return {\n                        //         icon: `3-${i}-${j}`,\n                        //         label: muni.muniName.split(\"-\")[1].split(\"[\")[0],\n                        //         to: `3-${i}-${j}`,\n                        //     }\n                        // })\n                    }\n                })\n            },\n            {\n                icon: '',\n                label: 'Metros',\n                content: metrosData.map((metro, i) => {\n                    return {\n                        icon: `4-${i}`,\n                        label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                        to: `4-${i}`,\n                    }\n                })\n            }\n        ];\n        \n        return (\n            <div className={[className(cssPrefix(\"menu-widget\")), cssPrefix(\"menu-widget\")].join(\" \")} ref=\"navbar\">\n                <MetisMenu activeLinkId={this.state.activeLinkId} content={content} LinkComponent={CustomLink}/>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport styles from \"./quickResultsWidget.css\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport config from '../../config'\nimport events from \"../../events\";\n\nimport BarChart from '../BarChart/barchart';\n\nimport ProgressVotesPieChart from '../ProgVotesCountPiechart/piechart';\n\nimport RaceForSeatBarChart from '../RaceForSeatBarchart/barchart';\n\nimport SpoiltBarChart from '../SpoiltBarchart/barchart';\n\nimport TurnoutBarchart from '../TurnoutBarchart/barchart';\nimport TurnoutMap from '../TurnoutMap/map';\n\nimport NavBar from '../NavBar/navbar';\nimport Map from '../Map/map';\n\nimport JSZip from \"jszip\";\nimport {saveAs} from \"file-saver\";\nimport {\n    getRegionName\n} from \"../../utils\";\n\n\nfunction className(originName) {\n    return styles[originName] || bootstrapStyles[originName] || originName;\n}\n\nclass QuickResultsWidget extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            comp: \"race for votes\",\n            stylesheetFor: \"web\"\n        }\n        if (props.numParties) {\n            this.state.numParties = props.numParties;\n        }\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.iecId) {\n            this.state.iecId = props.iecId;\n        }\n        if (props.stylesheetFor) {\n            this.state.stylesheetFor = props.stylesheetFor;\n        }\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handleRegionChange = this.handleRegionChange.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.addEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.removeEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      if (newState.regionType != \"municipality-vd\")\n        this.setState(newState)\n    }\n\n    exportAsPNG(event) {\n        var {\n            comp\n        } = this.state;\n        var self = this;\n        var zipfileName = `quick-results-widget-${comp.replace(/\\s/gi, '-')}(${getRegionName(self.state)})`;\n        var imageLoadPromises = [];\n        if (comp == 'race for votes') {\n            imageLoadPromises = [\n                this.votesInstance1.exportAsPNGUri(), \n                this.votesInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'race for seats') {\n            imageLoadPromises = [\n                this.seatsInstance1.exportAsPNGUri(), \n                this.seatsInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'turnout') {\n            imageLoadPromises = [\n                this.turnoutInstance1.exportAsPNGUri(), \n                this.turnoutInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'counting progress') {\n            imageLoadPromises = [\n                this.progressInstance1.exportAsPNGUri(), \n                this.progressInstance2.exportAsPNGUri()\n            ];\n        } else if (comp == 'spoilt votes') {\n            imageLoadPromises = [\n                this.spoiltInstance1.exportAsPNGUri(), \n                this.spoiltInstance2.exportAsPNGUri()\n            ];\n        }\n        Promise.all(imageLoadPromises).then(values => {\n            console.log(\"exporting ...\");\n            var zip = new JSZip();\n\n            var imgs = zip.folder(zipfileName);\n            imgs.file(\"image1.png\", values[0], {base64: true});\n            imgs.file(\"image2.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `${zipfileName}.zip`);\n                console.log(\"exporting ended successfully\");\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    };\n\n    render() {\n        var {\n            comp,\n            numParties,\n            eventDescription,\n            stylesheetFor,\n            regionType,\n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            comp\n        } = this.state;\n        return (\n            <div className={className(`${config.CSS_PREFIX}stylesheet-${stylesheetFor}`)}>\n                <div className={className(\"row\") + \" \" + className(config.CSS_PREFIX + \"component-transition-menu\")}>\n                    <div className={className(\"col-md-2\") + \" \" + className(\"label\")}>\n                        Show Results for \n                    </div>\n                    <div className={className(\"col-md-2\")}>\n                        <button \n                            className={comp == 'race for votes'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'race for votes'})}> Race for votes </button>\n                    </div>\n                    <div className={className(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'race for seats'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'race for seats'})}> Race for seats</button>\n                    </div>\n                    <div className={className(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'turnout'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'turnout'})}> Turnout</button>\n                    </div>\n                    {\n                        (eventDescription.indexOf(\"2014\") != -1) &&\n                        <div className={className(\"col-md-2\")}>\n                            <button  \n                                className={comp == 'counting progress'? className(\"active\") : \"\"} \n                                onClick={() => this.setState({comp: 'counting progress'})}> Counting progress </button>\n                        </div>\n                    }\n                    <div className={className(\"col-md-2\")}>\n                        <button  \n                            className={comp == 'spoilt votes'? className(\"active\") : \"\"} \n                            onClick={() => this.setState({comp: 'spoilt votes'})}> Spoilt Votes </button>\n                    </div>\n                </div>\n                <div className={className(\"row\")}>\n                    <div className={className(\"col-md-4\")+\" \"+className(\"main-left-part\")}>\n                        <NavBar />\n                    </div>\n                            {\n                                comp == 'race for votes' && \n                                <div className={className(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <BarChart \n                                            ref={instance => { this.votesInstance1 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.votesInstance2 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'race for seats' && \n                                <div className={className(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <RaceForSeatBarChart \n                                            ref={instance => { this.seatsInstance1 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.seatsInstance2 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'turnout' && \n                                <div className={className(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <TurnoutBarchart \n                                            ref={instance => { this.turnoutInstance1 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <TurnoutMap \n                                            ref={instance => { this.turnoutInstance2 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                </div>\n                                \n                            }\n                            {\n                                comp == 'counting progress' && \n                                <div className={className(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <ProgressVotesPieChart \n                                            ref={instance => { this.progressInstance1 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.progressInstance2 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                </div>\n                            }\n                            {\n                                comp == 'spoilt votes' &&\n                                <div className={className(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                                    <div className={className(\"barchart-container\")}>\n                                        <SpoiltBarChart \n                                            ref={instance => { this.spoiltInstance1 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                    <div className={className(\"map-container\")}>\n                                        <Map \n                                            ref={instance => { this.spoiltInstance2 = instance; }} \n                                            {...this.state} />\n                                    </div>\n                                </div> \n                            }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuickResultsWidget;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./quickResultsWidgetEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass QuickResultsWidgetEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"none\",\n            numParties: 5,\n\n            electionEvents: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.QUICK_RESULTS_PREVIEW, this.state);\n    }    \n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_SUPERWIDGET_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            stylesheetFor,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            numParties,\n            electionEvents\n        } = this.state;\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Quick Results Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Stylesheet</label>\n                  <select className={className(\"form-control\")} \n                     value={stylesheetFor}\n                     onChange={e => this.setState({stylesheetFor: e.target.value})}>\n                        <option value=\"tv\">TV</option>\n                        <option value=\"web\">Web</option>\n                        <option value=\"none\">None</option>\n                  </select>\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties for Bar Chart</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>              \n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showQuickResultsWidget(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            stylesheetFor: \"${stylesheetFor}\",\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            numParties: \"${numParties}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default QuickResultsWidgetEmbed;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./piechartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass PieChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1 &&\n                this.state.regionType == \"national\") {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({eventDescription: e.target.value });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Progress on Votes Count Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        { \n                            eventDescription.toLowerCase().indexOf(\"national\") != -1 && \n                            <option value=\"national\">national</option>\n                        }\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default PieChartEmbed;","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Comparison',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar chart;\nvar partyColorsData;\nvar refreshIntervalID = 0;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\"\n      }\n      if (props.partyAbbr) {\n        this.state.partyAbbr = props.partyAbbr;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(refreshIntervalID);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparation-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      return (\n          <div className=\"barchart\">\n            <div className={className(config.CSS_PREFIX + \"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonData(data, props);\n        if (!chart)\n          chart = new Chart(container, null, null, className, chartOptions);\n        \n        chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbr: \"ANC\",\n\n            electionEvents: [],\n            allParties: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seats Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Name</label>\n                  \n                  <select className={className(\"form-control\")} \n                        value={partyAbbr}\n                        onChange={e => this.setState({partyAbbr: e.target.value})} >\n                        <option value=\"\">Select ...</option>\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"name\"]} value={party[\"abbreviation\"]}>{party[\"name\"]}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showRaceForVotesCompBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbr: \"${partyAbbr}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n    options = {};\n  } \n\n  width = 360;\n  height = 185;\n  container.selectAll(\"svg\").remove();\n\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width) + \" \" + (height))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n\n    var mainSvg = svg.append(\"g\");\n\n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(originChartData, colorsData) {\n      var chartData = [];\n      if (!originChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n\n      for(var i = originChartData.length - 1; i >= 0 ; i -=2) {\n        chartData.push(originChartData[i]);\n      }\n      for (i= -1 - i; i < originChartData.length; i += 2) {\n        chartData.push(originChartData[i]);\n      }\n\n\n      var partyColorByName = {};\n\n      var partyColorsData = colorsData;\n      if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n          partyColorByName[edge.node.name] = edge.node.colour;\n          })\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getTooltipText(d, i) {\n          return d.name;\n      }\n\n      var totalSeats = 0;\n      for (var i = 0; i < chartData.length; i ++) {\n        totalSeats += chartData[i].seats;\n      }\n\n      function pythonConvertedCode(totalSeats, mainSvg) {\n        var Totals=[ 3, 15, 33, 61, 95, 138, 189, 247, 313, 388, 469, 559, 657, 762, 876, 997, 1126, 1263, 1408, 1560, 1722, 1889, 2066, 2250, 2442, 2641, 2850, 3064, 3289, 3519, 3759, 4005, 4261, 4522, 4794, 5071, 5358, 5652, 5953, 6263, 6581, 6906, 7239, 7581, 7929, 8287, 8650, 9024, 9404, 9793, 10187, 10594, 11003, 11425, 11850, 12288, 12729, 13183, 13638, 14109, 14580, 15066, 15553, 16055, 16557, 17075, 17592, 18126, 18660, 19208, 19758, 20323, 20888, 21468, 22050, 22645, 23243, 23853, 24467, 25094, 25723, 26364, 27011, 27667, 28329, 29001, 29679, 30367, 31061]\n    \n        if (totalSeats > Totals[Totals.length-1]){\n            console.error(\"total seats >\", Totals[Totals.length-1]);\n        }\n    \n        if (totalSeats < 1) {\n          console.error(\"total seats < 1\");\n        }\n        var rows;\n        var radius;\n        var poslist;\n        var J, R, angle;\n          // Figure out how many rows are needed:\n          for (var i = 0; i < Totals.length; i ++ ){\n              if (Totals[i] >= totalSeats) {\n                  rows = i + 1;\n                  break\n              }\n          }\n          // Maximum radius of spot is 0.5/rows; leave a bit of space.\n          radius = 0.4/rows;\n    \n          // Create list of centre spots\n          poslist=[]\n          for( var i = 1; i < rows; i ++){\n            // Each row can contain pi/(2asin(2/(3n+4i-2))) spots, where n is the number of rows and i is the number of the current row.\n            J = parseInt((totalSeats)/Totals[rows-1]*Math.PI/(2*Math.asin(2.0/(3.0*rows+4.0*i-2.0))));\n            // The radius of the ith row in an N-row diagram (Ri) is (3*N+4*i-2)/(4*N)\n            R = (3.0*rows+4.0*i-2.0)/(4.0*rows);\n            if (J == 1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n            } else {\n              for (var j = 0; j < J; j ++){\n                // The angle to a spot is n.(pi-2sin(r/Ri))/(Ni-1)+sin(r/Ri) where Ni is the number in the arc\n                // x=R.cos(theta) + 1.75\n                // y=R.sin(theta)\n                angle = (j)*(Math.PI-2.0*Math.sin(radius/R))/(J-1.0)+Math.sin(radius/R);\n                poslist.push({\n                  angle,\n                  x: R*Math.cos(angle)+1.75,\n                  y: R*Math.sin(angle)\n                });\n              }\n            }\n          }\n          J=totalSeats-poslist.length\n          R=(7.0*rows-2.0)/(4.0*rows)\n          if (J==1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n          }\n          else {\n              for (var j = 0; j < J; j ++) {\n                  angle=(j)*(Math.PI-2.0*Math.sin(radius/R))/((J)-1.0)+Math.sin(radius/R)\n                  poslist.push({\n                    angle,\n                    x: R*Math.cos(angle)+1.75,\n                    y: R*Math.sin(angle)\n                  })\n              }\n          }\n\n          poslist.sort(function(a,b) {\n            function value(x) {\n              return x.angle - Math.PI/2;\n            }\n            return value(b) - value(a);\n          })\n\n          function onMouseMove(svg, i){\n            svg\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltipDiv.html(getTooltipText(chartData[i], i))\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n          }\n          function onMouseOut(svg) {\n            svg\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n          }\n          \n          mainSvg.append('text')\n            .attr('x', 175)\n            .attr('y', 175)\n            .attr('style', \"font-size:36px;font-weight:bold;text-align:center;text-anchor:middle;font-family:sans-serif\")\n            .text(totalSeats);\n\n          var Counter=0 //How many spots have we drawn?\n          for (var i = 0; i < chartData.length; i ++){\n            //Make each party's blocks an svg group\n            var partySvg = mainSvg.append('g')\n              .attr(\"fill\", getFillColorFromPartyName(chartData[i].partyInfo.name, i))\n              .attr(\"id\", chartData[i].name);\n            \n            partySvg.on(\"mousemove\", onMouseMove.bind(this, partySvg, i))\t\t\t\t\t\n              .on(\"mouseout\", onMouseOut.bind(this, partySvg))\n            \n            for (var j = 0; j < chartData[i].seats; j ++, Counter ++){\n              partySvg.append('circle')\n                .attr('cx', poslist[Counter].x*100.0+5.0)\n                .attr('cy', 100.0*(1.75-poslist[Counter].y)+5.0)\n                .attr('r', radius*100.0)\n            }\n          }\n      }\n      pythonConvertedCode(totalSeats, mainSvg);\n\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./horseshoe.css\";\nimport {Chart} from \"../SeatHorseShoeChart/d3horseshoe\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats HorseShoe Chart',\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar chart;\nvar partyColorsData;\nvar refreshIntervalID = 0;\n\nclass HorseShoeChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n      }\n\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n      if (props.width && props.height) {\n        this.state.width = props.width;\n        this.state.height = props.height;\n      } else {\n        var {\n          modifW,\n          modifH\n        } = this.getWidthHeightByScreenSize();\n        this.state.width = modifW;\n        this.state.height = modifH;\n      }\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(refreshIntervalID);\n    }\n\n    getWidthHeightByScreenSize() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/3.5;\n      return {\n        modifW,\n        modifH\n      }\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-horseshoe-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      return (\n          <div className=\"horseshoechart\">\n            <div className={className(config.CSS_PREFIX + \"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className, chartOptions);\n        \n        chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default HorseShoeChart;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./horseshoeEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData\n} from \"../../api\";\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass HorseShoeEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n\n            electionEvents: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        if (e.target.value.toLowerCase().indexOf(\"national\") == -1) {\n            this.setState({eventDescription: e.target.value, regionType: \"province\", provinceName: \"Western Cape\"});\n        } else {\n            this.setState({\n                eventDescription: e.target.value,\n                regionType: \"national\"\n            });\n        }\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n    \n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n\n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            electionEvents\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Seat Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default HorseShoeEmbed;","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonData,\n  getRegionName\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar chart;\nvar partyColorsData;\nvar refreshIntervalID = 0;\n\nvar chartOptions = {\n  chartType: \"Race For Votes Comparison\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%'\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\"\n      }\n      if (props.partyAbbr) {\n        this.state.partyAbbr = props.partyAbbr;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.iecId) {\n        this.state.iecId = props.iecId;\n      }\n\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (chart) {\n        chart.destroy();\n        chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparation-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), null, null, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      return (\n          <div className={className(\"barchart\")}>\n            <div className={className(config.CSS_PREFIX + \"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonData(data, props);\n\n        if (!chart)\n          chart = new Chart(container, null, null, className);\n        chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents,\n    getProvincesData,\n    getPartyColors,\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent\n} from \"../../utils\";\n\n\nvar provincesData = getProvincesData();\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventDescriptions: [\n                \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            partyAbbr: \"ANC\",\n\n            electionEvents: [],\n            allParties: []\n        }\n    }\n\n    componentDidMount() {\n        var self = this;\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n        getPartyColors()\n            .then(function(data) {\n                var allParties = data[\"data\"][\"allParties\"][\"edges\"].map(edge => edge[\"node\"])\n                allParties = allParties.filter((thing, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.abbreviation === thing.abbreviation\n                    ))\n                )\n                self.setState({allParties});         \n            }).catch(error => console.error(error))\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        var options = e.target.options;\n        var values = [];\n        for (var i = 0, l = options.length; i < l; i++) {\n          if (options[i].selected) {\n            values.push(options[i].value);\n          }\n        }\n        this.setState({\n            eventDescriptions: values \n        })\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        triggerCustomEvent(events.CHART_PREVIEW, this.state);\n    }\n\n    onExportAsPNG(e) {\n        triggerCustomEvent(events.EXPORT_PNG, this.state);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescriptions,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            iecId,\n            partyAbbr,\n            electionEvents,\n            allParties\n        } = this.state;\n\n        var curProvinceData = provincesData.filter(item => item.name == provinceName)[0];\n        return (\n          <div>\n            <h3> Race For Votes Comparison Bar Chart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select multiple className={className(\"form-control\")+\" \"+className(\"multievent-container\")} \n                     value={eventDescriptions}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <select className={className(\"form-control\")} \n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                provincesData && provincesData.map(province => {\n                                    return <option key={province.name} value={province.name}>{province.name}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <select className={className(\"form-control\")} \n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} >\n                            <option value=\"\">Select ...</option>\n                            {\n                                curProvinceData && curProvinceData.munis.map(muni => {\n                                    return <option key={muni.muniName} value={muni.muniName}>{muni.muniName}</option>\n                                })\n                            }\n                        </select>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={iecId}\n                            onChange={e => this.setState({iecId: e.target.value})} \n                            />\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Party Name</label>\n                  \n                  <select className={className(\"form-control\")} \n                        value={partyAbbr}\n                        onChange={e => this.setState({partyAbbr: e.target.value})} >\n                        <option value=\"\">Select ...</option>\n                        {\n                            allParties && allParties.map(party => {\n                                return <option key={party[\"name\"]} value={party[\"abbreviation\"]}>{party[\"name\"]}</option>\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" \n                    onClick={this.onExportAsPNG.bind(this)} \n                    className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Export As PNG</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showRaceForVotesCompBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescriptions: ${JSON.stringify(eventDescriptions)},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            iecId: \"${iecId}\",\n                            partyAbbr: \"${partyAbbr}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed,\n  QuickResultsWidget,\n  QuickResultsWidgetEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <QuickResultsWidget stylesheetFor={\"tv\"} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}