{"version":3,"sources":["components/BarChart/d3barchart.js","events/index.js","api/index.js","components/BarChart/barchart.js","utils/index.js","config/index.js","components/BarChart/barchartEmbed.js","components/Map/map.js","components/Map/mapEmbed.js","App.js","serviceWorker.js","index.js"],"names":["Chart","container","width","height","className","tooltipDiv","predefColors","svg","append","attr","parseInt","document","getElementsByClassName","d3","style","x","rangeRound","y","YaxisOffset","text","barSvg","barTextSvg","this","draw","chartData","partyColorsData","partyColorByName","getFillColorFromPartyName","partyName","i","split","length","forEach","edge","node","name","colour","console","log","domain","map","d","select","transition","duration","call","ticks","tickFormat","bars","selectAll","concat","data","exit","remove","enter","bandwidth","partyInfo","on","html","toLowerCase","replace","l","toUpperCase","percOfVotes","pageX","pageY","Number","barTexts","destroy","events","client","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","getPartyColors","query","gql","_templateObject2","chart","dataRefreshTime","originName","styles","refreshIntervalID","BarChart","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","self","assertThisInitialized","state","numParties","eventDescription","regionType","provinceName","muniName","muniCode","vdNumber","_this$getWidthHeightB","getWidthHeightByScreenSize","modifW","modifH","setInterval","getContainer","handleRegionChange","bind","handlePreviewEvent","redrawChart","addEventListener","window","removeEventListener","clearInterval","Math","min","body","clientWidth","_this$getWidthHeightB2","setState","event","newState","detail","refs","vizcontainer","react_default","a","createElement","getRegionName","ref","dataLoaders","options","_templateObject3","_templateObject4","_templateObject5","_templateObject6","getVotesDataM","partyColorsLoader","push","Promise","all","then","values","votesData","drawGraph","catch","error","firstEdge","edges","nodeData","el","validVotes","parseVotesData","Component","config","DOMAIN","originClassName","bootstrapStyles","BarChartEmbed","elementId","electionEvents","_templateObject","e","target","value","CustomEvent","dispatchEvent","_this2","_this$state","type","placeholder","onChange","onEventDescriptionChange","item","key","onRegionTypeChange","disabled","onClick","onPreview","regionColor","provincesData","abbreviation","munis","Map","disableNavigation","selectionData","loading","react_sidenav","defaultSelectedPath","theme","selectionColor","onItemSelection","id","handleNavBarSelection","province","muni","react_loading_default","color","nationalMapFile","fullRouteGeoJsonFile","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","getLoadingSpinner","process","classed","geoJsonLoader","mainPartiesDataLoader","_templateObject7","_templateObject8","muniRegName","_templateObject9","getMainParties","geoJsonData","locationToMainParty","parseMainPartyData","getJsonDataFeatures","indexOf","topojson","objects","features","projection","fitSize","path","properties","SPROVINCE","code","smunicipal","PKLVDNUMBE","getMunicipalityVdNumber","center","projectionCenter","geometry","polylabel","coordinates","SMUNICIPAL","labelElements","regions","overlapCnt","getBoundingClientRect","j","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","slice","MapEmbed","checked","App","BarChart_barchart","regionName","Map_map","BarChart_barchartEmbed","Map_mapEmbed","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0XAEO,SAASA,EAAMC,EAAWC,EAAOC,EAAQC,GAC5C,IAOIC,EALAC,EAAe,CAAC,OAAQ,SAAU,OAClCC,EAAMN,EAAUO,OAAO,OACtBC,KAAK,QAASC,SAASR,GAJV,IAKbO,KAAK,SAAUC,SAASP,GAJX,IAQhBE,EADEM,SAASC,uBAAuB,WAAW,GAChCC,IAAU,YAEVA,IAAU,QAAQL,OAAO,OACnCC,KAAK,QAASL,EAAU,YACxBU,MAAM,UAAW,GAGtB,IAAIC,EAAIF,MACLG,WAAW,CAjBI,GAiBUd,IAExBe,EAAIJ,MACLG,WAAW,CAACb,EAnBG,KAqBlBI,EAAIC,OAAO,KACRC,KAAK,YAAa,iBAAiBN,EAAO,EAAEe,IAAe,KAC3DV,OAAO,QACPC,KAAK,QAASL,EAAU,qBACxBK,KAAK,YAAa,eAClBU,KAAK,oBACLV,KAAK,cAAe,UAEvBF,EAAIC,OAAO,KACRC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBN,EAAS,KAE/CI,EAAIC,OAAO,KACRC,KAAK,QAAS,UACdA,KAAK,YAAa,oBAErB,IAAIW,EAASb,EAAIC,OAAO,KACrBC,KAAK,QAASL,EAAU,kBACvBiB,EAAad,EAAIC,OAAO,KACzBC,KAAK,QAASL,EAAU,sBAE3BkB,KAAKC,KAAO,SAASC,EAAWC,GAC9B,IAAIC,EAAmB,GAOvB,SAASC,EAA0BC,EAAWC,GAC5C,OAAOH,EAAiBE,EAAUE,MAAM,KAAK,KAAOxB,EAAauB,EAAEvB,EAAayB,QAP9EN,GAAmBA,EAAe,KAAf,kBACrBA,EAAe,KAAf,iBAA+CO,QAAQ,SAAAC,GACrDP,EAAiBO,EAAKC,KAAKC,MAAQF,EAAKC,KAAKE,SAOjDC,QAAQC,IAAI,YAAad,GACzBT,EAAEwB,OAAOf,EAAUgB,IAAI,SAAUC,GAC7B,OAAOA,EAAEN,QAEblB,EAAEsB,OAAO,CAAC,EAAG,MAEThC,EAAImC,OAAO,WAAWC,aAAaC,SAAS,KAAKC,KAAKhC,IAAcE,IACpER,EAAImC,OAAO,WAAWC,aAAaC,SAAS,KAAKC,KAAKhC,IAAYI,GACnE6B,MAAM,GACNC,WAAW,SAASN,GAAK,OAAOA,EAAI,OAGvC,IAAIO,EAAO5B,EAAO6B,UAAP,IAAAC,OAAqB9C,EAAU,SAAU+C,KAAK3B,GAEzDwB,EAAKI,OACFT,aACAC,SAAS,KACTnC,KAAK,IAAK,SAASgC,GAClB,OAAOxB,EAAE,KAEVR,KAAK,SAAU,GACfK,MAAM,eAAgB,MACtBuC,SAEHL,EAAKM,QACA9C,OAAO,QACPC,KAAK,QAASL,EAAU,QACxBK,KAAK,IAAK,SAAUgC,GACnB,OAAO1B,EAAE0B,EAAEN,MAAMpB,EAAEwC,YAAY,KAEhC9C,KAAK,QAAuB,EAAdM,EAAEwC,YAAc,IAC9B9C,KAAK,OAAQ,SAACgC,EAAEZ,GAEf,OADAQ,QAAQC,IAAI,mBAAoBZ,EAAkBe,EAAEe,UAAUrB,KAAKL,MAAM,KAAK,IACvEH,EAA0Bc,EAAEe,UAAUrB,KAAMN,KAEpD4B,GAAG,YAAa,SAAShB,GAMtB,IAAyBN,EALzBtB,IAAUS,MACPb,KAAK,UAAW,IACnBJ,EAAWsC,aACNC,SAAS,KACT9B,MAAM,UAAW,IAItBT,EAAWqD,MAHcvB,EAGOM,EAAEe,UAAUrB,KAFnCA,EAAKL,MAAM,KAAK,GAAG6B,cAAcC,QAAQ,QAAS,SAASC,GAAI,OAAOA,EAAEC,gBAE7B,MAAQrB,EAAEsB,YAAc,MACvEjD,MAAM,OAASD,IAASmD,MAAS,MACjClD,MAAM,MAAQD,IAASoD,MAAQ,GAAM,QAE7CR,GAAG,WAAY,SAAShB,GACrB5B,IAAUS,MACPb,KAAK,UAAW,GACnBJ,EAAWsC,aACNC,SAAS,KACT9B,MAAM,UAAW,KAEzBL,KAAK,IAAK,SAASgC,GAClB,OAAOxB,EAAE,KAEVR,KAAK,SAAU,GAElBW,EAAO6B,UAAP,IAAAC,OAAqB9C,EAAU,SAAU+C,KAAK3B,GAC3Cf,KAAK,OAAQ,SAACgC,EAAGZ,GAAJ,OAAUF,EAA0Bc,EAAEe,UAAUrB,KAAMN,KACnEc,aACAC,SAAS,KACTnC,KAAK,IAAK,SAAUgC,GACnB,OAAOxB,EAAEiD,OAAOzB,EAAEsB,gBAEnBtD,KAAK,SAAU,SAAUgC,GACxB,OAAOtC,EAASc,EAAEiD,OAAOzB,EAAEsB,gBAG/B,IAAII,EAAW9C,EAAW4B,UAAX,IAAAC,OAAyB9C,EAAU,aAAc+C,KAAK3B,GAErE2C,EAASf,OACNT,aACAC,SAAS,KACTnC,KAAK,IAAK,SAASgC,GAClB,OAAOxB,EAAE,GAAK,IAEfH,MAAM,eAAgB,MACtBuC,SAEHc,EAASb,QAAQ9C,OAAO,QACrBC,KAAK,QAASL,EAAU,YACxBK,KAAK,IAAK,SAAUgC,GACnB,OAAO1B,EAAE0B,EAAEN,MAAMpB,EAAEwC,YAAY,IAEhC9C,KAAK,cAAe,UACpBA,KAAK,YAAa,QAClBA,KAAK,IAAK,SAASgC,GAClB,OAAOxB,EAAE,GAAK,IAElBI,EAAW4B,UAAX,IAAAC,OAAyB9C,EAAU,aAAc+C,KAAK3B,GACnDL,KAAK,SAASsB,GACb,OAAOA,EAAEsB,YAAc,MAExBpB,aACAC,SAAS,KACTnC,KAAK,IAAK,SAAUgC,GACnB,OAAOxB,EAAEiD,OAAOzB,EAAEsB,cAAgB,KAG1CzC,KAAK8C,QAAU,WACb7D,EAAI8C,UChKV,IAIegB,EAJO,gBAIPA,EAHU,mBAGVA,EAFK,4xKCIpB,IACMC,EAAS,IAAIC,IAAa,CAC9BC,KAAM,IAAIC,IAAS,CAAEC,IAFT,oCAEuBC,kBAAkB,EAAMC,QAAS,CAACC,eAAiB,yBACtFC,MAAO,IAAIC,MAeN,SAASC,IACd,OAAOV,EAAOW,MAAM,CAClBA,MAAOC,IAAFC,OCXT,IAwFIC,EACA3D,EAzFA4D,EAAkB,IAkFtB,SAASjF,EAAUkF,GACjB,OAAOC,IAAOD,IAAeA,EAO/B,IAAIE,EAAoB,EA4KTC,cAxKX,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAtE,KAAAmE,GACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAAtE,KAAAsE,OAAAG,EAAA,EAAAH,CAAAH,GAAA5C,KAAAvB,KAAMoE,IACN,IAAIM,EAAIJ,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,IA4BR,GA3BAA,EAAKO,MAAQ,CACXC,WAAY,EACZC,iBAAkB,yBAClBC,WAAY,WACZC,aAAc,GACdC,SAAU,GACVC,SAAU,GACVC,SAAU,IAERf,EAAMS,aACRR,EAAKO,MAAMC,WAAaT,EAAMS,YAE5BT,EAAMW,aACRV,EAAKO,MAAMG,WAAaX,EAAMW,YAE5BX,EAAMY,eACRX,EAAKO,MAAMI,aAAeZ,EAAMY,cAE9BZ,EAAMa,WACRZ,EAAKO,MAAMK,SAAWb,EAAMa,UAE1Bb,EAAMc,WACRb,EAAKO,MAAMM,SAAWd,EAAMc,UAE1Bd,EAAMe,WACRd,EAAKO,MAAMO,SAAWf,EAAMe,UAE1Bf,EAAMxF,OAASwF,EAAMvF,OACvBwF,EAAKO,MAAMhG,MAAQwF,EAAMxF,MACzByF,EAAKO,MAAM/F,OAASuF,EAAMvF,WACrB,KAAAuG,EAIDf,EAAKgB,6BAFPC,EAFGF,EAEHE,OACAC,EAHGH,EAGHG,OAEFlB,EAAKO,MAAMhG,MAAQ0G,EACnBjB,EAAKO,MAAM/F,OAAS0G,EAvCL,OAyCjBrB,EAAoBsB,YAAY,WAC9Bd,EAAKzE,KAAKyE,EAAKe,eAAgBf,EAAKE,QACnCb,GACHM,EAAKqB,mBAAqBrB,EAAKqB,mBAAmBC,KAAxBrB,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,KAC1BA,EAAKuB,mBAAqBvB,EAAKuB,mBAAmBD,KAAxBrB,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,KAC1BA,EAAKwB,YAAcxB,EAAKwB,YAAYF,KAAjBrB,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,KA9CFA,mFAkDjBrE,KAAKC,KAAKD,KAAKyF,eAAgBzF,KAAK4E,OACpCvF,SAASyG,iBAAiB/C,EAAsB/C,KAAK0F,oBACrDrG,SAASyG,iBAAiB/C,EAAyB/C,KAAK4F,oBACxDG,OAAOD,iBAAiB,SAAU9F,KAAK6F,YAAa,kDAIpD7F,KAAKC,KAAKD,KAAKyF,eAAgBzF,KAAK4E,sDAIpCvF,SAAS2G,oBAAoBjD,EAAsB/C,KAAK0F,oBACxDrG,SAAS2G,oBAAoBjD,EAAyB/C,KAAK4F,oBAC3DG,OAAOC,oBAAoB,SAAUhG,KAAK6F,aAC1CI,cAAc/B,wDAId,IAAIoB,EAASY,KAAKC,IAAI,IAAK9G,SAAS+G,KAAKC,YAAa,KAItD,OAHIhH,SAAS+G,KAAKC,YAAc,MAC9Bf,EAASjG,SAAS+G,KAAKC,YAAc,IAEhC,CACLf,SACAC,OAHWD,EAAO,2CAOR,IAAAgB,EAIRtG,KAAKqF,6BAFPC,EAFUgB,EAEVhB,OACAC,EAHUe,EAGVf,OAEEzB,GACFA,EAAMhB,UACRgB,EAAQ,IAAIpF,EAAMsB,KAAKyF,eAAgBH,EAAQC,EAAQzG,GACvDkB,KAAKuG,SAAS,CAAC3H,MAAO0G,EAAQzG,OAAQ0G,+CAGrBiB,GACjB,IAAIC,EAAWD,EAAME,OACrB3F,QAAQC,IAAI,qBAAsByF,GAClCzG,KAAKuG,SAASE,8CAGGD,GACjB,IAAIC,EAAWD,EAAME,OACrB3F,QAAQC,IAAI,qBAAsByF,GAC9B3C,GACFA,EAAMhB,UACRgB,EAAQ,IAAIpF,EAAMsB,KAAKyF,eAAgBzF,KAAK4E,MAAMhG,MAAOoB,KAAK4E,MAAM/F,OAAQC,GAC5EkB,KAAKuG,SAASE,0CAId,OAAOlH,IAAUS,KAAK2G,KAAKC,sDAI3B,MAA6B,YAAzB5G,KAAK4E,MAAMG,WACN,KAEoB,YAAzB/E,KAAK4E,MAAMG,WACN/E,KAAK4E,MAAMI,aAES,gBAAzBhF,KAAK4E,MAAMG,WACN/E,KAAK4E,MAAMK,SAES,mBAAzBjF,KAAK4E,MAAMG,WACN/E,KAAK4E,MAAMK,SAAW,IAAMjF,KAAK4E,MAAMO,cADhD,mCAMA,OACI0B,EAAAC,EAAAC,cAAA,OAAKjI,UAAU,YACb+H,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,gBAA1B,mBAA2DkB,KAAKgH,gBAAhE,OACAH,EAAAC,EAAAC,cAAA,OACEE,IAAI,eACJnI,UAAWA,EAAU,cACrBU,MAAO,CAACZ,MAAOoB,KAAK4E,MAAMhG,MAAOC,OAAQmB,KAAK4E,MAAM/F,wCAKzDF,EAAWyF,GACd,IAAIM,EAAO1E,KAGLkH,EAAc,CD/MnB,SAAuBC,GAC5B,IAAIrC,EAAmBqC,EAAQrC,iBAC/B,GAAKA,EAAL,CAEA,GAA0B,YAAtBqC,EAAQpC,WACV,OAAO/B,EAAOW,MAAM,CAClBA,MAAOC,IAAFwD,IAGoBtC,EAICqC,EAAQtC,cAwB/B,GAA0B,YAAtBsC,EAAQpC,WACjB,OAAO/B,EAAOW,MAAM,CAClBA,MAAOC,IAAFyD,IAGoBvC,EACMqC,EAAQnC,aAIbmC,EAAQtC,cAuB/B,GAA0B,gBAAtBsC,EAAQpC,WAA8B,CAC/C,IAAIG,EAAWiC,EAAQlC,SAASzE,MAAM,OAAO,GAE7C,OAAOwC,EAAOW,MAAM,CAClBA,MAAOC,IAAF0D,IAGoBxC,EACKqC,EAAQnC,aAChBE,EAIIiC,EAAQtC,cAwB/B,MAA0B,mBAAtBsC,EAAQpC,WACV/B,EAAOW,MAAM,CAClBA,MAAOC,IAAF2D,IAGkBzC,EACNqC,EAAQhC,SACsBgC,EAAQjC,SAM7BiC,EAAQtC,mBAb/B,GCmGqB2C,CAAcpD,IAGpC,IAAKjE,EAAiB,CACpB,IAAIsH,EAAoB/D,IACxBwD,EAAYQ,KAAKD,GAGnBE,QAAQC,IAAIV,GAAaW,KAAK,SAASC,GACrC,IAAIC,EAAYD,EAAO,GACvB3H,EAAkBA,GAAmB2H,EAAO,GAC5CpD,EAAKsD,UAAUrJ,EAAWyF,EAAO2D,EAAW5H,KAC3C8H,MAAM,SAAAC,GAAK,OAAInH,QAAQmH,MAAMA,uCAO1BvJ,EAAWyF,EAAOvC,EAAM1B,GAC9B,IAAID,EC3QL,SAAwB2B,EAAMuC,GACjC,IAAa+D,EACTpD,EAAaX,EAAMW,WAUvB,KAREoD,EADgB,YAAdpD,EACUlD,EAAI,KAAJ,WAA2BuG,MAAM,GACtB,YAAdrD,EACGlD,EAAI,KAAJ,qBAAqCuG,MAAM,GAChC,gBAAdrD,EACElD,EAAI,KAAJ,oBAAoCuG,MAAM,GAEzCvG,EAAI,KAAJ,yBAAyCuG,MAAM,IAI3D,OADArH,QAAQmH,MAAM,yBACP,KAGT,IAAIG,EAAWF,EAAS,KAIxB,OAHmBE,EAAQ,cAAoBA,EAAQ,WACjC,MAEPnH,IAAI,SAASN,GACxB,IAAI0H,EAAK1H,EAAI,KACb,MAAO,CACHC,KAAMyH,EAAE,MAAF,aACNC,WAAYD,EAAE,WACd7F,YAAa6F,EAAE,YACfpG,UAAWoG,EAAE,SDgPDE,CAAe3G,EAAMuC,GAEjCxF,EAAQQ,SAASgF,EAAMxF,OACvBC,EAASO,SAASgF,EAAMvF,QACvBiF,IACHA,EAAQ,IAAIpF,EAAMC,EAAWC,EAAOC,EAAQC,IAC9CgF,EAAM7D,KAAKC,EAAWC,UAtKPsI,aEvGRC,EAJF,CACTC,OAAU,kFCQd,SAAS7J,EAAU8J,GACf,OAAOC,IAAgBD,IAAoB3E,IAAO2E,IAAoBA,MCWtEzI,ED2KW2I,cAjLX,SAAAA,EAAY1E,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAtE,KAAA8I,GACfzE,EAAAC,OAAAE,EAAA,EAAAF,CAAAtE,KAAAsE,OAAAG,EAAA,EAAAH,CAAAwE,GAAAvH,KAAAvB,KAAMoE,IACN,IAAIM,EAAIJ,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,IAFO,OAGfA,EAAKO,MAAQ,CACTmE,UAAW,OACXjE,iBAAkB,yBAClBC,WAAY,WACZC,aAAc,eACdC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVN,WAAY,EAEZmE,eAAgB,IJfnBhG,EAAOW,MAAM,CAClBA,MAAOC,IAAFqF,OIiBIpB,KAAK,SAAShG,GACX,IAAImH,EAAiBnH,EAAI,KAAJ,UAA0BX,IAAI,SAAAP,GAAI,OAAIA,EAAI,cAC/D+D,EAAK6B,SAAS,CAACyC,qBAChBf,MAAM,SAAAC,GAAK,OAAInH,QAAQmH,MAAMA,KAnBrB7D,mLA4BM6E,GACrBlJ,KAAKuG,SAAS,CAACzB,iBAAkBoE,EAAEC,OAAOC,mDAG3BF,GACf,IAAIzC,EAAW,CAAC1B,WAAYmE,EAAEC,OAAOC,OACrCpJ,KAAKuG,SAASE,qCAGRyC,GACN,IAAI1C,EAAQ,IAAI6C,YAAYtG,EAAyB,CAAE2D,OAAQ1G,KAAK4E,QACpEvF,SAASiK,cAAc9C,oCAGjB,IAAA+C,EAAAvJ,KACF2I,EAASD,EAAOC,OADda,EAYFxJ,KAAK4E,MATLmE,EAHES,EAGFT,UACAjE,EAJE0E,EAIF1E,iBACAC,EALEyE,EAKFzE,WACAC,EANEwE,EAMFxE,aACAC,EAPEuE,EAOFvE,SACAC,EAREsE,EAQFtE,SACAC,EATEqE,EASFrE,SACAN,EAVE2E,EAUF3E,WACAmE,EAXEQ,EAWFR,eAEJ,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACI0C,KAAK,OACL3K,UAAWA,EAAU,gBACrB4K,YAAY,kBACZC,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACwC,UAAWG,EAAEC,OAAOC,YAGxDvC,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQjI,UAAWA,EAAU,gBAC1BsK,MAAOtE,EACP6E,SAAU3J,KAAK4J,yBAAyBjE,KAAK3F,OAEtCgJ,EAAe9H,IAAI,SAAA2I,GACf,OAAQhD,EAAAC,EAAAC,cAAA,UAAQ+C,IAAKD,EAAMT,MAAOS,GAAOA,OAK3DhD,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQjI,UAAWA,EAAU,gBAC1BsK,MAAOrE,EACP4E,SAAU3J,KAAK+J,mBAAmBpE,KAAK3F,OACpC6G,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,YAAd,YACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,YAAd,YACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,gBAAd,gBACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,mBAAd,qBAIS,YAAdrE,GACC8B,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACI0C,KAAK,OACL3K,UAAWA,EAAU,gBACrB4K,YAAY,eACZN,MAAOpE,EACP2E,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACvB,aAAckE,EAAEC,OAAOC,SACrDY,SAAuB,YAAZjF,KAIN,gBAAdA,GACC8B,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACI0C,KAAK,OACL3K,UAAWA,EAAU,gBACrB4K,YAAY,oBACZN,MAAOnE,EACP0E,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACtB,SAAUiE,EAAEC,OAAOC,SACjDY,SAAuB,YAAZjF,KAIN,mBAAdA,GACC8B,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACI0C,KAAK,OACL3K,UAAWA,EAAU,gBACrB4K,YAAY,MACZN,MAAOlE,EACPyE,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACrB,SAAUgE,EAAEC,OAAOC,SACjDY,SAAuB,YAAZjF,KAIN,mBAAdA,GACC8B,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SACI0C,KAAK,OACL3K,UAAWA,EAAU,gBACrB4K,YAAY,WACZN,MAAOjE,EACPwE,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACpB,SAAU+D,EAAEC,OAAOC,SACjDY,SAAuB,YAAZjF,KAGzB8B,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACE0C,KAAK,SACL3K,UAAWA,EAAU,gBACrB4K,YAAY,IACZN,MAAOvE,EACP8E,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAAC1B,WAAYqE,EAAEC,OAAOC,YAEzDvC,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACxB+H,EAAAC,EAAAC,cAAA,UAAQ0C,KAAK,SAASQ,QAASjK,KAAKkK,UAAUvE,KAAK3F,MAAOlB,UAAWA,EAAU,OAAS,IAAMA,EAAU,gBAAxG,YAEF+H,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,eACtB+H,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,EAAU,cACxB+H,EAAAC,EAAAC,cAAA,YAAO,gBAAAnF,OAAgB+G,EAAhB,6HAAA/G,OAEwBmH,EAFxB,mFAAAnH,OAIsBkD,EAJtB,iDAAAlD,OAKgBmD,EALhB,mDAAAnD,OAMkBoD,EANlB,+CAAApD,OAOcqD,EAPd,+CAAArD,OAQcsD,EARd,+CAAAtD,OAScuD,EATd,iDAAAvD,OAUgBiD,EAVhB,+HAaWvC,QAAQ,iBAAkB,eA5KpCmG,uFCMxB0B,GAAc,UAIlB,SAASrL,GAAUkF,GACjB,OAAOC,KAAOD,IAAeA,EAG/B,IAAIoG,GAAgB,CAChB,CACIvJ,KAAQ,UACRwJ,aAAgB,MAChBC,MAAS,CAAC,CAACtF,aAAe,UAAUC,SAAW,mCAAmCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,yCAAyCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,qCAAqCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,sCAAsCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,4BAA4BC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,kCAAkCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,mCAAmCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,qCAAqCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,wCAAwCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,qCAAqCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,sCAAsCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,mCAAmCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,uCAAuCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,mCAAmCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,gCAAgCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,qCAAqCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,uCAAuCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,wCAAwCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,0CAA0CC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,sCAAsCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,kCAAkCC,SAAW,UAAU,CAACF,aAAe,UAAUC,SAAW,mEAAmEC,SAAW,YAEr1E,CACIrE,KAAQ,aACRwJ,aAAgB,KAChBC,MAAS,CAAC,CAACtF,aAAe,aAAaC,SAAW,+CAA+CC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,qCAAqCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,6BAA6BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,uCAAuCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,0BAA0BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,qCAAqCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,wCAAwCC,SAAW,WAElpD,CACIrE,KAAQ,UACRwJ,aAAgB,KAChBC,MAAS,CAAC,CAACtF,aAAe,UAAUC,SAAW,+BAA+BC,SAAW,OAAO,CAACF,aAAe,UAAUC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,UAAUC,SAAW,6BAA6BC,SAAW,SAAS,CAACF,aAAe,UAAUC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,UAAUC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,UAAUC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,UAAUC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,UAAUC,SAAW,wCAAwCC,SAAW,SAAS,CAACF,aAAe,UAAUC,SAAW,4CAA4CC,SAAW,OAAO,CAACF,aAAe,UAAUC,SAAW,iCAAiCC,SAAW,SAEr5B,CACIrE,KAAQ,gBACRwJ,aAAgB,MAChBC,MAAS,CAAC,CAACtF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,OAAO,CAACF,aAAe,gBAAgBC,SAAW,8BAA8BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,kCAAkCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,oCAAoCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,2CAA2CC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,gCAAgCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,4BAA4BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,qCAAqCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,uCAAuCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,qCAAqCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,4CAA4CC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,kCAAkCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,yBAAyBC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,4BAA4BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,oCAAoCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,2BAA2BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,uCAAuCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,0BAA0BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,0CAA0CC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,qCAAqCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,6BAA6BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,gCAAgCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,qCAAqCC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,UAAU,CAACF,aAAe,gBAAgBC,SAAW,kCAAkCC,SAAW,YAEnzJ,CACIrE,KAAQ,aACRwJ,aAAgB,KAChBC,MAAS,CAAC,CAACtF,aAAe,aAAaC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,2BAA2BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,6BAA6BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,mCAAmCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,sCAAsCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,2BAA2BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,qCAAqCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,qDAAqDC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,yCAAyCC,SAAW,WAEzwD,CACIrE,KAAQ,aACRwJ,aAAgB,KAChBC,MAAS,CAAC,CAACtF,aAAe,aAAaC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,6BAA6BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,mCAAmCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,2BAA2BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,qCAAqCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,0BAA0BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,6BAA6BC,SAAW,SAAS,CAACF,aAAe,aAAaC,SAAW,gCAAgCC,SAAW,SAEhyD,CACIrE,KAAQ,eACRwJ,aAAgB,KAChBC,MAAS,CAAC,CAACtF,aAAe,eAAeC,SAAW,mCAAmCC,SAAW,OAAO,CAACF,aAAe,eAAeC,SAAW,mCAAmCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,2CAA2CC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,0CAA0CC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,6BAA6BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,2BAA2BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,2BAA2BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,6BAA6BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,mCAAmCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,wCAAwCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,2BAA2BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,0CAA0CC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,mCAAmCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,2BAA2BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,4CAA4CC,SAAW,SAE/mH,CACIrE,KAAQ,gBACRwJ,aAAgB,KAChBC,MAAS,CAAC,CAACtF,aAAe,gBAAgBC,SAAW,sCAAsCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,4BAA4BC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,sCAAsCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,gCAA6BC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,sCAAsCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,sBAAsBC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,+BAA+BC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,mCAAmCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,gBAAgBC,SAAW,2BAA2BC,SAAW,WAErhF,CACIrE,KAAQ,eACRwJ,aAAgB,KAChBC,MAAS,CAAC,CAACtF,aAAe,eAAeC,SAAW,sCAAsCC,SAAW,OAAO,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,8CAA8CC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,iCAAiCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,6BAA6BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,8BAA8BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,sCAAsCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,wCAAwCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,oCAAoCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,6CAA6CC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,gCAAgCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,2CAA2CC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,0BAA0BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,0CAA0CC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,0BAA0BC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,kCAAkCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,uCAAuCC,SAAW,SAAS,CAACF,aAAe,eAAeC,SAAW,wCAAwCC,SAAW,YA4gB33EqF,eAtgBX,SAAAA,EAAYnG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtE,KAAAuK,IACflG,EAAAC,OAAAE,EAAA,EAAAF,CAAAtE,KAAAsE,OAAAG,EAAA,EAAAH,CAAAiG,GAAAhJ,KAAAvB,KAAMoE,KACDQ,MAAQ,CACT4F,mBAAmB,EACnB1F,iBAAkB,yBAClBC,WAAY,WACZC,aAAc,GACdC,SAAU,GACVC,SAAU,GACVC,SAAU,IAGVf,EAAMW,aACNV,EAAKO,MAAMG,WAAaX,EAAMW,YAE9BX,EAAMY,eACNX,EAAKO,MAAMI,aAAeZ,EAAMY,cAEhCZ,EAAMa,WACNZ,EAAKO,MAAMK,SAAWb,EAAMa,UAE5Bb,EAAMoG,oBACNnG,EAAKO,MAAM4F,kBAAoBpG,EAAMoG,mBAEzCnG,EAAKuB,mBAAqBvB,EAAKuB,mBAAmBD,KAAxBrB,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,KAxBXA,oEA2Bd1F,EAAWyF,GACZpE,KAAKgI,UAAUrJ,EAAWyF,+CAI1BpE,KAAKC,KAAKD,KAAKyF,eAAgBzF,KAAK4E,OACpCvF,SAASyG,iBAAiB/C,EAAoB/C,KAAK4F,mEAIrDvG,SAAS2G,oBAAoBjD,EAAoB/C,KAAK4F,iEAIpD5F,KAAKC,KAAKD,KAAKyF,eAAgBzF,KAAK4E,kDAGrB4B,GACf,IAAIC,EAAWD,EAAME,OACrB1G,KAAKuG,SAASE,iDAGI1B,EAAY0F,GAC9B,IAAIhE,EACJ,GAAkB,YAAd1B,GAEA,GADA0B,EAAW,CAAC1B,WAAYA,GACpB/E,KAAK4E,MAAMG,YAAc0B,EAAS1B,WAClC,YACD,GAAkB,YAAdA,GAKP,GAJA0B,EAAW,CACP1B,WAAYA,EACZC,aAAcyF,EAAc5J,MAE5Bb,KAAK4E,MAAMG,YAAc0B,EAAS1B,YAAc/E,KAAK4E,MAAMI,cAAgByB,EAASzB,aACpF,YACD,GAAkB,gBAAdD,IACP0B,EAAW,CACP1B,WAAYA,EACZC,aAAcyF,EAAczF,aAC5BC,SAAUwF,EAAcxF,SACxBC,SAAUuF,EAAcvF,UAExBlF,KAAK4E,MAAMG,YAAc0B,EAAS1B,YAC/B/E,KAAK4E,MAAMI,cAAgByB,EAASzB,cACpChF,KAAK4E,MAAM6B,UAAYA,EAASxB,UACnC,OAGR,IAAIuB,EAAQ,IAAI6C,YAAYtG,EAAsB,CAAE2D,OAAQD,IAC5DpH,SAASiK,cAAc9C,GACvBxG,KAAKuG,SAASE,2CAId,MAA6B,YAAzBzG,KAAK4E,MAAMG,WACN,KAEoB,YAAzB/E,KAAK4E,MAAMG,WACN/E,KAAK4E,MAAMI,aAES,gBAAzBhF,KAAK4E,MAAMG,WACN/E,KAAK4E,MAAMK,SAES,mBAAzBjF,KAAK4E,MAAMG,WACN/E,KAAK4E,MAAMK,SAAW,IAAMjF,KAAK4E,MAAMO,cADhD,yCAMA,OAAO5F,IAAUS,KAAK2G,KAAKC,0DAI3B,OAAOrH,IAAUS,KAAK2G,KAAK+D,0CAGrB,IAAAnB,EAAAvJ,KAKFwK,EACAxK,KAAK4E,MADL4F,kBAEJ,OACI3D,EAAAC,EAAAC,cAAA,OAAKjI,UAAU,kBAEN0L,GACG3D,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,eACtB+H,EAAAC,EAAAC,cAAC4D,EAAA,QAAD,CACIC,oBAAoB,IACpBC,MAbV,CACVC,eAAgB,WAaIC,gBAAiB/K,KAAK+K,gBACtBjM,UAAWA,GAAU,eAErB+H,EAAAC,EAAAC,cAAC4D,EAAA,IAAD,CAAKK,GAAG,kBAAkBf,QAASjK,KAAKiL,sBAAsBtF,KAAK3F,KAAM,aAAzE,YAIIoK,GAAclJ,IAAI,SAAAgK,GACd,OAAOrE,EAAAC,EAAAC,cAAC4D,EAAA,IAAD,CACHb,IAAKoB,EAASb,aACdW,GAAI,mBAAmBE,EAASb,aAChCJ,QAASV,EAAK0B,sBAAsBtF,KAAK4D,EAAM,WAAY2B,IACrDA,EAASrK,KAEPqK,EAASZ,MAAMpJ,IAAI,SAAAiK,GACf,OAAOtE,EAAAC,EAAAC,cAAC4D,EAAA,IAAD,CACHb,IAAKqB,EAAKjG,SACV8F,GAAI,eAAeG,EAAKjG,SACxB+E,QAASV,EAAK0B,sBAAsBtF,KAAK4D,EAAM,eAAgB4B,IAE1DA,EAAKlG,SAASzE,MAAM,KAAK,GAAGA,MAAM,KAAK,WAWvFR,KAAKgH,gBAENH,EAAAC,EAAAC,cAAA,OAAKjI,UAAU,kBAAkBmI,IAAI,WACjCJ,EAAAC,EAAAC,cAACqE,GAAAtE,EAAD,CAAc2C,KAAM,OAAQ4B,MAAO,OAAQxM,OAAQ,IAAKD,MAAO,OAEnEiI,EAAAC,EAAAC,cAAA,OAAKE,IAAI,eAAenI,UAAU,2CAKpCH,EAAWyF,GACjB,IAAIM,EAAO1E,KACPsL,EAAkB,0BA6BtB,IAQIvM,EARAwM,EAAuB7C,EAAOC,OAAS,YA3B3C,WAeI,OAAOjE,EAAKE,MAAMG,YACd,IAAK,WACD,OAAOuG,EACX,IAAK,WACD,MAjBwB,CACxBE,QAAW,qBACXC,WAAc,oBACdC,QAAW,oBACXC,gBAAiB,qBACjBC,aAAc,oBACdC,aAAc,oBACdC,eAAgB,oBAChBC,gBAAiB,oBACjBC,eAAgB,qBAQWtH,EAAKE,MAAMI,cAC1C,IAAK,eACD,OAAON,EAAKE,MAAMM,SAAW,YACjC,QACI,OAAO,MAIsC+G,GAEzDvH,EAAKwH,oBACA1M,MAAM,UAAW,SACjB6B,aACAC,SAAS,KACT9B,MAAM,UAAW,GAIpBT,EADEM,SAASC,uBAAuB,WAAW,GAChCC,IAAU,YAEVA,IAAU,QAAQL,OAAO,OACnCC,KAAK,QAASL,GAAU,YACxBU,MAAM,UAAW,GAGtBuB,QAAQC,IAAI,cAAemL,gDAC3BpL,QAAQC,IAAI,uBAAwBuK,GAIpC5M,EAAUgD,UAAU,OAAOI,SAC3B,IAAI9C,EAAMN,EAAUO,OAAO,OACtBC,KAAK,sBAAuB,iBAAiBK,MAAM,mBAAmB,WACtEL,KAAK,UAAW,eAChBiN,QAAQ,eAAe,GAqCxBC,EAAgB9M,IAAQgM,GACxBe,ELvJL,SAAwBnF,GAC7B,IAAIrC,EAAmBqC,EAAQrC,iBAC/B,GAAKA,EAAL,CAEA,GAA0B,YAAtBqC,EAAQpC,WACV,OAAO/B,EAAOW,MAAM,CAClBA,MAAOC,IAAF2I,IAGoBzH,KA2BtB,GAA0B,YAAtBqC,EAAQpC,WACjB,OAAO/B,EAAOW,MAAM,CAClBA,MAAOC,IAAF4I,IAGoB1H,EACKqC,EAAQnC,gBA4BnC,GAA0B,gBAAtBmC,EAAQpC,WAA8B,CAC/ChE,QAAQC,IAAI,eAAgBmG,GAC5B,IAAIsF,EAActF,EAAQlC,SAASzE,MAAM,OAAO,GAC9C,OAAOwC,EAAOW,MAAM,CAClBA,MAAOC,IAAF8I,IAGkB5H,EACwB2H,OKyEnBE,CAAevI,GAC3CrD,QAAQC,IAAI,iBAAkBoD,GAC9B,IAAI8C,EAAc,CAACmF,EAAeC,GAElC,IAAKnM,EAAiB,CACpB,IAAIsH,EAAoB/D,IACxBwD,EAAYQ,KAAKD,GAGnBE,QAAQC,IAAIV,GAAaW,KAAK,SAASC,GACnC/G,QAAQC,IAAI,qBAAsB8G,GAClC,IAAI8E,EAAc9E,EAAO,GACrB+E,EHvTT,SAA4BhL,EAAMuC,GACrC,IAAKvC,EAAO,OAAO,KACnB,IAAIgL,EAAsB,GAEtB9H,EAAaX,EAAMW,WA2BvB,OA1BAhE,QAAQC,IAAI,qBAAsB+D,EAAYlD,GAC3B,aAAfkD,EACQlD,EAAI,KAAJ,qBAAqCuG,MACvC1H,QAAQ,SAASC,GACnB,IAAIC,EAAOD,EAAKC,KACZoE,EAAepE,EAAI,SAAJ,KACfN,EAAYM,EAAI,UAAJ,MAA2B,GAA3B,gBAChBiM,EAAoB7H,GAAgB1E,IAElB,aAAfyE,EACClD,EAAI,KAAJ,oBAAoCuG,MACtC1H,QAAQ,SAASC,GACnB,IAAIC,EAAOD,EAAKC,KACZsE,EAAWtE,EAAI,SAAJ,KACXN,EAAYM,EAAI,UAAJ,MAA2B,GAA3B,gBAChBiM,EAAoB3H,GAAY5E,IAG5BuB,EAAI,KAAJ,yBAAyCuG,MAC3C1H,QAAQ,SAASC,GACnB,IAAIC,EAAOD,EAAKC,KACZuE,EAAWvE,EAAI,SAAJ,SACXN,EAAYM,EAAI,UAAJ,MAA2B,GAA3B,gBAChBiM,EAAoB1H,GAAY7E,IAGjCuM,EGwR2BC,CAAmBhF,EAAO,GAAI1D,GACxDjE,EAAkBA,GAAmB2H,EAAO,GAE5C/G,QAAQC,IAAI,sBAAuB6L,GAEnC,IAuCIE,EAvCA3M,EAAmB,GACnBD,GAAmBA,EAAe,KAAf,kBACrBA,EAAe,KAAf,iBAA+CO,QAAQ,SAAAC,GACrDP,EAAiBO,EAAKC,KAAKC,MAAQF,EAAKC,KAAKE,SAGjDC,QAAQC,IAAI,mBAAoBZ,IAkCmB,IAA/CmL,EAAqByB,QAAQ,eAC7BJ,EAAcK,IAAiBL,EAAaA,EAAYM,QAAQxI,EAAKE,MAAMM,YAG/E6H,EAAsBH,EAAYO,SAElC,IAAIC,EAAa7N,MAAiB8N,QAAQ,CA3GtC,IACA,KA0G8CT,GAC9CU,EAAO/N,MAAa6N,WAAWA,GA8DnC,GA3DAnO,EAAI0C,UAAJ,IAAAC,OAAkB9C,GAAU,YACvB+C,KAAKkL,GACL/K,QACA9C,OAAO,QACPC,KAAK,QAASL,GAAU,WACxBK,KAAK,SA/XE,WAgYPA,KAAK,OAxCV,SAAqCgC,EAAGZ,GACpC,IAAID,EAM6BiN,EAL7BxI,EAAaL,EAAKE,MAAMG,WAC5B,GAAmB,aAAfA,EAA2B,CAC3B,IAAIC,EAAe7D,EAAEoM,WAAWC,UAChClN,EAAYuM,EAAoB7H,QAC7B,GAAmB,aAAfD,EAA2B,KAI9BG,GAHyBqI,EAGMpM,EAAEoM,YAFfE,MAAQF,EAAWG,WAAWlN,MAAM,KAAK,GAAG8B,QAAQ,MAAO,IAGjFhC,EAAYuM,EAAoB3H,OAC7B,KAICC,EAHJ,SAAiCoI,GAC7B,OAAOA,EAAWI,WAEPC,CAAwBzM,EAAEoM,YACzCxM,QAAQC,IAAI,4BAA6BmE,GACzC7E,EAAYuM,EAAoB1H,GAEpC,OA3BJ,SAAmC7E,GACjC,OAAKA,GAELS,QAAQC,IAAI,4BAA6BV,EAAWF,EAAiBE,EAAUE,MAAM,KAAK,KACnFJ,EAAiBE,EAAUE,MAAM,KAAK,KAAO2J,IAF3CA,GAyBA9J,CAA0BC,KAqBhCnB,KAAK,KAAM,SAASgC,EAAGZ,GACpB,gBAAAqB,OAAiBrB,KAEpBpB,KAAK,IAAKmO,GAgBe,iBAA1B5I,EAAKE,MAAMG,YACX9F,EAAI0C,UAAU,gBACTE,KAAKkL,GACT/K,QAAQ9C,OAAO,QACXC,KAAK,QAAS,eACdA,KAAK,YAAa,QAClBA,KAAK,YAAa,SAASgC,GACxB,IAAI0M,EAAQC,EACZ,MAAwB,YAApB3M,EAAE4M,SAAStE,MACXoE,EAASG,KAAU7M,EAAE4M,SAASE,cAC9BH,EAAmBV,EAAWS,IACb,IAAM,GAChB,aAAeC,EAAmB,MAEzCD,EAASG,KAAU7M,EAAE4M,SAASE,YAAY,KAC1CH,EAAmBV,EAAWS,IACb,IAAM,EAChB,aAAeC,EAAmB,OAGhD3O,KAAK,KAAM,SACXK,MAAM,cAAe,UACrBK,KAAK,SAASsB,GACX,MAA8B,aAA1BuD,EAAKE,MAAMG,WACJ5D,EAAEoM,WAAWC,UACa,aAA1B9I,EAAKE,MAAMG,WACX5D,EAAEoM,WAAWG,WAAWlN,MAAM,KAAK,GAAGA,MAAM,KAAK,GAEjDW,EAAEoM,WAAWW,WAAW1N,MAAM,KAAK,GAAGA,MAAM,KAAK,KAK1C,iBAA1BkE,EAAKE,MAAMG,WAA+B,CAC1C,IAIIxE,EAJA4N,EAAgB9O,SAASC,uBAAuB,eAEhD8O,EAAU,GACVC,EAAa,GAGjB,IAAK9N,EAAI,EAAGA,EAAIwM,EAAoBtM,OAAQF,IACxC6N,EAAQ7N,GAAK4N,EAAc5N,GAAG+N,wBAGlC,IAAK/N,EAAI,EAAGA,EAAIwM,EAAoBtM,OAAQF,IAAM,CAC9C,IAAK,IAAIgO,EAAI,EAAGA,EAAIhO,EAAGgO,IAAM,CACzB,IAAIC,EAAQJ,EAAQ7N,GAChBkO,EAAQL,EAAQG,KACJC,EAAME,MAAQD,EAAME,MAChCH,EAAMG,KAAOF,EAAMC,OACnBF,EAAMI,OAASH,EAAMI,KACrBL,EAAMK,IAAMJ,EAAMG,UAElBP,EAAW9N,GAAK8N,EAAW9N,GAAK8N,EAAW9N,GAAK,EAAI,GAGxD8N,EAAW9N,GAAK,EAChB4N,EAAc5N,GAAGuO,aAAa,UAAW,GAClCT,EAAW9N,GAAK,IACvB4N,EAAc5N,GAAGwO,UAAYZ,EAAc5N,GAAGwO,UAAUC,MAAM,EAAG,GAAK,QAQlF/P,EAAI0C,UAAU,eACTE,KAAKkL,GACT/K,QACI9C,OAAO,QACPC,KAAK,IAAKmO,GACVnO,KAAK,QAAS,cACdA,KAAK,KAAM,SAASgC,EAAGZ,GACpB,oBAAAqB,OAAqBrB,KAExBpB,KAAK,OAAQ,eACbgD,GAAG,YAAa,SAAShB,EAAGZ,GACzBhB,IAAA,WAAAqC,OAAqBrB,IAChBpB,KAAK,eAAgB,GACrBK,MAAM,eAAgB,MAE9B2C,GAAG,YAAa,SAAShB,GACQ,iBAA1BuD,EAAKE,MAAMG,aACfhG,EAAWsC,aACNC,SAAS,KACT9B,MAAM,UAAW,GAUtBT,EAAWqD,KARuB,aAA1BsC,EAAKE,MAAMG,WACJ5D,EAAEoM,WAAWC,UACa,aAA1B9I,EAAKE,MAAMG,WACX5D,EAAEoM,WAAWG,WAAWlN,MAAM,KAAK,GAAGA,MAAM,KAAK,GAEjDW,EAAEoM,WAAWW,WAAW1N,MAAM,KAAK,GAAGA,MAAM,KAAK,IAI3DhB,MAAM,OAASD,IAASmD,MAAS,MACjClD,MAAM,MAAQD,IAASoD,MAAQ,GAAM,SAE7CR,GAAG,WAAY,SAAShB,EAAGZ,GACxBhB,IAAA,WAAAqC,OAAqBrB,IAChBpB,KAAK,eAAgB,GACrBK,MAAM,eAAgB,GAEG,iBAA1BkF,EAAKE,MAAMG,YAEfhG,EAAWsC,aACNC,SAAS,KACT9B,MAAM,UAAW,KAEzB2C,GAAG,QAAS,SAAShB,EAAGZ,GACrB,IAAImE,EAAKE,MAAM4F,kBAAf,CAGAzJ,QAAQC,IAAI,cAAeT,EAAGY,EAAEoM,YAChCxO,EAAWsC,aACNC,SAAS,KACT9B,MAAM,UAAW,GAEtB,IAWiC+N,EAX7BxI,EAAaL,EAAKE,MAAMG,WAE5B,GAAmB,aAAfA,EACA0B,EAAW,CACP1B,WAAY,WACZC,aAAc7D,EAAEoM,WAAWC,WAE/BhH,EAAQ,IAAI6C,YAAYtG,EAAsB,CAAE2D,OAAQD,IACxDpH,SAASiK,cAAc9C,GACvB9B,EAAK6B,SAASE,QACX,GAAmB,aAAf1B,EAA2B,CAIlC0B,EAAW,CACP1B,WAAY,eACZC,aAAcN,EAAKE,MAAMI,aACzBC,SAAU9D,EAAEoM,WAAWG,WACvBxI,UAPyBqI,EAOKpM,EAAEoM,WANzBA,EAAWE,MAAQF,EAAWG,WAAWlN,MAAM,KAAK,GAAG8B,QAAQ,MAAO,MAQjFkE,EAAQ,IAAI6C,YAAYtG,EAAsB,CAAE2D,OAAQD,IACxDpH,SAASiK,cAAc9C,GAEvB9B,EAAK6B,SAASE,OACX,KAICA,EAAW,CACX1B,WAAY,kBACZC,aAAcN,EAAKE,MAAMI,aACzBC,SAAUP,EAAKE,MAAMK,SACrBC,SAAUR,EAAKE,MAAMM,SACrBC,SARJ,SAAiCoI,GAC7B,OAAOA,EAAWI,WAORC,CAAwBzM,EAAEoM,aAEpC/G,EAAQ,IAAI6C,YAAYtG,EAAsB,CAAE2D,OAAQD,IAC5DpH,SAASiK,cAAc9C,OAGnC9B,EAAKwH,oBACA1M,MAAM,UAAW,UAO1BuG,OAAOD,iBAAiB,SAJN,aAI6B,YApgBrC2C,iCCrElB,SAAS3J,GAAU8J,GACf,OAAOC,IAAgBD,IAAoB3E,KAAO2E,IAAoBA,MA2H3DqG,eAtHX,SAAAA,EAAY7K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtE,KAAAiP,IACf5K,EAAAC,OAAAE,EAAA,EAAAF,CAAAtE,KAAAsE,OAAAG,EAAA,EAAAH,CAAA2K,GAAA1N,KAAAvB,KAAMoE,KACDQ,MAAQ,CACTmE,UAAW,OACXyB,mBAAmB,EACnBzF,WAAY,WACZC,aAAc,eACdC,SAAU,IAPCZ,6KAiBA6E,GACf,IAAIzC,EAAW,CAAC1B,WAAYmE,EAAEC,OAAOC,OACrCpJ,KAAKuG,SAASE,qCAGRyC,GACN,IAAI1C,EAAQ,IAAI6C,YAAYtG,EAAoB,CAAE2D,OAAQ1G,KAAK4E,QAC/DvF,SAASiK,cAAc9C,oCAGjB,IAAA+C,EAAAvJ,KACF2I,EAASD,EAAOC,OADda,EAQFxJ,KAAK4E,MALLmE,EAHES,EAGFT,UACAyB,EAJEhB,EAIFgB,kBACAzF,EALEyE,EAKFzE,WACAC,EANEwE,EAMFxE,aACAC,EAPEuE,EAOFvE,SAEJ,OACE4B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,eACtB+H,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACI0C,KAAK,OACL3K,UAAWA,GAAU,gBACrB4K,YAAY,kBACZC,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACwC,UAAWG,EAAEC,OAAOC,YAG1DvC,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,eACpB+H,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQjI,UAAWA,GAAU,gBAC1BsK,MAAOrE,EACP4E,SAAU3J,KAAK+J,mBAAmBpE,KAAK3F,OACpC6G,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,YAAd,YACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,YAAd,YACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,gBAAd,kBAIS,YAAdrE,GACC8B,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,eACtB+H,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACI0C,KAAK,OACL3K,UAAWA,GAAU,gBACrB4K,YAAY,eACZN,MAAOpE,EACP2E,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACvB,aAAckE,EAAEC,OAAOC,YAKhD,gBAAdrE,GACC8B,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,eACtB+H,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACI0C,KAAK,OACL3K,UAAWA,GAAU,gBACrB4K,YAAY,oBACZN,MAAOnE,EACP0E,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACtB,SAAUiE,EAAEC,OAAOC,YAK/DvC,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,eAExB+H,EAAAC,EAAAC,cAAA,SAAOjI,UAAWA,GAAU,qBACxB+H,EAAAC,EAAAC,cAAA,SACI0C,KAAK,WACL3K,UAAWA,GAAU,oBACrBsK,MAAOoB,EACPb,SAAU,SAAAT,GAAC,OAAIK,EAAKhD,SAAS,CAACiE,kBAAmBtB,EAAEC,OAAO+F,aALlE,+BAUFrI,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,eACxB+H,EAAAC,EAAAC,cAAA,UAAQ0C,KAAK,SAASQ,QAASjK,KAAKkK,UAAUvE,KAAK3F,MAAOlB,UAAWA,GAAU,OAAS,IAAMA,GAAU,gBAAxG,YAEJ+H,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,eACtB+H,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKjI,UAAWA,GAAU,cACtB+H,EAAAC,EAAAC,cAAA,YAAO,gBAAAnF,OAAgB+G,EAAhB,wHAAA/G,OAEgCmH,EAFhC,yDAAAnH,OAGsB4I,EAHtB,gDAAA5I,OAIgBmD,EAJhB,mDAAAnD,OAKkBoD,EALlB,+CAAApD,OAMcqD,EANd,6CAOW3C,QAAQ,iBAAkB,eAhHzCmG,aCqBR0G,oLApBX,OACEtI,EAAAC,EAAAC,cAAA,OAAKjI,UAAU,OACb+H,EAAAC,EAAAC,cAAA,OAAKjI,UAAU,iBACb+H,EAAAC,EAAAC,cAACqI,EAAD,CAAUC,WAAW,KAAKtK,WAAW,WAAWF,WAAY,IAC5DgC,EAAAC,EAAAC,cAACuI,GAAD,CAAKvK,WAAW,WAAWC,aAAa,kBAE1C6B,EAAAC,EAAAC,cAAA,OAAKjI,UAAU,kBACb+H,EAAAC,EAAAC,cAAA,OAAKjI,UAAU,iBACb+H,EAAAC,EAAAC,cAACwI,EAAD,OAEF1I,EAAAC,EAAAC,cAAA,OAAKjI,UAAU,YACb+H,EAAAC,EAAAC,cAACyI,GAAD,QAGJ3I,EAAAC,EAAAC,cAAA,OAAKiE,GAAG,uBAhBEvC,aCGEgH,QACW,cAA7B1J,OAAO2J,SAASC,UAEe,UAA7B5J,OAAO2J,SAASC,UAEhB5J,OAAO2J,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjJ,EAAAC,EAAAC,cAACgJ,GAAD,MAAS1Q,SAAS2Q,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtI,KAAK,SAAAuI,GACjCA,EAAaC","file":"static/js/main.8348f24f.chunk.js","sourcesContent":["import * as d3 from \"d3\";\n\nexport function Chart(container, width, height, className) {\n    var XaxisOffset = 70;\n    var YaxisOffset = 20;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n    var svg = container.append(\"svg\")\n        .attr(\"width\", parseInt(width) + XaxisOffset)\n        .attr(\"height\", parseInt(height) + YaxisOffset);\n  \n    var tooltipDiv;\n    if (document.getElementsByClassName(\"tooltip\")[0]) {\n      tooltipDiv = d3.select(\".tooltip\");\n    } else {\n      tooltipDiv = d3.select(\"body\").append(\"div\")\t\n        .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n        .style(\"opacity\", 0);\n    }\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(\"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(\"PERCENTAGE VOTES\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n  \n    this.draw = function(chartData, partyColorsData) {\n      var partyColorByName = {};\n      if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n        partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n          partyColorByName[edge.node.name] = edge.node.colour;\n        })\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n      console.log(\"chartData\", chartData);\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      y.domain([0, 100]);\n  \n          svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n          svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return d + \"%\"; })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", className(\"bar\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => {\n            console.log(\"partyColor check\", partyColorByName, d.partyInfo.name.split(\"/\")[0]);\n            return getFillColorFromPartyName(d.partyInfo.name, i);\n          })\n          .on(\"mousemove\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              function formatPartyName(name) {\n                return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n              }\n              tooltipDiv.html(formatPartyName(d.partyInfo.name) + \" : \" + d.percOfVotes + \"%\")\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .attr(\"fill\", (d, i) => getFillColorFromPartyName(d.partyInfo.name, i))\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(d.percOfVotes));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(d.percOfVotes));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .text(function(d) {\n            return d.percOfVotes + \"%\";\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(d.percOfVotes)) - 5;\n          })\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","const REGION_CHANGE = \"region-change\";\nconst BARCHART_PREVIEW = \"barchart-preview\";\nconst MAP_PREVIEW = \"map-preview\";\n\nexport default {\n    REGION_CHANGE,\n    BARCHART_PREVIEW,\n    MAP_PREVIEW\n};","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport gql from \"graphql-tag\"\n\n\nvar API_URI = \"https://elections2019.xyz/graphql\";\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n  cache: new InMemoryCache()\n})\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            colour\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getVotesDataM(options) {\n  var eventDescription = options.eventDescription;\n  if (!eventDescription)\n  return;\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots(\n          event_Description:\"${eventDescription}\"\n        ){\n          edges{\n            node{\n              topResult(first:${options.numParties}) {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n                \n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          event_Description:\"${eventDescription}\",\n          location_Name_Icontains:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              topResult(first:${options.numParties}) {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniCode = options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          event_Description:\"${eventDescription}\",\n          location_Province_Name:\"${options.provinceName}\", \n          location_Code: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              topResult(first:${options.numParties}){\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n        event_Description:\"${eventDescription}\",\n        location_Id:\"${options.vdNumber}\", \n        location_Ward_Municipality_Name_Icontains:\"${options.muniCode}\") {\n          edges{\n            node{\n              location {\n                vdNumber\n              }\n              topResult(first:${options.numParties}) {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getMainParties(options) {\n  var eventDescription = options.eventDescription;\n  if (!eventDescription)\n    return;\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          event_Description:\"${eventDescription}\"\n        ){\n          edges{\n            node{\n              topResult(first:1) {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          event_Description:\"${eventDescription}\",\n          location_Province_Name:\"${options.provinceName}\"\n        ) {\n          edges{\n            node {\n              topResult(first:1){\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    console.log(\"municipality\", options);\n    var muniRegName = options.muniName.split(\" - \")[1];\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots( \n          event_Description:\"${eventDescription}\",\n          location_Ward_Municipality_Name_Icontains:\"${muniRegName}\") {\n            edges{\n              node{\n                location {\n                  vdNumber\n                }\n                topResult(first:1) {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                      }\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n  }\n}\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./barchart.css\";\nimport {Chart} from \"./d3barchart\";\n\nimport events from \"../../events\";\nimport {\n  getVotesDataM,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\n\n// for the purposes of the proof of concept - production data should be live\nvar use_live_data = true;\n\nvar js = {\n    \"data\": {\n      \"allProvincialBallots\": {\n        \"edges\": [\n          {\n            \"node\": {\n              \"partyResults\": {\n                \"edges\": [\n                  {\n                    \"node\": {\n                      \"validVotes\": 15311,\n                      \"percOfVotes\": 84.44,\n                      \"party\": {\n                        \"id\": \"52\",\n                        \"name\": \"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE\",\n                        \"abbreviation\": \"DA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 1508,\n                      \"percOfVotes\": 8.32,\n                      \"party\": {\n                        \"id\": \"7\",\n                        \"name\": \"AFRICAN NATIONAL CONGRESS\",\n                        \"abbreviation\": \"ANC\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 328,\n                      \"percOfVotes\": 1.81,\n                      \"party\": {\n                        \"id\": \"938\",\n                        \"name\": \"AGANG SOUTH AFRICA\",\n                        \"abbreviation\": \"AGANG SA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 255,\n                      \"percOfVotes\": 1.41,\n                      \"party\": {\n                        \"id\": \"945\",\n                        \"name\": \"ECONOMIC FREEDOM FIGHTERS\",\n                        \"abbreviation\": \"EFF\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 198,\n                      \"percOfVotes\": 1.09,\n                      \"party\": {\n                        \"id\": \"4\",\n                        \"name\": \"VRYHEIDSFRONT PLUS\",\n                        \"abbreviation\": \"VF Plus\"\n                      }\n                    }\n                  }\n                ]\n              },\n              \"location\": {\n                \"id\": \"UHJvdmluY2VUeXBlOjk5\",\n                \"name\": \"Out of Country\"\n              }\n            }\n          }\n        ]\n      }\n    }\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\n\n\nvar chart;\nvar partyColorsData;\nvar refreshIntervalID = 0;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        vdNumber: \"\",\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.vdNumber) {\n        this.state.vdNumber = props.vdNumber;\n      }\n      if (props.width && props.height) {\n        this.state.width = props.width;\n        this.state.height = props.height;\n      } else {\n        var {\n          modifW,\n          modifH\n        } = this.getWidthHeightByScreenSize();\n        this.state.width = modifW;\n        this.state.height = modifH;\n      }\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n      this.redrawChart = this.redrawChart.bind(this);\n    }\n  \n    componentDidMount() {\n      this.draw(this.getContainer(), this.state)\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.BARCHART_PREVIEW, this.handlePreviewEvent);\n      window.addEventListener(\"resize\", this.redrawChart, 200);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.BARCHART_PREVIEW, this.handlePreviewEvent);\n      window.removeEventListener(\"resize\", this.redrawChart);\n      clearInterval(refreshIntervalID);\n    }\n\n    getWidthHeightByScreenSize() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/3.5;\n      return {\n        modifW,\n        modifH\n      }\n    }\n\n    redrawChart() {\n      var {\n        modifW,\n        modifH\n      } = this.getWidthHeightByScreenSize();\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), modifW, modifH, className);\n      this.setState({width: modifW, height: modifH});\n    };\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      console.log(\"handleRegionChange\", newState);\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      console.log(\"handlePreviewEvent\", newState);\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n\n    getRegionName() {\n      if (this.state.regionType == \"national\") {\n        return \"SA\";\n      }\n      if (this.state.regionType == \"province\") {\n        return this.state.provinceName;\n      }\n      if (this.state.regionType == \"municipality\") {\n        return this.state.muniName;\n      }\n      if (this.state.regionType == \"municipality-vd\") {\n        return this.state.muniName + \"-\" + this.state.vdNumber;\n      }\n    }\n      \n    render () {\n      return (\n          <div className=\"barchart\">\n            <div className={className(\"chart-title\")}>RACE FOR VOTES ({this.getRegionName()}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              style={{width: this.state.width, height: this.state.height}}></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      if (use_live_data) {        \n        var votesDataLoader = getVotesDataM(props);\n        var dataLoaders = [votesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        Promise.all(dataLoaders).then(function(values){ \n          var votesData = values[0];\n          partyColorsData = partyColorsData || values[1];          \n          self.drawGraph(container, props, votesData, partyColorsData);\n        }).catch(error => console.error(error));\n      }\n      else {\n        self.drawGraph(container, props, js, null);\n      }\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesData(data, props);\n       \n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className);\n        chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","export function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            validVotes: el[\"validVotes\"],\n            percOfVotes: el[\"percOfVotes\"],\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function parseMainPartyData(data, props) {\n    if (!data)  return null;\n    var locationToMainParty = {};\n    var edges;\n    var regionType = props.regionType;\n    console.log(\"parseMainPartyData\", regionType, data)\n    if (regionType === \"national\") {\n        edges = data[\"data\"][\"allProvincialBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var provinceName = node[\"location\"][\"name\"];\n            var partyName = node[\"topResult\"][\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[provinceName] = partyName;\n        })\n    } else if (regionType === \"province\") {\n        edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var muniCode = node[\"location\"][\"code\"];\n            var partyName = node[\"topResult\"][\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[muniCode] = partyName;\n        })\n    } else {// \"municipality\"\n        edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var vdNumber = node[\"location\"][\"vdNumber\"];\n            var partyName = node[\"topResult\"][\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[vdNumber] = partyName;\n        })\n    }\n    return locationToMainParty;\n}","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\"\n}\n\nexport default config;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents\n} from \"../../api\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            vdNumber: \"\",\n            numParties: 5,\n\n            electionEvents: []\n        }\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        this.setState({eventDescription: e.target.value});\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        var event = new CustomEvent(events.BARCHART_PREVIEW, { detail: this.state });\n        document.dispatchEvent(event);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            vdNumber,\n            numParties,\n            electionEvents\n        } = this.state;\n        return (\n          <div>\n            <h3> Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"City of Cape Town\"\n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={vdNumber}\n                            onChange={e => this.setState({vdNumber: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            vdNumber: \"${vdNumber}\",\n                            numParties: \"${numParties}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;\n\n\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { SideNav, Nav } from \"react-sidenav\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"./map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData,\n  parseMainPartyData\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar provincesData = [\n    {\n        \"name\": \"Limpopo\",\n        \"abbreviation\": \"LIM\",\n        \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n    },\n    {\n        \"name\": \"Mpumalanga\",\n        \"abbreviation\": \"MP\",\n        \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n    },\n    {\n        \"name\": \"Gauteng\",\n        \"abbreviation\": \"GT\",\n        \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n    },\n    {\n        \"name\": \"KwaZulu-Natal\",\n        \"abbreviation\": \"KZN\",\n        \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n    },\n    {\n        \"name\": \"North West\",\n        \"abbreviation\": \"NW\",\n        \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n    },\n    {\n        \"name\": \"Free State\",\n        \"abbreviation\": \"FS\",\n        \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n    },\n    {\n        \"name\": \"Eastern Cape\",\n        \"abbreviation\": \"EC\",\n        \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n    },\n    {\n        \"name\": \"Northern Cape\",\n        \"abbreviation\": \"NC\",\n        \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n    },\n    {\n        \"name\": \"Western Cape\",\n        \"abbreviation\": \"WC\",\n        \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n    }\n]\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            vdNumber: \"\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state)\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    handleNavBarSelection(regionType, selectionData) {\n        var newState;\n        if (regionType == \"national\") {\n            newState = {regionType: regionType};\n            if (this.state.regionType == newState.regionType)\n                return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            if (this.state.regionType == newState.regionType && this.state.provinceName == newState.provinceName)\n                return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            if (this.state.regionType == newState.regionType \n                && this.state.provinceName == newState.provinceName\n                && this.state.newState == newState.muniName)\n                return;\n        }\n\n        var event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n        document.dispatchEvent(event);\n        this.setState(newState);\n    }\n\n    getRegionName() {\n        if (this.state.regionType == \"national\") {\n          return \"SA\";\n        }\n        if (this.state.regionType == \"province\") {\n          return this.state.provinceName;\n        }\n        if (this.state.regionType == \"municipality\") {\n          return this.state.muniName;\n        }\n        if (this.state.regionType == \"municipality-vd\") {\n          return this.state.muniName + \"-\" + this.state.vdNumber;\n        }\n      }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        const theme = {\n            selectionColor: \"#C51162\"\n        };\n        var {\n            disableNavigation\n        } = this.state;\n        return (\n            <div className=\"map-container\">\n                {\n                    !disableNavigation &&\n                        <div className={className(\"map-navbar\")}>\n                            <SideNav\n                                defaultSelectedPath=\"1\"\n                                theme={theme}\n                                onItemSelection={this.onItemSelection}\n                                className={className(\"map-navbar\")}\n                            >\n                                <Nav id=\"navbar-national\" onClick={this.handleNavBarSelection.bind(this, \"national\")}>\n                                    National\n                                </Nav>\n                                {\n                                    provincesData.map(province => {\n                                        return <Nav \n                                            key={province.abbreviation} \n                                            id={\"navbar-province-\"+province.abbreviation}\n                                            onClick={this.handleNavBarSelection.bind(this, \"province\", province)}>\n                                                { province.name }\n                                                {\n                                                    province.munis.map(muni => {\n                                                        return <Nav \n                                                            key={muni.muniCode} \n                                                            id={\"navbar-muni-\"+muni.muniCode}\n                                                            onClick={this.handleNavBarSelection.bind(this, \"municipality\", muni)}\n                                                            >\n                                                                {muni.muniName.split(\"-\")[1].split(\"[\")[0] }\n                                                            </Nav>\n                                                    })\n                                                }\n                                        </Nav>\n                                    })\n                                }\n                            </SideNav>\n                        </div> \n                }\n\n                {this.getRegionName()}\n\n                <div className=\"loading-spinner\" ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n                <div ref=\"vizcontainer\" className=\"map\"></div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(provinceName) {\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[provinceName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.provinceName);\n                case \"municipality\":\n                    return self.state.muniCode + \".topojson\";\n                default:\n                    return null;\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv;\n        if (document.getElementsByClassName(\"tooltip\")[0]) {\n          tooltipDiv = d3.select(\".tooltip\");\n        } else {\n          tooltipDiv = d3.select(\"body\").append(\"div\")\t\n            .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n            .style(\"opacity\", 0);\n        }\n\n        console.log(\"process.env\", process.env)\n        console.log(\"fullRouteGeoJsonFile\", fullRouteGeoJsonFile);\n\n        var w = 900;\n        var h = 800;\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\").style(\"background-color\",\"#ffffff\")\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h)\n            .classed(\"svg-content\", true);\n\n        // if (!self.state.disableNavigation) {\n        //     var fo = svg.append(\"foreignObject\")\n        //         .attr(\"x\", w - 100)\n        //         .attr(\"y\", 10)\n        //         .attr(\"width\", 100)\n        //         .attr(\"height\", 30)\n        //         .attr(\"class\", \"map-controls\")\n        //     fo.append(\"xhtml:div\")\n        //         .append(\"button\")\n        //         .attr(\"class\", \"go-back\")\n        //         .html(\"go back\")\n        //         .on(\"click\", function() {\n        //             var regionType = self.state.regionType;\n        //             var newState, event;\n\n        //             var newState = {\n        //                 regionType: self.state.regionType, \n        //                 provinceName: self.state.provinceName,\n        //                 muniName: self.state.muniName,\n        //                 muniImuniCodeD: self.state.muniCode,\n        //                 vdNumber: self.state.vdNumber,\n        //             }\n                    \n        //             if (regionType === \"province\") {\n        //                 newState.regionType = \"national\";\n        //             } else if (regionType === \"municipality\") {\n        //                 newState.regionType = \"province\";\n        //             }\n\n        //             event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n        //             document.dispatchEvent(event);\n        //             self.setState(newState);\n        //         });\n        // }\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        console.log(\"getMainParties\", props)\n        var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        Promise.all(dataLoaders).then(function(values){ \n            console.log(\"dataLoaders values\", values);\n            var geoJsonData = values[0];\n            var locationToMainParty = parseMainPartyData(values[1], props);\n            partyColorsData = partyColorsData || values[2];  \n\n            console.log(\"locationToMainParty\", locationToMainParty);\n\n            var partyColorByName = {};\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n              partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                partyColorByName[edge.node.name] = edge.node.colour;\n              })\n            }            \n            console.log(\"partyColorByName\", partyColorByName);\n\n\n            function getFillColorFromPartyName(partyName) {\n              if (!partyName)\n                return regionColor;\n              console.log(\"getFillColorFromPartyName\", partyName, partyColorByName[partyName.split(\"/\")[0]] )\n              return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n            }\n\n            function getMainPartyColorFromRegion(d, i) {\n                var partyName;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    partyName = locationToMainParty[provinceName];\n                } else if (regionType === \"province\") {\n                    function getMunicipalityCode(properties) {\n                        return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                    }\n                    var muniCode = getMunicipalityCode(d.properties);\n                    partyName = locationToMainParty[muniCode];\n                } else {// \"municipality\"\n                    function getMunicipalityVdNumber(properties) {\n                        return properties.PKLVDNUMBE;\n                    }\n                    var vdNumber = getMunicipalityVdNumber(d.properties);\n                    console.log(\"getFillColorFromPartyName\", vdNumber);\n                    partyName = locationToMainParty[vdNumber];\n                }\n                return getFillColorFromPartyName(partyName);\n            }\n\n            var getJsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for only munis\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n            }\n\n            getJsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(getJsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getMainPartyColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            // if (self.state.regionType == \"province\") {\n            //    console.log(\"fetch muni Names and codes\", JSON.stringify(getJsonDataFeatures.map(d => {\n            //         function getMunicipalityCode(properties) {\n            //             return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n            //         }\n            //         var newState = {\n            //             provinceName: self.state.provinceName,\n            //             muniName: d.properties.smunicipal,\n            //             muniCode: getMunicipalityCode(d.properties),\n            //         }\n            //         return newState;\n            //     })));\n            // }\n            \n            if (self.state.regionType !== \"municipality\") {\n                svg.selectAll(\".place-label\")\n                    .data(getJsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function(d) { \n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    })\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                var labelElements = document.getElementsByClassName(\"place-label\");\n\n                var regions = {};\n                var overlapCnt = {};\n                var i;\n\n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    regions[i] = labelElements[i].getBoundingClientRect();\n                }\n    \n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    for (var j = 0; j < i; j ++) {\n                        var rect1 = regions[i];\n                        var rect2 = regions[j];\n                        var overlap = !(rect1.right < rect2.left || \n                            rect1.left > rect2.right || \n                            rect1.bottom < rect2.top || \n                            rect1.top > rect2.bottom);\n                        if (overlap) {\n                            overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n                        }\n                    }\n                    if (overlapCnt[i] > 2) {\n                        labelElements[i].setAttribute(\"opacity\", 0)\n                    } else if (overlapCnt[i] > 0){\n                        labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n                    } else {\n    \n                    }\n                }\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(getJsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n                    function regionName() {\n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    }\n                    tooltipDiv.html(regionName())\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    console.log(\"click event\", i, d.properties);\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        function getMunicipalityCode(properties) {\n                            return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        function getMunicipalityVdNumber(properties) {\n                            return properties.PKLVDNUMBE;\n                        }\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            vdNumber: getMunicipalityVdNumber(d.properties),\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                    }\n                })\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        })\n\n        var redrawChart = function() {\n\n        };\n\n        window.addEventListener(\"resize\", redrawChart, 200);\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        var event = new CustomEvent(events.MAP_PREVIEW, { detail: this.state });\n        document.dispatchEvent(event);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,            \n            disableNavigation,\n            regionType,\n            provinceName,\n            muniName,\n        } = this.state;\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"City of Cape Town\"\n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} \n                            />\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showMap(document.getElementById(\"${elementId}\"),{\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"leftContainer\">\n          <BarChart regionName=\"SA\" regionType=\"national\" numParties={3} />\n          <Map regionType=\"province\" provinceName=\"Western Cape\" />\n        </div>\n        <div className=\"rightContainer\">\n          <div className=\"barchartEmbed\">\n            <BarChartEmbed />\n          </div>\n          <div className=\"mapEmbed\">\n            <MapEmbed />\n          </div>\n        </div>\n        <div id=\"sales-data\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}