{"version":3,"sources":["components/BarChart/d3barchart.js","events/index.js","api/index.js","components/BarChart/barchart.js","config/index.js","components/BarChart/barchartEmbed.js","components/Map/map.js","components/Map/mapEmbed.js","App.js","components/Box/Box.js","serviceWorker.js","index.js"],"names":["Chart","container","width","height","className","tooltipDiv","predefColors","svg","append","attr","parseInt","document","getElementsByClassName","d3","style","x","rangeRound","y","YaxisOffset","text","barSvg","barTextSvg","this","draw","chartData","domain","map","d","name","select","transition","duration","call","ticks","tickFormat","bars","selectAll","concat","data","exit","remove","enter","bandwidth","i","length","on","html","partyInfo","split","toLowerCase","replace","l","toUpperCase","percOfVotes","pageX","pageY","Number","barTexts","destroy","events","client","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","chart","dataRefreshTime","originName","styles","refreshIntervalID","BarChart","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","self","assertThisInitialized","state","numParties","eventDescription","regionType","provinceName","muniName","muniCode","vdNumber","setInterval","getContainer","handleRegionChange","bind","handlePreviewEvent","redrawChart","addEventListener","window","removeEventListener","clearInterval","modifW","Math","min","body","clientWidth","modifH","setState","event","newState","detail","console","log","refs","vizcontainer","react_default","a","createElement","getRegionName","ref","options","query","gql","_templateObject2","_templateObject3","_templateObject4","_templateObject5","getVotesDataM","then","drawGraph","catch","error","firstEdge","edges","nodeData","node","el","validVotes","reverse","Component","config","DOMAIN","originClassName","bootstrapStyles","BarChartEmbed","elementId","electionEvents","_templateObject","edge","e","target","value","CustomEvent","dispatchEvent","_this2","_this$state","type","placeholder","onChange","onEventDescriptionChange","item","onRegionTypeChange","disabled","onClick","onPreview","Map","regionName","nationalMapFile","fullRouteGeoJsonFile","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","getLoadingSpinner","process","classed","w","muniImuniCodeD","geoJsonLoader","Promise","all","values","getJsonDataFeatures","geoJsonData","indexOf","topojson","objects","features","projection","fitSize","path","center","projectionCenter","geometry","polylabel","coordinates","properties","SPROVINCE","smunicipal","SMUNICIPAL","labelElements","regions","overlapCnt","getBoundingClientRect","j","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","slice","code","PKLVDNUMBE","getMunicipalityVdNumber","loading","react_loading_default","color","MapEmbed","disableNavigation","App","BarChart_barchart","Map_map","BarChart_barchartEmbed","Map_mapEmbed","id","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.587f6ef7.chunk.js","sourcesContent":["import * as d3 from \"d3\";\n\nexport function Chart(container, width, height, className) {\n    var XaxisOffset = 70;\n    var YaxisOffset = 20;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n    var svg = container.append(\"svg\")\n        .attr(\"width\", parseInt(width) + XaxisOffset)\n        .attr(\"height\", parseInt(height) + YaxisOffset);\n  \n    var tooltipDiv;\n    if (document.getElementsByClassName(\"tooltip\")[0]) {\n      tooltipDiv = d3.select(\".tooltip\");\n    } else {\n      tooltipDiv = d3.select(\"body\").append(\"div\")\t\n        .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n        .style(\"opacity\", 0);\n    }\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(\"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(\"PERCENTAGE VOTES\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n  \n    this.draw = function(chartData) {\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      y.domain([0, 100]);\n  \n          svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n          svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return d + \"%\"; })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", className(\"bar\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => predefColors[i%predefColors.length])\n          .on(\"mousemove\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              function formatPartyName(name) {\n                return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n              }\n              tooltipDiv.html(formatPartyName(d.partyInfo.name) + \" : \" + d.percOfVotes + \"%\")\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(d.percOfVotes));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(d.percOfVotes));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .text(function(d) {\n            return d.percOfVotes + \"%\";\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(d.percOfVotes)) - 5;\n          })\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","const REGION_CHANGE = \"region-change\";\nconst BARCHART_PREVIEW = \"barchart-preview\";\nconst MAP_PREVIEW = \"map-preview\";\n\nexport default {\n    REGION_CHANGE,\n    BARCHART_PREVIEW,\n    MAP_PREVIEW\n};","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport gql from \"graphql-tag\"\n\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"https://elections2019.xyz/graphql\", useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n  cache: new InMemoryCache()\n})\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents{\n        edges{\n          node {\n            description\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getVotesDataM(options) {\n  var eventDescription = options.eventDescription;\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          location_Name_Icontains:\"Country\",\n          event_Description:\"${eventDescription}\"\n        ){\n          edges{\n            node{\n              topResult(last:${options.numParties}) {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n                \n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          location_Name_Icontains:\"${options.provinceName}\",\n          event_Description:\"${eventDescription}\"\n        ){\n          edges{\n            node{\n              topResult(last:${options.numParties}) {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(location_Province_Name:\"${options.provinceName}\", \n          event_Description:\"${eventDescription}\",\n          location_Name: \"${options.muniName}\"\n        ) {\n          edges{\n            node {\n              topResult(last:${options.numParties}){\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(location_Id:\"${options.vdNumber}\", \n        event_Description:\"${eventDescription}\",\n        location_Ward_Municipality_Name_Icontains:\"${options.muniCode}\") {\n          edges{\n            node{\n              location {\n                vdNumber\n              }\n              topResult(last:${options.numParties}) {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./barchart.css\";\nimport {Chart} from \"./d3barchart\";\n\nimport events from \"../../events\";\nimport {\n  getVotesDataM\n} from \"../../api\";\n\nvar dataRefreshTime = 30 * 1000;\n\n\n// for the purposes of the proof of concept - production data should be live\nvar use_live_data = true;\n\nvar js = {\n    \"data\": {\n      \"allProvincialBallots\": {\n        \"edges\": [\n          {\n            \"node\": {\n              \"partyResults\": {\n                \"edges\": [\n                  {\n                    \"node\": {\n                      \"validVotes\": 15311,\n                      \"percOfVotes\": 84.44,\n                      \"party\": {\n                        \"id\": \"52\",\n                        \"name\": \"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE\",\n                        \"abbreviation\": \"DA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 1508,\n                      \"percOfVotes\": 8.32,\n                      \"party\": {\n                        \"id\": \"7\",\n                        \"name\": \"AFRICAN NATIONAL CONGRESS\",\n                        \"abbreviation\": \"ANC\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 328,\n                      \"percOfVotes\": 1.81,\n                      \"party\": {\n                        \"id\": \"938\",\n                        \"name\": \"AGANG SOUTH AFRICA\",\n                        \"abbreviation\": \"AGANG SA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 255,\n                      \"percOfVotes\": 1.41,\n                      \"party\": {\n                        \"id\": \"945\",\n                        \"name\": \"ECONOMIC FREEDOM FIGHTERS\",\n                        \"abbreviation\": \"EFF\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 198,\n                      \"percOfVotes\": 1.09,\n                      \"party\": {\n                        \"id\": \"4\",\n                        \"name\": \"VRYHEIDSFRONT PLUS\",\n                        \"abbreviation\": \"VF Plus\"\n                      }\n                    }\n                  }\n                ]\n              },\n              \"location\": {\n                \"id\": \"UHJvdmluY2VUeXBlOjk5\",\n                \"name\": \"Out of Country\"\n              }\n            }\n          }\n        ]\n      }\n    }\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\n\n\nvar chart;\nvar refreshIntervalID = 0;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        vdNumber: \"\",\n        width: 600,\n        height: 220\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.vdNumber) {\n        this.state.vdNumber = props.vdNumber;\n      }\n      if (props.width) {\n        this.state.width = props.width;\n      }\n      if (props.height) {\n        this.state.height = props.height;\n      }\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n      this.redrawChart = this.redrawChart.bind(this);\n    }\n  \n    componentDidMount() {\n      this.draw(this.getContainer(), this.state)\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.BARCHART_PREVIEW, this.handlePreviewEvent);\n      window.addEventListener(\"resize\", this.redrawChart, 200);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.BARCHART_PREVIEW, this.handlePreviewEvent);\n      window.removeEventListener(\"resize\", this.redrawChart);\n      clearInterval(refreshIntervalID);\n    }\n\n    redrawChart() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/2.5;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), modifW, modifH, className);\n      this.setState({width: modifW, height: modifH});\n    };\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      console.log(\"handleRegionChange\", newState);\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      console.log(\"handlePreviewEvent\", newState);\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n\n    getRegionName() {\n      if (this.state.regionType == \"national\") {\n        return \"SA\";\n      }\n      if (this.state.regionType == \"province\") {\n        return this.state.provinceName;\n      }\n      if (this.state.regionType == \"municipality\") {\n        return this.state.muniName;\n      }\n      if (this.state.regionType == \"municipality-vd\") {\n        return this.state.muniName + \"-\" + this.state.vdNumber;\n      }\n    }\n      \n    render () {\n      return (\n          <div className=\"barchart\">\n            <div className={className(\"chart-title\")}>RACE FOR VOTES ({this.getRegionName()}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              style={{width: this.state.width, height: this.state.height}}></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      if (use_live_data) {\n        getVotesDataM(props).then(function(data) {\n            self.drawGraph(container, props, data);\n        }).catch(error => console.error(error));\n      }\n      else {\n          self.drawGraph(container, props, js);\n      }\n    }\n\n    drawGraph(container, props, data) {\n        var results, chartData, firstEdge;\n        var regionType = props.regionType;\n        if (regionType == \"national\" || regionType == \"province\") {\n          firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n        } else if (regionType == \"municipality\") {\n          firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n        } else { //\"municipality-vd\"\n          firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n        }\n        if (!firstEdge){\n          console.error(\"party data is empty!!\");\n          return;\n        }\n\n        var nodeData = firstEdge[\"node\"];\n        var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n        results = partyResults[\"edges\"];\n\n        chartData = results.map(function(node) {\n            var el = node[\"node\"];\n            return {\n                name: el[\"party\"][\"abbreviation\"],\n                validVotes: el[\"validVotes\"],\n                percOfVotes: el[\"percOfVotes\"],\n                partyInfo: el[\"party\"]\n            }\n        }).reverse();\n        \n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className);\n        chart.draw(chartData);\n    }\n}\n\nexport default BarChart;\n","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\"\n}\n\nexport default config;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents\n} from \"../../api\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            vdNumber: \"\",\n            numParties: 5,\n\n            electionEvents: []\n        }\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"][\"edges\"].map(edge => edge[\"node\"][\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        this.setState({eventDescription: e.target.value});\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        var event = new CustomEvent(events.BARCHART_PREVIEW, { detail: this.state });\n        document.dispatchEvent(event);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            vdNumber,\n            numParties,\n            electionEvents\n        } = this.state;\n        return (\n          <div>\n            <h3> Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={muniName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={muniCode}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={vdNumber}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            vdNumber: \"${vdNumber}\",\n                            numParties: \"${numParties}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;\n\n\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"./map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            vdNumber: \"\",\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.regionName) {\n            this.state.regionName = props.regionName;\n        }\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(provinceName) {\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[provinceName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.provinceName);\n                case \"municipality\":\n                    return self.state.muniCode + \".topojson\";\n                default:\n                    return null;\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv;\n        if (document.getElementsByClassName(\"tooltip\")[0]) {\n          tooltipDiv = d3.select(\".tooltip\");\n        } else {\n          tooltipDiv = d3.select(\"body\").append(\"div\")\t\n            .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n            .style(\"opacity\", 0);\n        }\n\n        console.log(\"process.env\", process.env)\n        console.log(\"fullRouteGeoJsonFile\", fullRouteGeoJsonFile);\n\n        var w = 900;\n        var h = 800;\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\").style(\"background-color\",\"#ffffff\")\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h)\n            .classed(\"svg-content\", true);\n\n        var fo = svg.append(\"foreignObject\")\n            .attr(\"x\", w - 100)\n            .attr(\"y\", 10)\n            .attr(\"width\", 100)\n            .attr(\"height\", 30)\n            .attr(\"class\", \"map-controls\")\n        fo.append(\"xhtml:div\")\n            .append(\"button\")\n            .attr(\"class\", \"go-back\")\n            .html(\"go back\")\n            .on(\"click\", function() {\n                var regionType = self.state.regionType;\n                var newState, event;\n\n                var newState = {\n                    regionType: self.state.regionType, \n                    provinceName: self.state.provinceName,\n                    muniName: self.state.muniName,\n                    muniImuniCodeD: self.state.muniCode,\n                    vdNumber: self.state.vdNumber,\n                }\n                \n                if (regionType === \"province\") {\n                    newState.regionType = \"national\";\n                } else if (regionType === \"municipality\") {\n                    newState.regionType = \"province\";\n                }\n\n                event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                document.dispatchEvent(event);\n                self.setState(newState);\n            });\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n\n        Promise.all([geoJsonLoader]).then(function(values){ \n            var geoJsonData = values[0];\n\n            var getJsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for only munis\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n            }\n\n            getJsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(getJsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", regionColor)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            if (self.state.regionType !== \"municipality\") {\n                svg.selectAll(\".place-label\")\n                    .data(getJsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function(d) { \n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    })\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                var labelElements = document.getElementsByClassName(\"place-label\");\n\n                var regions = {};\n                var overlapCnt = {};\n                var i;\n\n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    regions[i] = labelElements[i].getBoundingClientRect();\n                }\n    \n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    for (var j = 0; j < i; j ++) {\n                        var rect1 = regions[i];\n                        var rect2 = regions[j];\n                        var overlap = !(rect1.right < rect2.left || \n                            rect1.left > rect2.right || \n                            rect1.bottom < rect2.top || \n                            rect1.top > rect2.bottom);\n                        if (overlap) {\n                            overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n                        }\n                    }\n                    if (overlapCnt[i] > 2) {\n                        labelElements[i].setAttribute(\"opacity\", 0)\n                    } else if (overlapCnt[i] > 0){\n                        labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n                    } else {\n    \n                    }\n                }\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(getJsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n                    function regionName() {\n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    }\n                    tooltipDiv.html(regionName())\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    console.log(\"click event\", i, d.properties);\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        function getMunicipalityCode(properties) {\n                            return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        function getMunicipalityVdNumber(properties) {\n                            return properties.PKLVDNUMBE;\n                        }\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            vdNumber: getMunicipalityVdNumber(d.properties),\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                    }\n                })\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        })\n\n        var redrawChart = function() {\n\n        };\n\n        window.addEventListener(\"resize\", redrawChart, 200);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        return (\n            <div className=\"map-container\">\n                <div>{this.state.regionName}</div>\n                <div className=\"loading-spinner\" ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n                <div ref=\"vizcontainer\" className=\"map\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        var event = new CustomEvent(events.MAP_PREVIEW, { detail: this.state });\n        document.dispatchEvent(event);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,            \n            disableNavigation,\n            regionType,\n            provinceName,\n            muniName,\n        } = this.state;\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={muniName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showMap(document.getElementById(\"${elementId}\"),{\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"leftContainer\">\n          <BarChart width=\"600\" height=\"220\" regionName=\"SA\" regionType=\"national\" numParties={3}/>\n          <Map />\n        </div>\n        <div className=\"rightContainer\">\n          <div className=\"barchartEmbed\">\n            <BarChartEmbed />\n          </div>\n          <div className=\"mapEmbed\">\n            <MapEmbed />\n          </div>\n        </div>\n        <div id=\"sales-data\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Box.css\";\n\nclass Box extends Component {\n    draw() {\n        d3.select(this.refs.box)\n            .append(\"rect\")\n            .attr(\"height\", this.props.height)\n            .attr(\"width\", this.props.width)\n            .classed(this.props.className, true)\n            .classed(\"box\", true)\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n      \n    render () {\n        return (\n          <svg width={this.props.width} height={this.props.height}>\n            <g ref=\"box\"></g>\n          </svg>\n        )\n    }\n}\n\nexport default Box;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}