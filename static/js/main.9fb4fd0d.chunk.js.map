{"version":3,"sources":["config/index.js","utils/index.js","components/BarChart/d3barchart.js","events/index.js","api/config.js","api/race-for-seats.js","api/race-for-votes.js","api/turnout.js","api/spoilt.js","api/prog-votescount.js","api/index.js","components/BarChart/barchart.js","components/RaceForSeatBarchart/barchart.js","components/SpoiltBarchart/barchart.js","components/Map/map.js","components/TurnoutMap/map.js","components/TurnoutBarchart/barchart.js","components/BarchartWithNavMap/barchartMap.js","components/ProgVotesCountPiechart/d3piechart.js","components/ProgVotesCountPiechart/piechart.js","components/RaceForSeatDonut/piechart.js","components/VoteCompBarchart/barchart.js","components/SeatCompBarchart/barchart.js","components/SeatHorseShoeChart/d3horseshoe.js","components/SeatHorseShoeChart/horseshoe.js","components/SplitNatProv/d3groupbarchart.js","components/SplitNatProv/barchart.js","components/NavBar/navbar.js","components/QuickResultsWidget/quickResultsWidget.js","components/TVVoteCompBarchart/d3groupbarchart.js","components/TVSeatCompBarchart/barchart.js","components/TVVoteSwingBarchart/d3deltabarchart.js","components/TVSeatSwingBarchart/barchart.js","components/TVVoteCompBarchart/barchart.js","components/TVVoteSwingBarchart/barchart.js","App.js","serviceWorker.js","index.js"],"names":["config","DOMAIN","CSS_PREFIX","calcPercent","a","b","toFixed","parseVotesData","data","props","firstEdge","regionType","edges","console","error","nodeData","sort","node","percOfVotes","slice","numParties","map","el","name","iecId","validVotes","partyInfo","parseVotesComparisonData","results","edge","partyResults","result","filter","partyIecId","partyAbbr","abbreviation","eventDescriptions","indexOf","reverse","new_results","i","length","available","j","push","parseVotesComparisonDataMultipleParties","partyAbbrs","partyIdx","newProps","Object","objectSpread","partyIecIds","parseProgressVotesCount","percent","totalCount","count","getTopPartyNameFromNode","parseSeatsData","seats","parseSeatsComparisonData","parseSeatsComparisonDataMultipleParties","parseSpoiltVotesData","getRegionName","state","beautifiedMuniName","muniName","split","provinceName","getNationOrProvinceName","getNationOrProvinceName2","createTooltip","className","tooltipClassName","document","getElementsByClassName","d3","concat","append","attr","style","fixMapLabelIntersect","labelElements","regions","overlapCnt","getBoundingClientRect","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","triggerCustomEvent","eventName","eventParam","event","CustomEvent","detail","dispatchEvent","formatPartyName","toLowerCase","replace","l","toUpperCase","getSubRegionName","properties","SPROVINCE","smunicipal","getMunicipalityiecId","getMunicipalityCode","code","VDNumber","PKLVDNUMBE","getRegionFileName","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","muniCode","handleRegionChange","newState","JSON","parse","stringify","componentID","this","setState","fetchDataFromOBJ","keys","forEach","key","formatClassNameFromString","str","Chart","container","width","height","options","chartType","yAxisLabel","yValue","d","yValueFormat","value","selectAll","remove","predefColors","svg","showLegend","classed","tooltipDiv","x","rangeRound","y","text","barSvg","barTextSvg","errorText","draw","chartData","colorsData","partyColorByName","partyAbbrByName","getFillColorFromPartyName","partyName","getFillColor","noXaxisByParty","colour","domain","minMaxY","dynamicYAxisFromValues","maxValue","parseFloat","customizeDynamicMaxValue","select","transition","duration","call","ticks","tickFormat","bars","exit","enter","bandwidth","on","html","getTooltipText","pageX","pageY","Number","barTexts","parties","_ref","party","log","legends","xydata","parseInt","getLegendXY","destroy","events","client","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","getSeatsDataForComparison","query","gql","_templateObject","_templateObject2","getSeatsData","eventDescription","_templateObject3","_templateObject4","getVotesDataForComparison","race_for_votes_templateObject","race_for_votes_templateObject2","race_for_votes_templateObject3","race_for_votes_templateObject4","getVotesDataM","_templateObject9","_templateObject10","_templateObject11","_templateObject12","getTurnoutDataForOneEvent","turnout_templateObject4","turnout_templateObject5","turnout_templateObject6","turnout_templateObject7","getSpoiltData","spoilt_templateObject","spoilt_templateObject2","spoilt_templateObject3","spoilt_templateObject4","getProgressVotesCount","prog_votescount_templateObject","prog_votescount_templateObject2","prog_votescount_templateObject3","prog_votescount_templateObject4","getPartyColors","api_templateObject2","partyColorsData","originName","styles","cn","chartOptions","maxVal","Math","min","BarChart","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","comp","stylesheetFor","chart","refreshIntervalID","exportAsPNG","bind","assertThisInitialized","exportAsPNGUri","handlePreviewEvent","self","getContainer","setInterval","addEventListener","removeEventListener","clearInterval","svgToPng","saveSvgAsPng","refs","vizcontainer","childNodes","Promise","resolve","reject","svgAsPngUri","_this$state","react_default","createElement","ref","dataLoaders","partyColorsLoader","all","then","values","votesData","drawGraph","catch","locationResult","fetchLocationTrackFromVDdata","needUpdate","Component","regionColor","Map","disableNavigation","prevProps","prevState","rect","rendercanvas","window","canvg","ignoreDimensions","scaleWidth","scaleHeight","toDataURL","e","canvas","filename","lnk","download","href","createEvent","initMouseEvent","fireEvent","loading","react_loading_default","type","color","_this2","fullRouteGeoJsonFile","getLoadingSpinner","h","geoJsonLoader","_templateObject13","_templateObject14","_templateObject15","getMainParties","geoJsonData","locationToMainParty","parseMainPartyData","jsonDataFeatures","getMainPartyName","objects","topojson","features","projection","fitSize","path","availableCnt","center","projectionCenter","geometry","polylabel","coordinates","undefinedText","mainPartyName","subRegionName","tooltipText","appendSpan","foDiv","regionName","addSub","appendLink","setRegionType","alert","currentRegionName","setTimeout","turnout_templateObject","turnout_templateObject2","turnout_templateObject3","getTurnoutData","locationToTurnout","percVoterTurnout","parseTurnoutData","getFillColorFromTurnout","turnout","getTurnout","it","turnoutData","eventType","turnout_templateObject8","turnout_templateObject9","turnout_templateObject10","turnout_templateObject11","getTurnoutDataForAllEvents","edge1","edge2","exec","parseTurnoutDataForAllEvents","margin","variable","category","floatFormat","random","radius","pie","arc","outerRadius","innerRadius","cornerRadius","padAngle","totalSvg","viewBox","transformX","labelSvg","toolTip","selection","tip","toolTipHTML","arcTween","_current","t","colorsDataP","updatePath","data0","data1","each","m","k","findPreceding","startAngle","endAngle","n","findFollowing","findNeighborArc","attrTween","PieChart","progressVotesData","Completed","Not Completed","seatsData","mainSvg","originChartData","totalSeats","rows","poslist","J","R","angle","Totals","PI","asin","sin","cos","onMouseMove","onMouseOut","Counter","partySvg","pythonConvertedCode","HorseShoeChart","XaxisOffset","groupChartData","topLabel","item","groupSvgs","groupSvg","_loop","subX","_ref2","usedValue","numPartiesSplitNatProv","eventDescriptionsSplitNatProv","_templateObject5","_templateObject6","_templateObject7","_templateObject8","getVotesDataForAllEvents","year","shortenedNatProv","getShortenedEventDescription","longEventDescription","edge1Year","edge2Year","parseVotesDataForAllEvents","cssPrefix","provincesData","munis","metrosData","CustomLink","onClick","hasSubMenu","toggleSubMenu","activateMe","newLocation","to","selectedMenuLabel","label","children","React","NavBar","nationalEventDescription","provincialEventDescription","activeLinkId","handleNavBarSelection","getElementById","id","rel","head","appendChild","navbar","target","classList","passInfo","selectionData","join","preventDefault","content","icon","metro","province","lib_default","LinkComponent","QuickResultsWidget","currentTurnout","currentCountingProg","currentSpoiltVotes","fetchCurrentResultData","handleSeatsElectedsEvent","spoiltData","progVotesData","parsedSpoiltData","parsedTurnoutData","parseTurnoutDataForOneEvent","parsedProgVotesData","parsedVotesData","voteItem","parsedSeatsData","seatItem","zipfileName","imageLoadPromises","toConsumableArray","barchartInstances","instance","mapInstance","barchartInstance","zip","JSZip","imgs","folder","element","idx","file","base64","generateAsync","saveAs","triggerState","_this$state2","toLocaleLowerCase","getRegionName2","_this$state3","mapState","Map_map","assign","TurnoutMap_map","_this3","_this$state4","BarChart_barchart","SeatHorseShoeChart_horseshoe","TurnoutBarchart_barchart","ProgVotesCountPiechart_piechart","Array","VoteCompBarchart_barchart","SeatCompBarchart_barchart","SplitNatProv_barchart","placeholder","onShowVDResult","vdInput","NavBar_navbar","renderQuickResultsTitle","renderTurnoutProgressSpoilt","renderMyVDEnterForm","renderBarchart","renderMap","YaxisOffset","barAxisTextSvg","barAxisTexts","newGroupChartData","delta","deltaData","abs","barTextYDelta","axisThick","App","QuickResultsWidget_quickResultsWidget","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fb4fd0d.chunk.js","sourcesContent":["var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\",\n    // \"DOMAIN\": \"http://127.0.0.1:8080\",\n    \"CSS_PREFIX\": \"ELVIZ_\"\n}\n\nexport default config;","import * as d3 from \"d3\";\nimport config from \"../config\";\n\nfunction calcPercent(a, b) {\n  if (b == 0) {\n    return 0;\n  } else {\n    return (a/b*100).toFixed(2);\n  }\n}\n\nexport function getShortenedEventDescription(event) {\n  var year = /(19|20)\\d{2}/g.exec(event[\"description\"])[0];\n  var shortenedNatProv = (event[\"eventType\"][\"description\"] == \"National Election\"? \"Nat\": \"Prov\");\n  return `${year} ${shortenedNatProv}`;\n}\n\nexport function parseVotesDataForAllEvents(data, props) {\n    var results, edges;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      edges = data[\"data\"][\"allBallots\"].edges;\n    } else if (regionType == \"province\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n    } else if (regionType == \"municipality\") {\n      edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n    } else { //\"municipality-vd\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n    }\n\n    console.log(\"props\", props)\n    return edges.map(edge => {\n      var nodeData = edge[\"node\"];\n\n      var eventDescription = getShortenedEventDescription(nodeData[\"event\"]); //nodeData[\"event\"][\"description\"];\n      var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n      results = partyResults[\"edges\"];\n      results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n      results = results.slice(0, props.numPartiesSplitNatProv);\n\n      return {\n        longEventDescription: nodeData[\"event\"][\"description\"],\n        eventDescription,\n        data: results.map(function(node) {\n          var el = node[\"node\"];\n          return {\n              name: el[\"party\"][\"abbreviation\"],\n              iecId: el[\"party\"][\"iecId\"],\n              validVotes: el[\"validVotes\"].toFixed(2),\n              percOfVotes: el[\"percOfVotes\"].toFixed(2),\n              partyInfo: el[\"party\"]\n          }\n        })\n      }\n    }).filter(edge => props.eventDescriptionsSplitNatProv.indexOf(edge.longEventDescription) != -1)\n    .sort(function(edge1, edge2) {\n      var edge1Year = parseInt(/(19|20)\\d{2}/g.exec(edge1.eventDescription)[0]);\n      var edge2Year = parseInt(/(19|20)\\d{2}/g.exec(edge2.eventDescription)[0]);\n      if (edge1Year == edge2Year) {\n        if (edge1.eventDescription > edge2.eventDescription) {\n          return 1;\n        }\n        return -1;\n      }\n      return edge1Year - edge2Year;\n    })\n}\n \nexport function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n    results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n\n    results = results.slice(0, props.numParties);\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            iecId: el[\"party\"][\"iecId\"],\n            validVotes: el[\"validVotes\"].toFixed(2),\n            percOfVotes: el[\"percOfVotes\"].toFixed(2),\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function fetchLocationTrackFromVDdata(data) {\n  var firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  var nodeData = firstEdge[\"node\"];\n  var locationResult = nodeData[\"location\"];\n  var newState = {\n    regionType: \"municipality-vd\",\n    iecId: locationResult[\"iecId\"],\n    muniCode: locationResult[\"ward\"][\"municipality\"][\"code\"],\n    provinceName: locationResult[\"ward\"][\"municipality\"][\"province\"][\"name\"],\n  };     \n  return newState;      \n}\n\nexport function parseVotesComparisonData(data, props) {\n  var results, edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else { //\"municipality-vd\"\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n\n  var partyfilter_edges = edges.map(edge => {\n    var nodeData = edge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"]\n      .filter(a => props.partyIecId\n        ? (a.node[\"party\"][\"iecId\"] == props.partyIecId) \n        : (a.node[\"party\"][\"abbreviation\"] == props.partyAbbr));\n    var result = results[0];\n    if (result) {\n      var el = result[\"node\"];\n      return {\n          name: nodeData[\"event\"][\"description\"],\n          percOfVotes: el[\"percOfVotes\"].toFixed(2),\n          partyInfo: el[\"party\"]\n      }\n    }\n    return {\n      name: nodeData[\"event\"][\"description\"],\n      percOfVotes: 0,\n      partyInfo: {\n        name: props.partyAbbr,\n        abbreviation: props.partyAbbr,\n      }\n    }\n  });\n  var results = partyfilter_edges.filter(edge => props.eventDescriptions.indexOf(edge.name) != -1).reverse();\n\n  var new_results = [];\n  for(var i = 0; i < props.eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == props.eventDescriptions[i]) {\n        var available = true;\n        new_results.push(results[j]);\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: props.eventDescriptions[i],\n        percOfVotes: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n  return new_results;\n}\n\nexport function parseVotesComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map((partyAbbr, partyIdx) => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    newProps.partyIecId = props.partyIecIds[partyIdx];\n    return {\n      partyAbbr,\n      data: parseVotesComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseProgressVotesCount(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"progress votes count data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Completed\",\n      percent: calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdWithResultsCaptured\"]\n    }, {\n      name: \"Not Completed\",\n      percent: 100 - calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdCount\"] - nodeData[\"vdWithResultsCaptured\"]\n    }\n  ]\n}\n\n// export function parseMainPartyData(data, props) {\n//     if (!data)  return null;\n//     var locationToMainParty = {};\n//     var edges;\n//     var regionType = props.regionType;\n//     var sort_results = function(party_results) {\n//         party_results[\"edges\"] = party_results[\"edges\"].sort(function(a, b) {\n//             return b.node.percOfVotes - a.node.percOfVotes;\n//         })\n//         return party_results;\n//     }\n//     if (regionType === \"national\") {\n//         edges = data[\"data\"][\"allProvincialBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var provinceName = node[\"location\"][\"name\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[provinceName] = partyName;\n//         })\n//     } else if (regionType === \"province\") {\n//         edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var muniCode = node[\"location\"][\"code\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[muniCode] = partyName;\n//         })\n//     } else {// \"municipality\"\n//         edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var iecId = node[\"location\"][\"iecId\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[iecId] = partyName;\n//         })\n//     }\n//     return locationToMainParty;\n// }\n\nfunction getTopPartyNameFromNode(node) {\n  if (node && node[\"topParty\"] && node[\"topParty\"][\"party\"] && node[\"topParty\"][\"party\"][\"name\"])\n      return node[\"topParty\"][\"party\"][\"name\"];\n  return \"\";\n}\n\nexport function parseMainPartyData(data, props) {\n  if (!data)  return null;\n  var locationToMainParty = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"topPartiesByProvince\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          locationToMainParty[provinceName] = getTopPartyNameFromNode(node);\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"topPartiesByMunicipality\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          locationToMainParty[muniCode] = getTopPartyNameFromNode(node);\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"topPartiesByVotingDistrict\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          locationToMainParty[iecId] = getTopPartyNameFromNode(node);\n      })\n  }\n  return locationToMainParty;\n}\n\nexport function parseSeatsData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"abbreviation\"],\n      iecId: node[\"party\"][\"iecId\"],\n      partyInfo: node[\"party\"],\n    }\n  })\n  \n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return results.slice(0, props.numParties);\n}\n\nexport function parseSeatsComparisonData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"event\"][\"description\"],\n      partyInfo: node[\"party\"]\n    }\n  }).filter(result => props.eventDescriptions.indexOf(result.name) != -1)\n  .filter(result => \n    props.partyIecId\n    ? (result.partyInfo[\"iecId\"] == props.partyIecId)\n    : (result.partyInfo[\"abbreviation\"] == props.partyAbbr)\n  )\n\n  var new_results = [];\n  for(var i = 0; i < props.eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == props.eventDescriptions[i]) {\n        var available = true;\n        new_results.push(results[j]);\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: props.eventDescriptions[i],\n        seats: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n      // name: nodeData[\"event\"][\"description\"],\n      // percOfVotes: 0,\n      // partyInfo: {\n      //   name: props.partyAbbr,\n      //   abbreviation: props.partyAbbr,\n      // }\n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return new_results;\n}\n\nexport function parseSeatsComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map((partyAbbr, partyIdx) => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    newProps.partyIecId = props.partyIecIds[partyIdx];\n    return {\n      partyAbbr,\n      data: parseSeatsComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseTurnoutData(data, props) {\n  if (!data)  return null;\n  var locationToTurnout = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[provinceName] = percVoterTurnout;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[muniCode] = percVoterTurnout;\n      })\n  } else {// \"municipality\" or \"municipality-vd\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[iecId] = percVoterTurnout;\n      })\n  }\n  return locationToTurnout;\n}\n\nexport function parseTurnoutDataForAllEvents(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var eventType = node[\"event\"][\"eventType\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n    return {\n      name: event,\n      eventType: eventType,\n      percVoterTurnout\n    }\n  }).filter(edge => edge.eventType.toLowerCase().indexOf(props.eventType) != -1)\n  .sort(function(edge1, edge2) {\n    var edge1Year = parseInt(/(19|20)\\d{2}/g.exec(edge1.name)[0]);\n    var edge2Year = parseInt(/(19|20)\\d{2}/g.exec(edge2.name)[0]);\n    return edge1Year - edge2Year;\n  })\n}\n\nexport function parseTurnoutDataForOneEvent(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n    return {\n      name: event,\n      percVoterTurnout\n    }\n  })\n}\n\nexport function parseSpoiltVotesData(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"spoilt data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Valid\",\n      percent: calcPercent(nodeData[\"totalValidVotes\"], nodeData[\"totalVotesCast\"])\n    }, {\n      name: \"Spoilt\",\n      percent: calcPercent(nodeData[\"spoiltVotes\"], nodeData[\"totalVotesCast\"])\n    }\n  ]\n}\n\nexport function getRegionName(state) {\n  function beautifiedMuniName(muniName) {\n    if (muniName.indexOf(\" - \") != -1) {\n        muniName = muniName.split(\" - \")[1];\n    }\n    if (muniName.indexOf(\"[\") != -1) {\n        muniName = muniName.split(\"[\")[0];\n    }\n    return muniName;\n  }\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  if (state.regionType == \"province\") {\n    return state.provinceName;\n  }\n  if (state.regionType == \"municipality\") {\n    return beautifiedMuniName(state.muniName);\n  }\n  if (state.regionType == \"municipality-vd\") {\n    return beautifiedMuniName(state.muniName) + \"-\" + state.iecId;\n  }\n}\n\nexport function getRegionName2(state) {\n  if (state.regionType == \"national\") {\n    var event = state.eventDescription.toLocaleLowerCase()\n\n    if (event.indexOf(\"national election\") >= 0) {\n      return \"National Assembly\"\n    }\n    else if (event.indexOf(\"provincial election\") >= 0) {\n      return \"Results for Provincial Legislatures\"\n    }\n    else\n      return \"\"\n  }\n  else\n      return getRegionName(state);\n}\n\nexport function getRegionName3(state) {\n  if (state.regionType == \"national\")\n    return \"NATIONAL\";\n  return getRegionName(state);\n}\n\n\n\nexport function getNationOrProvinceName(state) {\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  return state.provinceName;\n}\n\nexport function getNationOrProvinceName2(state) {\n  if (state.regionType == \"national\") {\n    return \"National Assembly\";\n  }\n  return state.provinceName;\n}\n\nexport function createTooltip(className) {\n  var tooltipClassName = className(config.CSS_PREFIX + \"tooltip\")\n  if (document.getElementsByClassName(tooltipClassName)[0]) {\n    return d3.select(`.${tooltipClassName}`);\n  } else {\n    return d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", tooltipClassName)\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n}\n\n\n\nexport function fixMapLabelIntersect() {\n  var labelElements = document.getElementsByClassName(\"place-label\");\n  var regions = {};\n  var overlapCnt = {};\n  var i;\n\n  for (i = 0; i < labelElements.length; i ++) {\n      regions[i] = labelElements[i].getBoundingClientRect();\n  }\n\n  for (i = 0; i < labelElements.length; i ++) {\n      for (var j = 0; j < i; j ++) {\n          var rect1 = regions[i];\n          var rect2 = regions[j];\n          var overlap = !(rect1.right < rect2.left || \n              rect1.left > rect2.right || \n              rect1.bottom < rect2.top || \n              rect1.top > rect2.bottom);\n          if (overlap) {\n              overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n          }\n      }\n      if (overlapCnt[i] > 2) {\n          labelElements[i].setAttribute(\"opacity\", 0)\n      } else if (overlapCnt[i] > 0){\n          labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n      } else {\n\n      }\n  }\n}\n\nexport function triggerCustomEvent(eventName, eventParam) {\n  var event = new CustomEvent(eventName, { detail: eventParam });\n  document.dispatchEvent(event);\n}\n\nexport function formatPartyName(name) {\n  return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n}\n\nexport function getSubRegionName(properties, state) {\n  if (state.regionType === \"national\") {\n      return properties.SPROVINCE;\n  } else if (state.regionType === \"province\") {\n      return properties.smunicipal && properties.smunicipal.split(\" - \")[1].split(\"[\")[0]; \n  } else {//municipality\n    return getMunicipalityiecId(properties);\n    // if (properties.Municipali) {\n    //   return properties.Municipali.split(\" - \")[1].split(\"[\")[0];\n    // }\n    // return properties.SMUNICIPAL && properties.SMUNICIPAL.split(\" - \")[1].split(\"[\")[0]; \n  }\n}\n\nexport function getMunicipalityCode(properties) {\n  return properties.code || (properties.smunicipal && properties.smunicipal.split(\" - \")[0].replace(/\\s/g, \"\"));\n}\n\nexport function getMunicipalityiecId(properties) {\n  return properties.VDNumber || properties.PKLVDNUMBE;\n}\n\nexport function getRegionFileName(state) {\n  var nationalMapFile = \"province_lo-res.geojson\";\n  function getProvinceFileName(provinceName) {\n      var provinceNameToFileMap = {\n          \"Limpopo\": \"lim_lo-res.geojson\",\n          \"Mpumalanga\": \"mp_lo-res.geojson\",\n          \"Gauteng\": \"gt_lo-res.geojson\",\n          \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n          \"North West\": \"nw_lo-res.geojson\",\n          \"Free State\": \"fs_lo-res.geojson\",\n          \"Eastern Cape\": \"ec_lo-res.geojson\",\n          \"Northern Cape\": \"nc_lo-res.geojson\",\n          \"Western Cape\": \"wc_lo-res.geojson\",\n      }\n      return provinceNameToFileMap[provinceName];\n  }\n  switch(state.regionType) {\n      case \"national\":\n          return nationalMapFile;\n      case \"province\":\n          return getProvinceFileName(state.provinceName);\n      case \"municipality\":\n          return state.muniCode + \".topojson\";//\".geojson\";\n      case \"municipality-vd\":\n          return \"vd-data/\" + state.muniCode + \"-\" + state.iecId + \".topojson\"; //\".geojson\";\n      default:\n          return null;\n  }\n}\n\nexport function loadScript(id, scriptURL, callback) {\n  if (document.getElementById(id))\n    return;\n  var script = document.createElement('script');\n  script.onload = function () {\n    if(callback) {\n      callback();\n    }\n  };\n  script.id = id;\n  script.src = scriptURL;\n\n  document.head.appendChild(script);\n}\n\nexport function loadCanvg() {\n  loadScript(\"canvgScript\", \"https://cdn.jsdelivr.net/npm/canvg/dist/browser/canvg.min.js\", function() {\n    console.log(\"canvgScript load finished\");\n  });\n}\n\nexport function loadJSZip() {\n  loadScript(\"jsZipScript\", \"https://cdnjs.cloudflare.com/ajax/libs/jszip/3.2.0/jszip.min.js\", function() {\n    console.log(\"loadJSZip load finished\");\n  });\n}\n\nexport function loadScriptsForEmbedMode() {\n  loadCanvg();\n  loadJSZip();\n}\n\n\nexport function handleRegionChange(event) {\n  var newState = JSON.parse(JSON.stringify(event.detail));\n  delete newState.componentID;\n  this.setState(newState)\n}\n\nexport function fetchDataFromOBJ(state, props) {\n  Object.keys(state).forEach(key => {\n    if (props[key]) {\n      state[key] = props[key];\n    }\n  })\n}\n\nexport function formatClassNameFromString(str) {\n  return \"formedClass_\" + str.replace(/[^a-zA-Z0-9]+/g, '');\n}\n\nexport function onPartyAbbrsChange(e) {\n    var options = e.target.options;\n    var values = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        values.push(options[i].value);\n      }\n    }\n    values = values.slice(0, 4);\n    this.setState({\n        partyAbbrs: values.map(value => value.split(\"\\x22\")[0]),\n        partyIecIds: values.map(value => value.split(\"\\x22\")[1]),\n    })\n}\n\nexport function nationalEventSelected(state) {\n  for (var i = 0; i < state.electionEvents.length; i ++) {\n    if (state.electionEvents[i].description == state.eventDescription) {\n      if (state.electionEvents[i].eventType.description.toLowerCase().indexOf(\"national\") != -1) {\n        return true;\n      }\n    }\n  }\n  return false;\n}","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\nimport { type } from \"os\";\nimport config from \"../../config\";\nimport {\n  formatPartyName\n} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n\n\n  if (!options) {\n    options = {};\n  } \n  if (!options.chartType) {\n    options.chartType = \"Race For Votes\";\n  }\n  if (!options.yAxisLabel) {\n    options.yAxisLabel = \"PERCENTAGE VOTES\";\n  }\n  if (!options.yValue) {\n    options.yValue = function(d) {\n      return d.percOfVotes;\n    }\n  }\n  if (!options.yValueFormat) {\n    options.yValueFormat = function(value) {\n      return value + '%';\n    }\n  }\n\n  width = 700;\n  height = 200;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 20;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset+(options.showLegend? 50: 0)))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(config.CSS_PREFIX + \"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(options.yAxisLabel)\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(chartData, colorsData) {\n\n      if (!chartData) {\n        errorText.text(\"chart data is not available\");\n        barSvg.selectAll('rect').remove();\n        barTextSvg.selectAll('text').remove();\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n      var partyAbbrByName = {};\n\n      if (options.noXaxisByParty) {\n\n      } else {\n        if (colorsData && colorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          colorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n          })\n        }\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n        if (options.noXaxisByParty) {\n          if (typeof colorsData == \"object\")\n            return colorsData[d.name];\n          if (typeof colorsData == \"function\")\n            return colorsData(d, i);\n          return colorsData;\n        } else {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n        }\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        var maxValue = d3.max(chartData, function(d) { return parseFloat(options.yValue(d)); });\n        if (options.customizeDynamicMaxValue) {\n          minMaxY[1] = options.customizeDynamicMaxValue(maxValue);\n        } else {\n          minMaxY[1] = maxValue + 1;\n        }\n      }\n      y.domain(minMaxY);\n  \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => getFillColor(d, i))\n          .on(\"mousemove\", function(d, i) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              tooltipDiv.html(getTooltipText(d, i))\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .attr(\"fill\", (d, i) => getFillColor(d, i))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d)));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(options.yValue(d)));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .text(function(d) {\n            return options.yValueFormat(options.yValue(d));\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d))) - 5;\n          })\n        \n        if (options.showLegend) {\n          var parties = [];\n          var partyIecIds = [];\n          chartData.forEach(({partyInfo}) => {\n            var party = partyInfo.name;\n            if (partyIecIds.indexOf(partyInfo.iecId) == -1 && partyInfo.iecId) {\n                parties.push(party);\n                partyIecIds.push(partyInfo.iecId);\n            }\n          })\n          console.log(\"parties\", parties, chartData);\n          \n          function getLegendXY(i) {\n            \n            var xydata = [XaxisOffset + (i%5)*100, height + 30 + parseInt(i/5) * 40];\n            if (parties.length < 6) {\n              xydata[0] += 100 * ( 6 - parties.length) / 2;\n            }\n            return xydata;\n          }\n          svg.selectAll(`.${className(\"legend\")}`).remove();\n          var legends = svg.selectAll(`.${className(\"legend\")}`)\n              .data(parties)\n              .enter()\n              .append('g')\n              .attr(\"class\", className(\"legend\"))\n              .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n          legends\n              .append(\"rect\")\n              .attr('width', 10)\n              .attr('height', 10)\n              .attr('x', 0)\n              .attr('y', 0)\n              .attr(\"fill\", (party, i) => {\n                  return getFillColorFromPartyName(party);\n              })\n          legends.append('text')\n              .attr('x', 30)\n              .attr('y', 10)\n              .style('font-size', '12px')\n              .text(party => partyAbbrByName[party])\n        }\n        \n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","const REGION_CHANGE = \"region-change\";\nconst CHART_PREVIEW = \"chart-preview\";\nconst SEATS_ELECTEDS_EVENT = \"seats-electeds-event\";\nconst MAP_PREVIEW = \"map-preview\";\nconst QUICK_RESULTS_PREVIEW = \"quick-results-preview\"\nconst EXPORT_PNG = \"export-png\";\nconst EXPORT_SUPERWIDGET_PNG = \"export-superwidget-png\";\n\nexport default {\n    REGION_CHANGE,\n    CHART_PREVIEW,\n    SEATS_ELECTEDS_EVENT,\n    MAP_PREVIEW,\n    QUICK_RESULTS_PREVIEW,\n    EXPORT_PNG,\n    EXPORT_SUPERWIDGET_PNG,\n};","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\n// var API_URI = \"https://elections2019.xyz/graphql\";\nvar API_URI = \"https://eds.elections.sabc.co.za/graphql\";\n//API_URI = \"http://localhost:8000/graphql\";\n\n\nconst client = new ApolloClient({\n    link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n    cache: new InMemoryCache()\n  })\n\nexport {\n    API_URI,\n    client\n}\n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getSeatsDataForComparison(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            eventType:\"National Election\" \n            orderBy:[\"-seats\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                  iecId\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  } else { //  if (options.regionType == \"province\")\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            province:\"${options.provinceName}\", \n            orderBy:[\"-seats\"]\n          ) {\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                  iecId\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  }\n}\n\n\nexport function getSeatsData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(\n              event:\"${eventDescription}\", \n              orderBy:[\"-seats\"]\n            ) {\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                    iecId\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    } else { //  if (options.regionType == \"province\")\n      eventDescription = eventDescription.replace(\"National\", \"Provincial\");\n      eventDescription = eventDescription.replace(\"NATIONAL\", \"PROVINCIAL\");\n      eventDescription = eventDescription.replace(\"national\", \"provincial\");\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(\n              province:\"${options.provinceName}\", \n              event:\"${eventDescription}\", \n              orderBy:[\"-seats\"]\n            ) {\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                    iecId\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getVotesDataForComparison(options) {\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots{\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          province:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          province:\"${options.provinceName}\", \n          municipalCode: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                      iecId\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n          iecId:\"${options.iecId}\", \n        ) {\n          edges{\n            node{\n              event {\n                description\n              }\n              location {\n                iecId\n              }\n              partyResults {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getVotesDataForAllEvents(options) {\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                location {\n                  iecId\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n\nexport function getVotesDataM(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event:\"${eventDescription}\",\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                location {\n                  iecId\n                  ward {\n                    municipality {\n                      code\n                      province {\n                        name\n                      }\n                    }\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n\n  export function getMainParties(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByProvince(event:\"${eventDescription}\") {\n            edges {\n              node {\n                location{\n                  id\n                  name\n                }\n                totalVotesCast\n                topParty{\n                  validVotes\n                  percOfVotes\n                  party {\n                      id\n                      name\n                      abbreviation\n                      iecId\n                  }\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByMunicipality(\n            event:\"${eventDescription}\", \n            province:\"${options.provinceName}\") {\n            \n            edges {\n              node {\n                location{\n                    code\n                    name\n                    longName\n                }\n                totalVotesCast\n                topParty{\n                  party {               \n                    name\n                    abbreviation\n                    iecId\n                  }\n                  validVotes\n                  percOfVotes\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { //if (options.regionType == \"municipality\") {\n        return client.query({\n          query: gql`\n          {\n            topPartiesByVotingDistrict(\n              event:\"${eventDescription}\", \n              province:\"${options.provinceName}\",\n              municipalCode: \"${options.muniCode}\"\n            ) {\n              \n              edges {\n                node {\n                  location{\n                    iecId\n                  }\n                  topParty{\n                    party{\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n\n\n  export function getTurnoutData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                percVoterTurnout\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                percVoterTurnout\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { // municipality or municipality-vd\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots( \n              event:\"${eventDescription}\",\n              municipalCode:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n  export function getTurnoutDataForOneEvent(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ) {\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\"\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n              event:\"${eventDescription}\"\n              province:\"${options.provinceName}\", \n              municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              event:\"${eventDescription}\"\n              iecId:\"${options.iecId}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n\n  export function getTurnoutDataForAllEvents(options) {\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n              province:\"${options.provinceName}\", \n              municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              iecId:\"${options.iecId}\" \n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getSpoiltData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                    id\n                    name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                event:\"${eventDescription}\",\n                province:\"${options.provinceName}\", \n                municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    code\n                    name\n                    longName\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType == \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              event:\"${eventDescription}\",\n              iecId:\"${options.iecId}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n  ","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getProgressVotesCount(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event:\"${eventDescription}\",\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport {getSeatsData, getSeatsDataForComparison} from \"./race-for-seats\"\nexport {getVotesDataM, getVotesDataForAllEvents, getVotesDataForComparison, getMainParties} from \"./race-for-votes\"\nexport {getTurnoutData, getTurnoutDataForOneEvent, getTurnoutDataForAllEvents} from \"./turnout\"\nexport {getSpoiltData} from \"./spoilt\"\nexport {getProgressVotesCount} from \"./prog-votescount\"\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n        eventType {\n          description\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            abbreviation\n            colour\n            iecId\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getProvincesData() {\n  var provincesData = [\n      {\n          \"name\": \"Limpopo\",\n          \"abbreviation\": \"LIM\",\n          \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n      },\n      {\n          \"name\": \"Mpumalanga\",\n          \"abbreviation\": \"MP\",\n          \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n      },\n      {\n          \"name\": \"Gauteng\",\n          \"abbreviation\": \"GT\",\n          \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n      },\n      {\n          \"name\": \"KwaZulu-Natal\",\n          \"abbreviation\": \"KZN\",\n          \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n      },\n      {\n          \"name\": \"North West\",\n          \"abbreviation\": \"NW\",\n          \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n      },\n      {\n          \"name\": \"Free State\",\n          \"abbreviation\": \"FS\",\n          \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n      },\n      {\n          \"name\": \"Eastern Cape\",\n          \"abbreviation\": \"EC\",\n          \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n      },\n      {\n          \"name\": \"Northern Cape\",\n          \"abbreviation\": \"NC\",\n          \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHâI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n      },\n      {\n          \"name\": \"Western Cape\",\n          \"abbreviation\": \"WC\",\n          \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n      }\n  ]\n  return provincesData;\n}\n\nexport function getMetrosData() {\n  var metrosData = [\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},\n    {\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},\n    {\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},\n    {\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"},\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}\n  ]\n  return metrosData;\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataM,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange,\n  triggerCustomEvent,\n  fetchLocationTrackFromVDdata\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  dynamicYAxisFromValues: true,\n  customizeDynamicMaxValue: (maxVal) => Math.min(100, maxVal * 1.5),\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        comp: \"votes-default\",\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 1\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataM(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesData(data, props);\n\n        if (props.comp == \"votes-myvd\") {\n          var newState;\n          if (chartData) {\n            newState = fetchLocationTrackFromVDdata(data);\n          } else {\n            newState = {iecId: \"\"}\n          }\n          var needUpdate = false;\n          Object.keys(newState).forEach(key => {\n            if (props[key] != newState[key]) {\n              needUpdate = true;\n            }\n          })\n          if (needUpdate) {\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n          }\n        }\n       \n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName2,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 6\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-barchart(${getNationOrProvinceName2(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n        \n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName2(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSpoiltData\n} from \"../../api\";\nimport {\n  parseSpoiltVotesData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Spoilt vs Valid Votes',\n  yAxisLabel: 'PERCENTAGE VOTES',\n  noXaxisByParty: true,\n  yValue: d => d.percent,\n  yValueFormat: value => value + '%'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 9\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `spoilt-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var spoiltDataLoader = getSpoiltData(props);\n      var dataLoaders = [spoiltDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var spoiltData = values[0];\n        self.drawGraph(container, props, spoiltData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseSpoiltVotesData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Valid\": \"rgb(0,255,0)\",\n          \"Spoilt\": \"rgb(255,0,0)\"\n        });\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors,\n} from \"../../api\";\nimport {\n  parseMainPartyData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName,\n  fetchDataFromOBJ\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            disableNavigation: false,\n            stylesheetFor: \"web\",\n            componentID: 3\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        var self = this;\n        this.draw(this.getContainer(), this.state);\n        this.refreshIntervalID = setInterval(() => {\n          self.draw(self.getContainer(), self.state)\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      this.getContainer().selectAll(\"svg\").remove();\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    // componentWillReceiveProps(newProps) {\n    //     var newState = JSON.parse(JSON.stringify(this.state));\n    //     fetchDataFromOBJ(newState, newProps);\n    //     this.setState(newState);\n    // }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state))\n            this.draw(this.getContainer(), this.state)\n    }\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n\n            window.canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        if (!window.canvg) {\n            return console.error(\"canvg module not available\");\n        }\n        window.canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n\n        var canvas = rendercanvas, filename = `race-for-votes-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        if (!this.state.disableNavigation) {\n            var newState = event.detail;\n            this.setState(newState)\n        }\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            stylesheetFor,\n            componentID\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n                {\n                    componentID != -1000 && <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n                }\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        // var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n        var dataLoaders = [mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        geoJsonLoader.then(function(value) {\n            var geoJsonData = value;\n            Promise.all(dataLoaders).then(function(values){ \n                var locationToMainParty = parseMainPartyData(values[0], props);\n                partyColorsData = partyColorsData || values[1];  \n    \n                var partyColorByName = {};\n                var partyAbbrByName = {};\n                if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n                  partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                    partyColorByName[edge.node.name] = edge.node.colour;\n                    partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n                  })\n                }            \n    \n                function getFillColorFromPartyName(partyName) {\n                  if (!partyName)\n                    return regionColor;\n                  return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n                }\n    \n                function getMainPartyName(d, i) {\n                    var partyName;\n                    var regionType = self.state.regionType;\n                    if (regionType === \"national\") {\n                        var provinceName = d.properties.SPROVINCE;\n                        partyName = locationToMainParty[provinceName];\n                    } else if (regionType === \"province\") {\n                        var muniCode = getMunicipalityCode(d.properties);\n                        partyName = locationToMainParty[muniCode];\n                    } else if (regionType === \"municipality\"){// \"municipality\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        partyName = locationToMainParty[iecId];\n                    } else {// \"municipality-vd\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        partyName = locationToMainParty[iecId];\n                    }\n                    return partyName;\n                }\n                function getMainPartyColorFromRegion(d, i) {\n                    var partyName = getMainPartyName(d, i);\n                    var partyColor = getFillColorFromPartyName(partyName);\n                    return partyColor;\n                }\n    \n                var jsonDataFeatures;\n                if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                    var regionType = self.state.regionType\n                    if (regionType == \"municipality\") {\n                        if (!geoJsonData.objects[self.state.muniCode])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                    } else { // \"municipality-vd\"\n                        if (!geoJsonData.objects[self.state.iecId])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                    }\n                }\n    \n                jsonDataFeatures = geoJsonData.features;\n    \n                var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n                var path = d3.geoPath().projection(projection);\n    \n                // fill region with regionColor\n                svg.selectAll(`.${className(\"region\")}`)\n                    .data(jsonDataFeatures)\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"class\", className(\"region\"))\n                    .attr(\"stroke\", regionBorderColor)\n                    .attr(\"fill\", getMainPartyColorFromRegion)\n                    .attr(\"id\", function(d, i) {\n                        return `region-${i}`;\n                    })\n                    .attr(\"d\", path);\n                \n                var parties = [];\n                var availableCnt = [];\n                jsonDataFeatures.forEach((d, i) => {\n                    var party = getMainPartyName(d, i);\n                    if (parties.indexOf(party) == -1) {\n                        parties.push(party);\n                        availableCnt.push(1);\n                    } else {\n                        availableCnt[parties.indexOf(party)] ++;\n                    }\n                })\n    \n                parties.sort(function(a, b){\n                    return availableCnt[parties.indexOf(b)] - availableCnt[parties.indexOf(a)];\n                })\n    \n                function getLegendXY(i) {\n                    return [(i%5)*150, h + 10 + parseInt(i/5) * 40];\n                }\n                var legends = svg.selectAll(`.${className(\"legend\")}`)\n                    .data(parties)\n                    .enter()\n                    .append('g')\n                    .attr(\"class\", className(\"legend\"))\n                    .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n                legends\n                    .append(\"rect\")\n                    .attr('width', 20)\n                    .attr('height', 20)\n                    .attr('x', 0)\n                    .attr('y', 0)\n                    .attr(\"fill\", (party, i) => {\n                        return getFillColorFromPartyName(party);\n                    })\n                legends.append('text')\n                    .attr('x', 30)\n                    .attr('y', 16)\n                    .text(party => partyAbbrByName[party])\n                \n                if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                    svg.selectAll(\".place-label\")\n                        .data(jsonDataFeatures)\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"place-label\")\n                        .attr(\"font-size\", \"12px\")\n                        .attr(\"transform\", function(d) { \n                            var center, projectionCenter;\n                            if (d.geometry.type === \"Polygon\") {\n                                center = polylabel(d.geometry.coordinates);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 12;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            } else { //\"MultiPolygon\"\n                                center = polylabel(d.geometry.coordinates[0]);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 5;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            }\n                        })\n                        .attr(\"dy\", \".35em\")\n                        .style(\"text-anchor\", \"middle\")\n                        .text(d => getSubRegionName(d.properties, self.state))\n                }\n    \n                if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                    fixMapLabelIntersect();\n                }\n    \n                //hidden area for catching events\n                svg.selectAll(\".eventLayer\")\n                    .data(jsonDataFeatures)\n                .enter()\n                    .append(\"path\")\n                    .attr(\"d\", path)\n                    .attr(\"class\", \"eventLayer\")\n                    .attr(\"id\", function(d, i) {\n                        return `eventLayer-${i}`;\n                    })\n                    .attr(\"fill\", \"transparent\")\n                    .on(\"mouseover\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 3)\n                            .style(\"fill-opacity\", 0.8);\n                    })\n                    .on(\"mousemove\", function(d, i) {\t\n                        // if (self.state.regionType === \"municipality\") return;\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 1);\n    \n                        var undefinedText;\n                        if (self.state.regionType === \"province\") {\n                            undefinedText = \"New municipality - no previous results available\"\n                        } else {\n                            undefinedText = \"New voting district - no previous results available\"\n                        }\n                        var mainPartyName = getMainPartyName(d, i);\n                        var subRegionName = getSubRegionName(d.properties, self.state);\n                        var tooltipText = (typeof mainPartyName !== \"undefined\")? \n                                    (subRegionName + \" : \" + mainPartyName) : undefinedText;\n    \n                        tooltipDiv.html(tooltipText)\t\n                            .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                    })\n                    .on(\"mouseout\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 1)\n                            .style(\"fill-opacity\", 1);\n                        \n                        if (self.state.regionType === \"municipality\") return;\n    \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                    })\n                    .on(\"click\", function(d, i) {                  \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                        \n                        var regionType = self.state.regionType;\n                        var newState, event;\n                        if (regionType === \"national\") {\n                            newState = {\n                                regionType: \"province\",\n                                provinceName: d.properties.SPROVINCE\n                            }\n                        } else if (regionType === \"province\") {\n                            newState = {\n                                regionType: \"municipality\", \n                                provinceName: self.state.provinceName,\n                                muniName: d.properties.smunicipal,\n                                muniCode: getMunicipalityCode(d.properties),\n                            }\n                        } else if (regionType === \"municipality\"){ // \"municipality\"\n                            var newState = {\n                                regionType: \"municipality-vd\", \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: getMunicipalityiecId(d.properties),\n                            }\n                        } else { // \"municipality-vd\"\n                            return;\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        if (self.state.disableNavigation) {\n                            return;\n                        }\n                        self.setState(newState);\n                    })\n                if (!self.state.disableNavigation) {\n                    var fo = svg.append(\"foreignObject\")\n                        .attr(\"x\", 0)\n                        .attr(\"y\", 10)\n                        .attr(\"width\", 500)\n                        .attr(\"height\", 30)\n                        .attr(\"class\", \"map-controls\")\n                    \n                    function setRegionType(regionType) {\n                        var newState;\n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: self.state.iecId,\n                        }\n                        newState.regionType = regionType;\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    }\n    \n                    function appendSpan(foDiv, regionName, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"span\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"default\")\n                            .html(regionName);\n                    }\n    \n                    function appendLink(foDiv, regionName, regionType, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"a\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"pointer\")\n                            .html(regionName)\n                            .on(\"click\", function() {\n                                setRegionType(regionType);\n                            });\n                    }\n                    \n                    var foDiv = fo.append(\"xhtml:div\");\n                    var regionType = self.state.regionType;\n                    if (regionType == \"national\") {\n                        appendSpan(foDiv, \"South Africa\", false);\n                    } else {\n                        appendLink(foDiv, \"South Africa\", \"national\", false);\n                        if (regionType == \"province\") {\n                            appendSpan(foDiv, self.state.provinceName, true);\n                        } else {\n                            appendLink(foDiv, self.state.provinceName, \"province\", true);\n                            if (regionType == \"municipality\") {\n                                appendSpan(foDiv, self.state.muniCode, true);\n                            } else {\n                                appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                                appendSpan(foDiv, self.state.iecId, true);\n                            }\n                        }\n                    }\n                }\n                self.getLoadingSpinner()\n                    .style(\"display\", \"none\");\n            }).catch(error => {\n                console.error(error);\n                alert(`failed to get data from server`);\n            })\n        }).catch(error => {\n            console.error(error);\n\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n            \n            if (self.state.disableNavigation) {\n                return;\n            }\n\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniCode: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                if (regionType == \"national\" || regionType == \"province\") {\n                    alert(`Can't get map data for ${currentRegionName}`); \n                } else {\n                    alert(`${currentRegionName} has been disestablished`); \n                }\n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getTurnoutData,\n    getProvincesData\n} from \"../../api\";\nimport {\n  parseTurnoutData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName,\n  fetchDataFromOBJ\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar provincesData = getProvincesData();\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 11\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        var self = this;\n        this.draw(this.getContainer(), this.state);\n        this.refreshIntervalID = setInterval(() => {\n          self.draw(self.getContainer(), self.state)\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n        this.getContainer().selectAll(\"svg\").remove();\n        document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state))\n            this.draw(this.getContainer(), this.state)\n    }\n\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n\n            if (!window.canvg) {\n                return reject(\"canvg module not available\");\n            }\n\n            window.canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        if (!window.canvg) {\n            return console.error(\"canvg module not available\");\n        }\n\n        window.canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n        var canvas = rendercanvas, filename = `turnout-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor,\n            componentID\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n                {\n                    componentID != -1000 && <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n                }\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n \n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var turnoutDataLoader = getTurnoutData(props);\n        // var dataLoaders = [geoJsonLoader, turnoutDataLoader];\n        var dataLoaders = [turnoutDataLoader];\n\n        geoJsonLoader.then(function(value) {\n            var geoJsonData = value;\n            Promise.all(dataLoaders).then(function(values){ \n                var locationToTurnout = parseTurnoutData(values[0], props);      \n    \n                function getMergedColorWithWhite(percent) {\n                    var originRGB = {\n                        R: 0,\n                        G: 255,\n                        B: 0\n                    }\n                    var mixedR = (originRGB.R * (percent) + 255 * (100-percent))/100;\n                    var mixedG = (originRGB.G * (percent) + 255 * (100-percent))/100;\n                    var mixedB = (originRGB.B * (percent) + 255 * (100-percent))/100;\n                    return `rgb(${mixedR},${mixedG},${mixedB})`;\n                }\n                function getFillColorFromTurnout(turnout) {\n                  if (turnout > 65)\n                    return \"#39711D\";//getMergedColorWithWhite(100);//\"rgb(0,165,138)\";\n                  if (turnout >= 60)\n                    return \"#458923\";//getMergedColorWithWhite(90);//\"rgb(4,68,95)\";\n                  if (turnout >= 55)\n                    return \"#53B025\";//getMergedColorWithWhite(80);//\"rgb(4,98,138)\";\n                  if (turnout >= 50)\n                    return \"#4BDC02\";//getMergedColorWithWhite(70);//\"rgb(4,117,164)\";\n                  if (turnout >= 45)\n                    return \"#7CE547\";//getMergedColorWithWhite(60);//\"rgb(4,136,191)\";\n                  if (turnout >= 40)\n                    return \"#93E968\";//getMergedColorWithWhite(50);//\"rgb(0,154,216)\";\n                  if (turnout >= 35)\n                    return \"#A6ED83\";//getMergedColorWithWhite(40);//\"rgb(77,174,224)\";\n                  if (turnout >= 30)\n                    return \"#C5F3AF\";//getMergedColorWithWhite(30);//\"rgb(124,194,231)\";\n                  return \"#D3F6C3\";//regionColor;\n                }\n    \n                function getTurnout(d, i) {\n                    var turnout;\n                    var regionType = self.state.regionType;\n                    if (regionType === \"national\") {\n                        var provinceName = d.properties.SPROVINCE;\n                        turnout = locationToTurnout[provinceName];\n                    } else if (regionType === \"province\") {\n                        var muniCode = getMunicipalityCode(d.properties);\n                        turnout = locationToTurnout[muniCode];\n                    } else if (regionType === \"municipality\"){// \"municipality\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        turnout = locationToTurnout[iecId];\n                    } else {// \"municipality-vd\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        turnout = locationToTurnout[iecId];\n                    }\n                    return turnout;\n                }\n                function getFillColorFromRegion(d, i) {\n                    var turnout = getTurnout(d, i);\n                    var fillColor = getFillColorFromTurnout(turnout);\n                    return fillColor;\n                }\n                var jsonDataFeatures;\n                if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                    var regionType = self.state.regionType\n                    if (regionType == \"municipality\") {\n                        if (!geoJsonData.objects[self.state.muniCode])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                    } else { // \"municipality-vd\"\n                        if (!geoJsonData.objects[self.state.iecId])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                    }\n                }\n    \n                jsonDataFeatures = geoJsonData.features;\n    \n                var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n                var path = d3.geoPath().projection(projection);\n    \n                // fill region with regionColor\n                svg.selectAll(`.${className(\"region\")}`)\n                    .data(jsonDataFeatures)\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"class\", className(\"region\"))\n                    .attr(\"stroke\", regionBorderColor)\n                    .attr(\"fill\", getFillColorFromRegion)\n                    .attr(\"id\", function(d, i) {\n                        return `region-${i}`;\n                    })\n                    .attr(\"d\", path);\n                \n                var turnoutColors = [{\n                    text: \"More than 65%\",\n                    turnout: 66\n                },{\n                    text: \"60% - 65%\",\n                    turnout: 60\n                },{\n                    text: \"55% - 60%\",\n                    turnout: 55\n                },{\n                    text: \"50% - 55%\",\n                    turnout: 50\n                },{\n                    text: \"45% - 50%\",\n                    turnout: 45\n                },{\n                    text: \"40% - 45%\",\n                    turnout: 40\n                },{\n                    text: \"35% - 40%\",\n                    turnout: 35\n                },{\n                    text: \"30% - 35%\",\n                    turnout: 30\n                },{\n                    text: \"Less than 30%\",\n                    turnout: 15\n                }];\n                \n                function getLegendXY(i) {\n                    return [(i%5)*170, h + 10 + parseInt(i/5) * 40];\n                }\n                var legends = svg.selectAll(`.${className(\"legend\")}`)\n                    .data(turnoutColors)\n                    .enter()\n                    .append('g')\n                    .attr(\"class\", className(\"legend\"))\n                    .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n                legends\n                    .append(\"rect\")\n                    .attr('width', 20)\n                    .attr('height', 20)\n                    .attr('x', 0)\n                    .attr('y', 0)\n                    .attr(\"fill\", (it) => {\n                        return getFillColorFromTurnout(it.turnout);\n                    })\n                legends.append('text')\n                    .attr('x', 30)\n                    .attr('y', 16)\n                    .text(it => it.text)\n                \n                if (self.state.regionType !== \"municipality\") {\n                    svg.selectAll(\".place-label\")\n                        .data(jsonDataFeatures)\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"place-label\")\n                        .attr(\"font-size\", \"12px\")\n                        .attr(\"transform\", function(d) { \n                            var center, projectionCenter;\n                            if (d.geometry.type === \"Polygon\") {\n                                center = polylabel(d.geometry.coordinates);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 12;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            } else { //\"MultiPolygon\"\n                                center = polylabel(d.geometry.coordinates[0]);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 5;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            }\n                        })\n                        .attr(\"dy\", \".35em\")\n                        .style(\"text-anchor\", \"middle\")\n                        .text(d => getSubRegionName(d.properties, self.state))\n                }\n    \n                if (self.state.regionType !== \"municipality\") {\n                    fixMapLabelIntersect();\n                }\n    \n                //hidden area for catching events\n                svg.selectAll(\".eventLayer\")\n                    .data(jsonDataFeatures)\n                .enter()\n                    .append(\"path\")\n                    .attr(\"d\", path)\n                    .attr(\"class\", \"eventLayer\")\n                    .attr(\"id\", function(d, i) {\n                        return `eventLayer-${i}`;\n                    })\n                    .attr(\"fill\", \"transparent\")\n                    .on(\"mouseover\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 3)\n                            .style(\"fill-opacity\", 0.8);\n                    })\n                    .on(\"mousemove\", function(d, i) {\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 1);\n                        \n                        var undefinedText;\n                        if (self.state.eventDescription.indexOf(\"2019\") == -1) {\n                            if (self.state.regionType === \"province\") {\n                                undefinedText = \"New municipality - no previous results available\"\n                            } else {\n                                undefinedText = \"New voting district - no previous results available\"\n                            }\n                        } else {\n                            undefinedText = \"votes not counted yet\";\n                        }\n    \n                        var turnoutData = getTurnout(d, i);\n                        var subRegionName = getSubRegionName(d.properties, self.state);\n                        var tooltipText = (typeof turnoutData !== \"undefined\")? \n                                    (subRegionName + \" : \" + turnoutData + \"%\") : undefinedText;\n    \n                        tooltipDiv.html(tooltipText)\t\n                            .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                    })\n                    .on(\"mouseout\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 1)\n                            .style(\"fill-opacity\", 1);\n                        \n                        if (self.state.regionType === \"municipality\") return;\n    \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                    })\n                    .on(\"click\", function(d, i) {\n                        if (self.state.disableNavigation) {\n                            return;\n                        }\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                        \n                        var regionType = self.state.regionType;\n                        var newState;\n                        if (regionType === \"national\") {\n                            newState = {\n                                regionType: \"province\",\n                                provinceName: d.properties.SPROVINCE\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        } else if (regionType === \"province\") {\n                            newState = {\n                                regionType: \"municipality\", \n                                provinceName: self.state.provinceName,\n                                muniName: d.properties.smunicipal,\n                                muniCode: getMunicipalityCode(d.properties),\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        } else { // \"municipality\"\n                            var newState = {\n                                regionType: \"municipality-vd\", \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: getMunicipalityiecId(d.properties),\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n    \n                            self.setState(newState);\n                        }\n                    })\n                    if (!self.state.disableNavigation) {\n                        var fo = svg.append(\"foreignObject\")\n                            .attr(\"x\", 0)\n                            .attr(\"y\", 10)\n                            .attr(\"width\", 500)\n                            .attr(\"height\", 30)\n                            .attr(\"class\", \"map-controls\")\n                        \n                        function setRegionType(regionType) {\n                            var newState;\n                            var newState = {\n                                regionType: self.state.regionType, \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: self.state.iecId,\n                            }\n                            newState.regionType = regionType;\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        }\n        \n                        function appendSpan(foDiv, regionName, addSub) {\n                            if (addSub) foDiv.append(\"span\").html(\" > \");\n                            foDiv.append(\"span\")\n                                .style(\"height\", \"30px\")\n                                .style(\"cursor\", \"default\")\n                                .html(regionName);\n                        }\n        \n                        function appendLink(foDiv, regionName, regionType, addSub) {\n                            if (addSub) foDiv.append(\"span\").html(\" > \");\n                            foDiv.append(\"a\")\n                                .style(\"height\", \"30px\")\n                                .style(\"cursor\", \"pointer\")\n                                .html(regionName)\n                                .on(\"click\", function() {\n                                    setRegionType(regionType);\n                                });\n                        }\n                        \n                        var foDiv = fo.append(\"xhtml:div\");\n                        var regionType = self.state.regionType;\n                        if (regionType == \"national\") {\n                            appendSpan(foDiv, \"South Africa\", false);\n                        } else {\n                            appendLink(foDiv, \"South Africa\", \"national\", false);\n                            if (regionType == \"province\") {\n                                appendSpan(foDiv, self.state.provinceName, true);\n                            } else {\n                                appendLink(foDiv, self.state.provinceName, \"province\", true);\n                                if (regionType == \"municipality\") {\n                                    appendSpan(foDiv, self.state.muniCode, true);\n                                } else {\n                                    appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                                    appendSpan(foDiv, self.state.iecId, true);\n                                }\n                            }\n                        }\n                        // foDiv\n                        //     .append(\"button\")\n                        //     .attr(\"class\", \"go-back\")\n                        //     .style(\"height\", \"30px\")\n                        //     .style(\"color\", \"black\")\n                        //     .html(\"go back\")\n                        //     .on(\"click\", function() {\n                        //         var regionType = self.state.regionType;\n                        //         var newState, event;\n            \n                        //         var newState = {\n                        //             regionType: self.state.regionType, \n                        //             provinceName: self.state.provinceName,\n                        //             muniName: self.state.muniName,\n                        //             muniCode: self.state.muniCode,\n                        //             iecId: self.state.iecId,\n                        //         }\n                                \n                        //         if (regionType === \"province\") {\n                        //             newState.regionType = \"national\";\n                        //         } else if (regionType === \"municipality\") {\n                        //             newState.regionType = \"province\";\n                        //         } else if (regionType === \"municipality-vd\") {\n                        //             newState.regionType = \"municipality\";\n                        //         }\n            \n                        //         triggerCustomEvent(events.REGION_CHANGE, newState);\n                        //         self.setState(newState);\n                        //     });\n                    }\n                self.getLoadingSpinner()\n                    .style(\"display\", \"none\");\n            }).catch(error => {\n                console.error(error);\n                alert(`failed to get data from server`);\n            })\n        }).catch(error => {\n            console.error(error);       \n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniCode: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                if (regionType == \"national\" || regionType == \"province\") {\n                    alert(`Can't get map data for ${currentRegionName}`); \n                } else {\n                    alert(`${currentRegionName} has been disestablished`); \n                }\n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getTurnoutDataForAllEvents,\n} from \"../../api\";\nimport {\n  parseTurnoutDataForAllEvents,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Turnout Barchart',\n  yAxisLabel: 'PERCENTAGE',\n  noXaxisByParty: true,\n  yValue: function(d) {\n    return d.percVoterTurnout;\n  },\n  yValueFormat: function(percVoterTurnout) {\n    return percVoterTurnout + '%';\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        eventType: \"national\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 10\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n    \n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `turnout-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var turnoutDataLoader = getTurnoutDataForAllEvents(props);\n      var dataLoaders = [turnoutDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var turnoutData = values[0];\n        self.drawGraph(container, props, turnoutData, 'rgb(157,51,55)');\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, colorsData) {\n        var chartData = parseTurnoutDataForAllEvents(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, colorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport styles from \"./barchartMap.css\";\nimport BarChart from '../BarChart/barchart';\nimport Map from '../Map/map';\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getRegionName,\n    fetchDataFromOBJ\n} from \"../../utils\";\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarchartWithNavMap extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 2\n        }      \n\n        fetchDataFromOBJ(this.state, props);\n\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var self = this;\n        Promise.all([\n            self.barchartInstance.exportAsPNGUri(),\n            self.mapInstance.exportAsPNGUri()\n        ]).then(values => {\n            var zip = new window.JSZip();\n\n            var imgs = zip.folder(\"export-images\");\n            imgs.file(\"barchart.png\", values[0], {base64: true});\n            imgs.file(\"map.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `race-for-votes-barchart-map(${getRegionName(self.state)}).zip`);\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n\n    render() {\n      const {\n        stylesheetFor\n      } = this.state;\n\n        return (\n        <div ref=\"superwidget\" className={className(\"barchart-map\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={className(\"barchart-container\")} ref=\"barchart\">\n                <BarChart \n                    ref={instance => { this.barchartInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n            <div className={className(\"map-container\")}>\n                <Map \n                    ref={instance => { this.mapInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BarchartWithNavMap;\n","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n    var data = [],\n        width = 700,\n        height = 300,\n        margin = {top: 10, right: 10, bottom: 10, left: 10},\n        variable = options.variable,\n        category = options.category,\n        padAngle = 0.015,\n        transTime = 750,\n        floatFormat = d3.format('.4r'),\n        cornerRadius = 3,\n        colorsData = null;\n\n\n        \n\n    function colour(key) {\n        if (colorsData && colorsData[key]) {\n            return colorsData[key];\n        }\n        return 'rgb(' + Math.random()*250 + ',' + Math.random()*250 + ',' + Math.random()*250 + ')';\n    }\n\n    container.selectAll(\"svg\").remove();\n\n    var radius = Math.min(width, height) / 2;\n\n    var pie = d3.pie()\n        .value(function(d) { return floatFormat(d[variable]); })\n        .sort(null);\n\n    var arc = d3.arc()\n        .outerRadius(radius * 0.8)\n        .innerRadius(radius * 0.6)\n        .cornerRadius(cornerRadius)\n        .padAngle(padAngle);\n\n    var totalSvg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", options.viewBox || (\"0 0 \" + (width + margin.left + margin.right) + \" \" + (height + margin.top + margin.bottom)))\n        .classed(\"svg-content\", true);\n    \n    \n    var transformX = height / 2, transformY = height / 2;\n    if (options.chartType === 'Progress on Votes Count') {\n    } else {\n        transformX = width / 2;\n    }\n    var svg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + transformX + ',' + transformY + ')');\n    \n    var labelSvg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + height * 6 / 5 + ',' + height / 2 + ')');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'lines');\n\n    var path = svg.select('.slices')\n        .selectAll('path')\n        .data(pie(data))\n        .enter().append('path')\n        .attr('fill', function(d) { return colour(d.data[category]); })\n        .attr('d', arc);\n\n    var errorText = svg.append(\"g\")\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\");\n      \n    this.destroy = function() {\n        container.selectAll(\"svg\").remove();\n    }\n    this.draw = function(value, colorsDataP) {\n        if (!value) {\n            errorText.text(\"chart data is not available\");\n            return;\n        } else {\n            errorText.text(\"\");\n        }\n\n        if (options.chartType === 'Progress on Votes Count') {\n            colorsData = colorsDataP;\n        } else {\n            var partyColorByName = {};\n\n            var partyColorsData = colorsDataP;\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n                partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                    partyColorByName[edge.node.abbreviation] = edge.node.colour;\n                })\n            }\n            colorsData = partyColorByName;\n        }\n        \n        data = value;\n\n        if (options.chartType === 'Progress on Votes Count') {\n            labelSvg.selectAll('text').remove();\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', -15)\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle')\n                .text('Completed' + ': ' + data[0][\"percent\"] + '%');\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', 0)\n                .text('Captured Votes' + ': ' + data[0][\"count\"])\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', 15)\n                .text('Total' + ': ' + data[0][\"totalCount\"])\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n        }\n\n        var updatePath = d3.select('.slices').selectAll('path');\n\n        var data0 = path.data(),\n            data1 = pie(data);\n\n        updatePath = updatePath.data(data1, key);\n\n        updatePath.enter().append('path')\n            .each(function(d, i) { this._current = findNeighborArc(i, data0, data1, key) || d; })\n            .attr('fill', function(d) {  return colour(d.data[category]); })\n            .attr('d', arc);\n\n        updatePath.exit()\n            .transition()\n            .duration(transTime)\n            .attrTween(\"d\", arcTween)\n            .remove();\n\n        updatePath.transition().duration(transTime)\n            .attrTween('d', arcTween);\n\n        d3.selectAll('.labelName text, .slices path').call(toolTip);\n\n    };\n\n    function toolTip(selection) {\n\n        selection.on('mouseenter', function (data) {\n            svg.append('text')\n                .attr('class', 'toolCircle')\n                .attr('dy', -15)\n                .html(toolTipHTML(data))\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n\n            svg.append('circle')\n                .attr('class', 'toolCircle')\n                .attr('r', radius * 0.55)\n                .style('fill', colour(data.data[category]))\n                .style('fill-opacity', 0.35);\n\n        });\n\n        selection.on('mouseout', function () {\n            d3.selectAll('.toolCircle').remove();\n        });\n    }\n\n    function toolTipHTML(data) {\n\n        if (options.chartType === 'Progress on Votes Count') {\n            var tip = '';\n            tip += '<tspan x=\"0\">' + 'Progress' + ': ' + data.data[\"percent\"] + '%' + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Captured Votes' + ': ' + data.data[\"count\"] + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Total' + ': ' + data.data[\"totalCount\"] + '</tspan>';\n        } else { //'Race for Seats Donut chart'\n            var tip = '';\n            tip += '<tspan x=\"0\">' + 'Seats' + ': ' + data.data[\"seats\"] + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Party' + ': ' + data.data[\"name\"] + '</tspan>';\n        }\n        return tip;\n    }\n\n    function arcTween(d) {\n        var i = d3.interpolate(this._current, d);\n        this._current = i(0);\n        return function(t) { return arc(i(t)); };\n    }\n\n    function findNeighborArc(i, data0, data1, key) {\n        var d;\n        return (d = findPreceding(i, data0, data1, key)) ? {startAngle: d.endAngle, endAngle: d.endAngle}\n            : (d = findFollowing(i, data0, data1, key)) ? {startAngle: d.startAngle, endAngle: d.startAngle}\n                : null;\n    }\n\n    function findPreceding(i, data0, data1, key) {\n        var m = data0.length;\n        while (--i >= 0) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n\n    function key(d) {\n        return d.data[category];\n    }\n\n    function findFollowing(i, data0, data1, key) {\n        var n = data1.length, m = data0.length;\n        while (++i < n) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"./d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getProgressVotesCount\n} from \"../../api\";\nimport {\n  parseProgressVotesCount,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Progress on Votes Count',\n  variable: 'percent',\n  category: 'name'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass PieChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 4\n      }     \n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `progress-on-votes-piechart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n   \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"piechart\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var progressVotesDataLoader = getProgressVotesCount(props);\n      var dataLoaders = [progressVotesDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var progressVotesData = values[0];\n        self.drawGraph(container, props, progressVotesData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseProgressVotesCount(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Completed\": \"#15707C\",\n          \"Not Completed\": \"#CCCCCC\"\n        });\n    }\n}\n\nexport default PieChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"../ProgVotesCountPiechart/d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Donut Chart',\n  variable: 'seats',\n  category: 'name',\n  viewBox: '170 0 360 320'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass DonutChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 17\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-donutchart-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"donutchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default DonutChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes Comparison\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  showLegend: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        partyIecId: null,\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 16\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonData(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Comparison',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        partyIecId: null,\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 7\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      \n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n    options = {};\n  } \n\n  width = 360;\n  height = 185;\n  container.selectAll(\"svg\").remove();\n\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width) + \" \" + (height))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n\n    var mainSvg = svg.append(\"g\");\n\n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(originChartData, colorsData) {\n      var chartData = [];\n      if (!originChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n\n      for(var i = originChartData.length - 1; i >= 0 ; i -=2) {\n        chartData.push(originChartData[i]);\n      }\n      for (i= -1 - i; i < originChartData.length; i += 2) {\n        chartData.push(originChartData[i]);\n      }\n\n\n      var partyColorByName = {};\n\n      var partyColorsData = colorsData;\n      if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n          partyColorByName[edge.node.name] = edge.node.colour;\n          })\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getTooltipText(d, i) {\n          return d.name;\n      }\n\n      var totalSeats = 0;\n      for (var i = 0; i < chartData.length; i ++) {\n        totalSeats += chartData[i].seats;\n      }\n\n      function pythonConvertedCode(totalSeats, mainSvg) {\n        var Totals=[ 3, 15, 33, 61, 95, 138, 189, 247, 313, 388, 469, 559, 657, 762, 876, 997, 1126, 1263, 1408, 1560, 1722, 1889, 2066, 2250, 2442, 2641, 2850, 3064, 3289, 3519, 3759, 4005, 4261, 4522, 4794, 5071, 5358, 5652, 5953, 6263, 6581, 6906, 7239, 7581, 7929, 8287, 8650, 9024, 9404, 9793, 10187, 10594, 11003, 11425, 11850, 12288, 12729, 13183, 13638, 14109, 14580, 15066, 15553, 16055, 16557, 17075, 17592, 18126, 18660, 19208, 19758, 20323, 20888, 21468, 22050, 22645, 23243, 23853, 24467, 25094, 25723, 26364, 27011, 27667, 28329, 29001, 29679, 30367, 31061]\n    \n        if (totalSeats > Totals[Totals.length-1]){\n            console.error(\"total seats >\", Totals[Totals.length-1]);\n        }\n    \n        if (totalSeats < 1) {\n          console.error(\"total seats < 1\");\n        }\n        var rows;\n        var radius;\n        var poslist;\n        var J, R, angle;\n          // Figure out how many rows are needed:\n          for (var i = 0; i < Totals.length; i ++ ){\n              if (Totals[i] >= totalSeats) {\n                  rows = i + 1;\n                  break\n              }\n          }\n          // Maximum radius of spot is 0.5/rows; leave a bit of space.\n          radius = 0.4/rows;\n    \n          // Create list of centre spots\n          poslist=[]\n          for( var i = 1; i < rows; i ++){\n            // Each row can contain pi/(2asin(2/(3n+4i-2))) spots, where n is the number of rows and i is the number of the current row.\n            J = parseInt((totalSeats)/Totals[rows-1]*Math.PI/(2*Math.asin(2.0/(3.0*rows+4.0*i-2.0))));\n            // The radius of the ith row in an N-row diagram (Ri) is (3*N+4*i-2)/(4*N)\n            R = (3.0*rows+4.0*i-2.0)/(4.0*rows);\n            if (J == 1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n            } else {\n              for (var j = 0; j < J; j ++){\n                // The angle to a spot is n.(pi-2sin(r/Ri))/(Ni-1)+sin(r/Ri) where Ni is the number in the arc\n                // x=R.cos(theta) + 1.75\n                // y=R.sin(theta)\n                angle = (j)*(Math.PI-2.0*Math.sin(radius/R))/(J-1.0)+Math.sin(radius/R);\n                poslist.push({\n                  angle,\n                  x: R*Math.cos(angle)+1.75,\n                  y: R*Math.sin(angle)\n                });\n              }\n            }\n          }\n          J=totalSeats-poslist.length\n          R=(7.0*rows-2.0)/(4.0*rows)\n          if (J==1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n          }\n          else {\n              for (var j = 0; j < J; j ++) {\n                  angle=(j)*(Math.PI-2.0*Math.sin(radius/R))/((J)-1.0)+Math.sin(radius/R)\n                  poslist.push({\n                    angle,\n                    x: R*Math.cos(angle)+1.75,\n                    y: R*Math.sin(angle)\n                  })\n              }\n          }\n\n          poslist.sort(function(a,b) {\n            function value(x) {\n              return x.angle - Math.PI/2;\n            }\n            return value(b) - value(a);\n          })\n\n          function onMouseMove(svg, i){\n            svg\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltipDiv.html(getTooltipText(chartData[i], i))\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n          }\n          function onMouseOut(svg) {\n            svg\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n          }\n          \n          mainSvg.append('text')\n            .attr('x', 175)\n            .attr('y', 175)\n            .attr('style', \"font-size:36px;font-weight:bold;text-align:center;text-anchor:middle;font-family:sans-serif\")\n            .text(totalSeats);\n\n          var Counter=0 //How many spots have we drawn?\n          for (var i = 0; i < chartData.length; i ++){\n            //Make each party's blocks an svg group\n            var partySvg = mainSvg.append('g')\n              .attr(\"fill\", getFillColorFromPartyName(chartData[i].partyInfo.name, i))\n              .attr(\"id\", chartData[i].name);\n            \n            partySvg.on(\"mousemove\", onMouseMove.bind(this, partySvg, i))\t\t\t\t\t\n              .on(\"mouseout\", onMouseOut.bind(this, partySvg))\n            \n            for (var j = 0; j < chartData[i].seats; j ++, Counter ++){\n              partySvg.append('circle')\n                .attr('cx', poslist[Counter].x*100.0+5.0)\n                .attr('cy', 100.0*(1.75-poslist[Counter].y)+5.0)\n                .attr('r', radius*100.0)\n            }\n          }\n      }\n      pythonConvertedCode(totalSeats, mainSvg);\n\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./horseshoe.css\";\nimport {Chart} from \"../SeatHorseShoeChart/d3horseshoe\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats HorseShoe Chart',\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass HorseShoeChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 8\n      }\n\n      fetchDataFromOBJ(this.state, props);\n      this.state[\"numParties\"] = 100;\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-horseshoe-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"horseshoechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default HorseShoeChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName, formatClassNameFromString} from \"../../utils\";\nimport config from \"../../config\"\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 250;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 50;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", options.viewBox || (\"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset)))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n    svg.selectAll(\".topLabel\").remove();\n    svg.append(\"text\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n    if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n    } else {\n        errorText.text(\"\");\n    }\n    var partyColorByName = {};\n    var partyAbbrByName = {};\n    if (colorsData && colorsData[\"data\"][\"allParties\"][\"edges\"]) {\n      colorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n        partyColorByName[edge.node.name] = edge.node.colour;\n        partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n      })\n    }   \n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(groupChartData.map(item => item.eventDescription));\n\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = Math.min(100, d3.max(groupChartData.map(item => d3.max(item.data, function(d) { return parseFloat(options.yValue(d)); }))) * 1.5);\n      }\n      y.domain(minMaxY);\n\n      var availableParties = \n \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(4)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n\n      svg.selectAll(`.bar-group`).remove();\n      var groupSvgs = svg.selectAll(`.bar-group`).data(groupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.eventDescription)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.eventDescription) + x.bandwidth()*1/20}, 0)`);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n      \n      for (var i = 0; i < groupChartData.length; i ++) {\n        var eventDescription = groupChartData[i].eventDescription;\n        var chartData = groupChartData[i].data;\n\n        var subX = d3.scaleBand()\n          .rangeRound([0, x.bandwidth()*9/10])\n          .domain(chartData.map(function (d) {\n            return d.name;\n          }));\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(eventDescription)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n    \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", function (d, i) {\n              return subX(d.name)+subX.bandwidth()/4;\n            })\n            .attr(\"width\", subX.bandwidth()*1/2)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d)));\n            })\n            .attr(\"height\", function (d) {\n              return height - y(Number(options.yValue(d)));\n            })\n\n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return options.yValueFormat(options.yValue(d));\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d))) - 5;\n            })\n          \n          var parties = [];\n          var partyIecIds = [];\n          groupChartData.forEach(({data: chartData}) => {\n            chartData.forEach(({partyInfo}) => {\n              var party = partyInfo.name;\n              if (partyIecIds.indexOf(partyInfo.iecId) == -1) {\n                  parties.push(party);\n                  partyIecIds.push(partyInfo.iecId);\n              }\n            })\n          })\n          \n          function getLegendXY(i) {\n              return [XaxisOffset + (i%5)*100, height + 30 + parseInt(i/5) * 40];\n          }\n          svg.selectAll(`.${className(\"legend\")}`).remove();\n          var legends = svg.selectAll(`.${className(\"legend\")}`)\n              .data(parties)\n              .enter()\n              .append('g')\n              .attr(\"class\", className(\"legend\"))\n              .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n          legends\n              .append(\"rect\")\n              .attr('width', 10)\n              .attr('height', 10)\n              .attr('x', 0)\n              .attr('y', 0)\n              .attr(\"fill\", (party, i) => {\n                  return getFillColorFromPartyName(party);\n              })\n          legends.append('text')\n              .attr('x', 30)\n              .attr('y', 10)\n              .style('font-size', '12px')\n              .text(party => partyAbbrByName[party])\n      }\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../SplitNatProv/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForAllEvents,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesDataForAllEvents,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  dynamicYAxisFromValues: false\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numPartiesSplitNatProv: 3,\n        eventDescriptionsSplitNatProv: [\n          // \"National Elections 1999\",\n          // \"Provincial Elections 1999\",\n          // \"14 Apr 2004 National Election\",\n          // \"14 Apr 2004 Provincial Election\",\n          \"22 Apr 2009 National Election\",\n          \"22 Apr 2009 Provincial Election\",\n          \"2014 National Election\",\n          \"2014 Provincial Election\",\n          // \"2019 NATIONAL ELECTION\",\n          // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"province\",\n        provinceName: \"Western Cape\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 18\n      }\n\n      console.log(\"SplitNatProv state and props\", this.state, props)\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForAllEvents(props);\n      var dataLoaders = [votesDataLoader];\n\n      chartOptions.topLabel = `${getRegionName(props)} Race for Votes - Split (Nat/Prov)`;\n      if (this.state.componentID == -1000) {\n        chartOptions.topLabel = ``;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesDataForAllEvents(data, props);\n        // console.log(\"SplitNatProvProps\", props);\n        // console.log(\"SplitNatProvData\", data);\n        // console.log(\"SplitNatProvParsed\", chartData);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport MetisMenu from 'react-metismenu';\n\nimport config from '../../config'\nimport styles from \"./navbar.css\";\nimport events from \"../../events\";\nimport {\n    getProvincesData,\n    getMetrosData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    fetchDataFromOBJ\n} from \"../../utils\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cssPrefix(originName) {\n    return config.CSS_PREFIX+originName;\n}\n\nvar provincesData = getProvincesData();\nvar metrosData = getMetrosData();\n\nclass CustomLink extends React.Component {\n    constructor() {\n      super();\n  \n      this.onClick = this.onClick.bind(this);\n    }\n  \n    onClick(e) {\n      if (this.props.hasSubMenu) this.props.toggleSubMenu(e);\n      else {\n        this.props.activateMe({\n          newLocation: this.props.to,\n          selectedMenuLabel: this.props.label,\n        });\n      }\n    }\n  \n    render() {\n      return (\n        <div className=\"metismenu-link\" onClick={this.onClick}>\n          {this.props.children}\n        </div>\n      );\n    }\n  };\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2019 National Election\",\n            nationalEventDescription: \"2019 National Election\",\n            provincialEventDescription: \"2019 Provincial Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            comp: \"Race for Votes\",\n            activeLinkId: ''\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        this.handleNavBarSelection = this.handleNavBarSelection.bind(this);\n    }\n\n    componentDidMount() {\n        if(!document.getElementById('navbarcss')) {\n            var link = document.createElement('link');\n            link.id = 'navbarcss';\n            link.rel = 'stylesheet';\n            link.href = config.DOMAIN + '/navbar.css';\n            document.head.appendChild(link);\n        }\n\n        if(!document.getElementById('font-awesome')) {\n            var link = document.createElement('link');\n            link.id = 'font-awesome';\n            link.rel = 'stylesheet';\n            link.href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\";\n            document.head.appendChild(link);\n        }\n\n        this.refs.navbar.addEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentWillUnmount() {\n        this.refs.navbar.removeEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentDidUpdate() {\n    }\n\n    handleNavBarSelection(e) {\n        console.log(\"handleNavBarSelection\");\n        if (e.target.className.indexOf(\"metismenu-link\") == -1) {\n            return;\n        }\n        var iconClass = e.target.childNodes[0].className;\n        var classList = iconClass.split(' ');\n        var lastClass = classList[classList.length - 1];\n        var passInfo = lastClass.split('-');\n\n        var eventDescription, regionType, selectionData = {}, chartType = \"\";\n        var activeLinkId = passInfo.slice(1, passInfo.length).join('-');\n\n        if (passInfo[1] == '1') {\n            eventDescription = this.state.nationalEventDescription;\n            regionType = \"national\";\n            if (passInfo[2] == '1') {\n                switch (passInfo[3]) {\n                    case '1':\n                        chartType = \"votes-default\";\n                        break;\n                    case '2':\n                        chartType = \"votes-comparisons\";\n                        break;\n                    case '3':\n                        chartType = \"votes-CSIR\";\n                        break;\n                    case '4':\n                        chartType = \"votes-progress\";\n                        break;\n                    case '5':\n                        chartType = \"votes-turnout\";\n                        break;\n                    case '6':\n                        chartType = \"votes-myvd\";\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[2] == '2') {\n                switch (passInfo[3]) {\n                    case '1':\n                        chartType = \"seats-default\";\n                        break;\n                    case '2':\n                        chartType = \"seats-comparisons\";\n                        break;\n                    case '3':\n                        chartType = \"seats-electeds\";\n                        break;\n                    case '4':\n                        chartType = \"seats-women\";\n                        break;\n                    case '5':\n                        chartType = \"seats-age\";\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[3] == '4') {\n                // Main page for National Assembly\n                regionType = \"national\";\n                chartType = \"votes-default\";\n            } else {\n                return;\n            }\n        } else if (passInfo[1] == '2') {\n            eventDescription = this.state.provincialEventDescription;\n            regionType = \"province\";\n            selectionData = provincesData[passInfo[2]];\n            if (passInfo[3] == '1') {\n                switch (passInfo[4]) {\n                    case '1':\n                        chartType = \"votes-default\"; // done\n                        break;\n                    case '2':\n                        chartType = \"votes-comparisons\";\n                        break;\n                    case '3':\n                        chartType = \"votes-progress\"; // done\n                        break;\n                    case '4':\n                        chartType = \"votes-turnout\";// done\n                        break;\n                    case '5':\n                        chartType = \"votes-split\";\n                        break;\n                    case '6':\n                        chartType = \"votes-CSIR\";\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[3] == '2') {\n                switch (passInfo[4]) {\n                    case '1':\n                        chartType = \"seats-default\"; // done\n                        break;\n                    case '2':\n                        chartType = \"seats-comparisons\";\n                        break;\n                    case '3':\n                        chartType = \"seats-electeds\";\n                        break;\n                    case '4':\n                        chartType = \"seats-women\";\n                        break;\n                    case '5':\n                        chartType = \"seats-age\";\n                        break;\n                    default:\n                        return;\n                }\n\n            } else if (passInfo[3] == '4') {\n                // Main page for National Legislature\n                regionType = \"national\";\n                chartType = \"votes-default\";\n            } else {\n                return;\n            }\n        } else if (passInfo[1] == '3') { // metros\n            eventDescription = this.state.nationalEventDescription;\n            regionType = \"municipality\"\n            selectionData = metrosData[passInfo[2]];\n            chartType = \"votes-default\";\n        } else {\n            return;\n        }\n\n        if (!chartType)\n            return;\n        \n        e.preventDefault();\n        var newState;\n        if (regionType == \"national\") {\n            newState = {regionType: regionType};\n            // if (this.state.regionType == newState.regionType \n            //     && this.state.comp == chartType)\n            //     return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            // if (this.state.regionType == newState.regionType \n            //     && this.state.provinceName == newState.provinceName \n            //     && this.state.comp == chartType)\n            //     return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            // if (this.state.regionType == newState.regionType \n            //     && this.state.provinceName == newState.provinceName\n            //     && this.state.muniName == newState.muniName\n            //     && this.state.comp == chartType)\n            //     return;\n        }\n        newState.eventDescription = eventDescription;\n        newState.comp = chartType;\n\n        if (newState.comp == \"votes-myvd\") {\n            newState.regionType = \"municipality-vd\";\n            newState.iecId = \"\";\n        }\n\n        if (newState.comp == \"seats-electeds\" || newState.comp == \"seats-women\" || newState.comp == \"seats-age\") {\n            triggerCustomEvent(events.SEATS_ELECTEDS_EVENT, newState);\n            return;\n        }\n\n        triggerCustomEvent(events.QUICK_RESULTS_PREVIEW, newState);\n        // triggerCustomEvent(events.REGION_CHANGE, newState);\n        // triggerCustomEvent(events.MAP_PREVIEW, newState);\n\n        newState.activeLinkId = activeLinkId;\n        this.setState(newState);\n    }\n      \n    render () {\n        var content = [\n            {\n                label: 'National Assembly',\n                icon: `1-3-4-1`,\n                content: [\n                    {\n                        label: \"Race for votes\",\n                        content: [\n                            {\n                                icon: `1-1-1`,\n                                label: `National assembly`,\n                                to: `1-1-1`,\n                            },\n                            {\n                                icon: `1-1-2`,\n                                label: `Comparisons`,\n                                to: `1-1-2`,\n                            },\n                            // {\n                            //     icon: `1-1-3`,\n                            //     label: `CSIR Predictions`,\n                            //     to: `1-1-3`,\n                            // },\n                            {\n                                icon: `1-1-4`,\n                                label: `Counting progress`,\n                                to: `1-1-4`,\n                            },\n                            {\n                                icon: `1-1-5`,\n                                label: `Turnout`,\n                                to: `1-1-5`,\n                            },\n                            {\n                                icon: `1-1-6`,\n                                label: `My voting District`,\n                                to: `1-1-6`,\n                            },\n                            {\n                                label: `Metros`,\n                                content: metrosData.map((metro, i) => {\n                                    return {\n                                        icon: `3-${i}`,\n                                        label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                                        to: `3-${i}`,\n                                    }\n                                })\n                            }\n                        ]\n                    },\n                    {\n                        label: \"Race for seats\",\n                        content: [\n                            {\n                                icon: `1-2-1`,\n                                label: `National assembly`,\n                                to: `1-2-1`\n                            },\n                            {\n                                icon: `1-2-2`,\n                                label: `Comparisons`,\n                                to: `1-2-2`,\n                            },\n                            {\n                                icon: `1-2-3`,\n                                label: `Electeds`,\n                                to: `1-2-3`,\n                            },\n                            // {\n                            //     icon: `1-2-4`,\n                            //     label: `Women`,\n                            //     to: `1-2-4`,\n                            // },\n                            // {\n                            //     icon: `1-2-5`,\n                            //     label: `Age`,\n                            //     to: `1-2-5`,\n                            // }\n                        ]\n                    }\n                ]\n            },\n            {\n                label: 'Provincial Legislature',\n                icon: `2-3-4-1`,\n                content: provincesData.map((province, i) => {\n                    return {\n                        label: province.name,\n                        content: [\n                            {\n                                label: \"Race for votes\",\n                                content: [\n                                    {\n                                        icon: `2-${i}-1-1`,\n                                        label: `Provincial legislature`,\n                                        to: `2-${i}-1-1`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-2`,\n                                        label: `Comparisons`,\n                                        to: `2-${i}-1-2`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-3`,\n                                        label: `Counting progress`,\n                                        to: `2-${i}-1-3`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-4`,\n                                        label: `Turnout`,\n                                        to: `2-${i}-1-4`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-5`,\n                                        label: `Split (Nat/Prov)`,\n                                        to: `2-${i}-1-5`,\n                                    },\n                                    // {\n                                    //     icon: `2-${i}-1-6`,\n                                    //     label: `CSIR Predictions`,\n                                    //     to: `2-${i}-1-6`,\n                                    // },\n                                ]\n                            },\n                            {\n                                label: \"Race for seats\",\n                                content: [\n                                    {\n                                        icon: `2-${i}-2-1`,\n                                        label: `Provincial legislature`,\n                                        to: `2-${i}-2-1`,\n                                    },\n                                    {\n                                        icon: `2-${i}-2-2`,\n                                        label: `Comparisons`,\n                                        to: `2-${i}-2-2`,\n                                    },\n                                    {\n                                        icon: `2-${i}-2-3`,\n                                        label: `Electeds`,\n                                        to: `2-${i}-2-3`,\n                                    },\n                                    // {\n                                    //     icon: `2-${i}-2-4`,\n                                    //     label: `Women`,\n                                    //     to: `2-${i}-2-4`,\n                                    // },\n                                    // {\n                                    //     icon: `2-${i}-2-5`,\n                                    //     label: `Age`,\n                                    //     to: `2-${i}-2-5`,\n                                    // }\n                                ]\n                            }\n                        ]\n                    }\n                })\n            },\n            // {\n            //     icon: '',\n            //     label: 'Metros',\n                // content: metrosData.map((metro, i) => {\n                //     return {\n                //         icon: `4-${i}`,\n                //         label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                //         to: `4-${i}`,\n                //         // content: toShowCharts.map((toshowchart, chartIdx) => {\n                //         //     return {\n                //         //         icon: `4-${i}-${chartIdx}`,\n                //         //         label: toshowchart,\n                //         //         to: `4-${i}-${chartIdx}`,\n                //         //     }\n                //         // })\n                //     }\n                // })\n            // }\n        ];\n        \n        return (\n            <div className={[className(cssPrefix(\"menu-widget\")), cssPrefix(\"menu-widget\")].join(\" \")} ref=\"navbar\">\n                <MetisMenu activeLinkId={this.state.activeLinkId} content={content} LinkComponent={CustomLink}/>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport styles from \"./quickResultsWidget.css\";\n\nimport config from '../../config'\nimport events from \"../../events\";\n\nimport BarChart from '../BarChart/barchart';\n\nimport ProgressVotesPieChart from '../ProgVotesCountPiechart/piechart';\n\nimport RaceForSeatDonut from '../RaceForSeatDonut/piechart';\nimport VoteCompBarchart from '../VoteCompBarchart/barchart';\nimport SeatCompBarchart from '../SeatCompBarchart/barchart';\nimport SeatHorseShoeChart from \"../SeatHorseShoeChart/horseshoe\";\n\nimport SpoiltBarChart from '../SpoiltBarchart/barchart';\nimport SplitNatProvChart from '../SplitNatProv/barchart';\n\nimport TurnoutBarchart from '../TurnoutBarchart/barchart';\nimport TurnoutMap from '../TurnoutMap/map';\n\nimport NavBar from '../NavBar/navbar';\nimport Map from '../Map/map';\n\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getSpoiltData,\n    getTurnoutDataForOneEvent,\n    getProgressVotesCount,\n    getVotesDataM,\n    getSeatsData\n} from \"../../api\";\n\nimport {\n    getRegionName,\n    getRegionName2,\n    getRegionName3,\n    triggerCustomEvent,\n    fetchDataFromOBJ,\n    handleRegionChange,\n\n    parseSpoiltVotesData,\n    parseTurnoutDataForOneEvent,\n    parseProgressVotesCount,\n    parseVotesData,\n    parseSeatsData,\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n    return className(config.CSS_PREFIX + originName);\n}\n\nclass QuickResultsWidget extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2019 National Election\",\n            nationalEventDescription: \"2019 National Election\",\n            provincialEventDescription: \"2019 Provincial Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"65010035\", // regionIecId\n            comp: \"votes-default\",\n            stylesheetFor: \"web\",\n            componentID: 5,\n\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n            partyIecIds: [null, null, null, null],        \n            eventDescriptions: [\n                // \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                // \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                // \"2014 Provincial Election\",\n                \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            eventDescriptionsSplitNatProv: [\n                // \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                // \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                \"2014 Provincial Election\",\n                // \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            currentTurnout: 0,\n            currentCountingProg: 0,\n            currentSpoiltVotes: 0\n        }\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handleRegionChange = handleRegionChange.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    componentDidMount() {\n        var self = this;\n        this.refreshIntervalID = setInterval(() => {\n            self.fetchCurrentResultData();\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.addEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n\n        document.addEventListener(events.SEATS_ELECTEDS_EVENT, this.handleSeatsElectedsEvent); // \"seats-electeds-event\"\n\n        this.fetchCurrentResultData();\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.removeEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      this.fetchCurrentResultData()\n    }\n\n    handleSeatsElectedsEvent(event) {\n    }\n\n    fetchCurrentResultData() {\n        var self = this;\n        var newProps = JSON.parse(JSON.stringify(this.state));\n        var {comp, iecId} = this.state;\n\n        function dataLoadCallback(values) {\n            var spoiltData = values[0];\n            var turnoutData = values[1];\n            var progVotesData = values[2];\n\n            var parsedSpoiltData = parseSpoiltVotesData(spoiltData, newProps);\n            var parsedTurnoutData = parseTurnoutDataForOneEvent(turnoutData, newProps);\n            var parsedProgVotesData = parseProgressVotesCount(progVotesData, newProps);\n\n            var newState;\n            if (parsedTurnoutData[0] && parsedProgVotesData[0] && parsedSpoiltData[1]) {\n                newState = {            \n                    currentTurnout: parsedTurnoutData[0].percVoterTurnout,\n                    currentCountingProg: parsedProgVotesData[0].percent,\n                    currentSpoiltVotes: parsedSpoiltData[1].percent\n                };\n            } else {\n                newState = {            \n                    currentTurnout: 0,\n                    currentCountingProg: 0,\n                    currentSpoiltVotes: 0\n                };\n            }\n\n            if (comp == 'votes-comparisons') {\n                var votesData = values[3];\n                var parsedVotesData = parseVotesData(votesData, newProps);\n                newState.partyAbbrs = parsedVotesData.map(voteItem => voteItem.name);\n                newState.partyIecIds = parsedVotesData.map(voteItem => voteItem.iecId);\n            } else if (comp == 'seats-comparisons') {\n                var seatsData = values[3];\n                var parsedSeatsData = parseSeatsData(seatsData, newProps);\n                newState.partyAbbrs = parsedSeatsData.map(seatItem => seatItem.name);\n                newState.partyIecIds = parsedSeatsData.map(seatItem => seatItem.iecId);\n            }\n\n            if (newState.partyIecIds && newState.partyIecIds.join(\" \") != self.state.partyIecIds.join(\" \")) {\n                self.setState(newState);\n            } else {\n                if (self.refs.currentTurnout && self.refs.currentCountingProg && self.refs.currentSpoiltVotes) {\n                    self.refs.currentTurnout.innerHTML = newState.currentTurnout + \"%\";\n                    self.refs.currentCountingProg.innerHTML = newState.currentCountingProg + \"%\";\n                    self.refs.currentSpoiltVotes.innerHTML = newState.currentSpoiltVotes + \"%\";\n                }\n            }\n        }\n\n        if (newProps.regionType == \"municipality-vd\" && (!iecId || !iecId.length)) {\n            self.refs.currentTurnout.innerHTML = \"0%\";\n            self.refs.currentCountingProg.innerHTML = \"0%\";\n            self.refs.currentSpoiltVotes.innerHTML = \"0%\";\n            return;\n        }\n\n        // newProps.eventDescription = \"2019_mock1\";\n        var dataLoaders = [\n            getSpoiltData(newProps), \n            getTurnoutDataForOneEvent(newProps),\n            getProgressVotesCount(newProps),\n        ];\n\n        if (comp == 'votes-comparisons') {\n            dataLoaders.push(getVotesDataM(newProps));\n        }\n        if (comp == 'seats-comparisons') {\n            dataLoaders.push(getSeatsData(newProps));\n        }\n\n        Promise.all(dataLoaders)\n            .then(dataLoadCallback)\n            .catch(error => console.error(\"catched error\", error));\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var {\n            comp\n        } = this.state;\n        var self = this;\n        var zipfileName = `quick-results-widget-${comp.replace(/\\s/gi, '-')}(${getRegionName(self.state)})`;\n        var imageLoadPromises = [];\n        if (comp == 'votes-comparisons' || comp == 'seats-comparisons') {\n            imageLoadPromises = [\n                ...this.barchartInstances.map(instance => instance.exportAsPNGUri()),\n                this.mapInstance.exportAsPNGUri()\n            ];\n        } else {\n            imageLoadPromises = [\n                this.barchartInstance.exportAsPNGUri(), \n                this.mapInstance.exportAsPNGUri()\n            ];\n        }\n        Promise.all(imageLoadPromises).then(values => {\n            var zip = new window.JSZip();\n\n            var imgs = zip.folder(zipfileName);\n            values.forEach((element, idx) => {\n                imgs.file(`image${idx+1}.png`, element, {base64: true});\n            });\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `${zipfileName}.zip`);\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        if (newState.regionType == \"national\" && this.state.comp == \"votes-split\") {\n            newState.regionType = \"province\";\n            newState.provinceName = this.state.provinceName || \"Western Cape\";\n        }\n        this.setState(newState);\n\n        var triggerState = JSON.parse(JSON.stringify(newState));\n        triggerState.componentID = -1000;\n\n        triggerCustomEvent(events.CHART_PREVIEW, triggerState);\n        triggerCustomEvent(events.MAP_PREVIEW, triggerState);\n    };\n\n    renderTurnoutProgressSpoilt() {\n        var {\n            currentTurnout,\n            currentCountingProg,\n            currentSpoiltVotes,\n        } = this.state;\n\n        return (\n            <div className={cn(\"current-progress\")}>\n                <div className={cn(\"current-turnout\")}>\n                    <div>Turnout</div>\n                    <div ref=\"currentTurnout\">{currentTurnout}%</div>\n                </div>\n                <div className={cn(\"current-counting-progress\")}>\n                    <div>Counting Progress</div>\n                    <div ref=\"currentCountingProg\">{currentCountingProg}%</div>\n                </div>\n                <div className={cn(\"current-spoilt-votes\")}>\n                    <div>Spoilt Votes</div>\n                    <div ref=\"currentSpoiltVotes\">{currentSpoiltVotes}%</div>\n                </div>\n            </div>\n        )\n    }\n\n    renderQuickResultsTitle() {\n        var {\n            comp\n        } = this.state;\n        var self = this;\n        if (comp == 'votes-default') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    RACE FOR VOTES: <span className=\"regionName\">{getRegionName2(self.state)}</span>\n                </div>\n            );\n        }\n        if (comp == 'seats-default') {\n            return (\n                <div className={className(\"quick-results-title\")+\" \"+className(\"race-for-seats\")}>\n                    RACE FOR SEATS: <span className=\"regionName\">{getRegionName(self.state)}</span>(#SEATS)\n                </div>\n            );\n        }\n        if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    RACE FOR VOTES: TURNOUT - {getRegionName3(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-progress') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    COUNTING PROGRESS: {getRegionName(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-comparisons') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    VOTES COMPARISONS: {getRegionName(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'seats-comparisons') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    SEATS COMPARISONS: {getRegionName(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-myvd') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    My Voting District {getRegionName(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-split') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    {getRegionName(self.state)} Race for Votes - Split (Nat/Prov)\n                </div>\n                \n            )\n        }\n        return null;\n    }\n\n    renderMap() {\n        var {\n            comp,\n            iecId,\n            muniCode\n        } = this.state;\n        var mapState = JSON.parse(JSON.stringify(this.state));\n        if (comp == 'votes-myvd') {\n            if (iecId && iecId.length && muniCode && muniCode.length) {\n                mapState.disableNavigation = true;\n                return (\n                    <div className={className(\"map-container\")}>\n                        <Map \n                            ref={instance => { this.mapInstance = instance; }} \n                            key={comp}\n                            {...mapState}\n                            componentID={-1000}\n                        />\n                    </div>\n                );\n            }\n            return null;\n        }\n        if (comp == 'votes-split') {\n            mapState.disableNavigation = true;\n            mapState.regionType = \"national\";\n            return (\n                <div className={className(\"map-container\")}>\n                    <Map \n                        ref={instance => { this.mapInstance = instance; }} \n                        key={comp}\n                        {...mapState}\n                        componentID={-1000}\n                    />\n                </div>\n            ); \n        } else if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"map-container\")}>\n                    <TurnoutMap \n                        ref={instance => { this.mapInstance = instance; }} \n                        key={comp}\n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        } else {\n            return (\n                <div className={className(\"map-container\")}>\n                    <Map \n                        ref={instance => { this.mapInstance = instance; }} \n                        key={comp}\n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n    }\n\n    renderBarchart() {\n        var {\n            comp,\n            partyIecIds,\n            partyAbbrs,\n            iecId\n        } = this.state;\n        if (comp == 'votes-default' || (comp == 'votes-myvd' && iecId && iecId.length)) {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <BarChart \n                        key={comp}\n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state} \n                        componentID={-1000}/>\n                </div>\n            );\n        }\n        if (comp == 'seats-default') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <SeatHorseShoeChart\n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <TurnoutBarchart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-progress') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <ProgressVotesPieChart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-comparisons') {\n            var {numParties} = this.state;\n            this.barchartInstances = new Array(numParties);\n            return (\n                <div className={className(\"barchart-container\")}>\n                    {\n                        partyIecIds.map((partyIecId, partyIdx) => {\n                            return <VoteCompBarchart \n                                ref={instance => { this.barchartInstances[partyIdx] = instance; }} \n                                key={partyIdx}\n                                {...this.state}\n                                partyAbbr={partyAbbrs[partyIdx]}\n                                partyIecId={partyIecId}\n                                componentID={-1000}\n                            />\n                        })\n                    }\n                </div>\n            );\n        }\n        if (comp == 'seats-comparisons') {\n            this.barchartInstances = new Array(numParties);\n            return (\n                <div className={className(\"barchart-container\")}>\n                    {\n                        partyIecIds.map((partyIecId, partyIdx) => {\n                            return <SeatCompBarchart \n                                ref={instance => { this.barchartInstances[partyIdx] = instance; }} \n                                key={partyIdx}\n                                {...this.state}\n                                partyAbbr={partyAbbrs[partyIdx]}\n                                partyIecId={partyIecId}\n                                componentID={-1000}\n                            />\n                        })\n                    }\n                </div>\n            );\n        }\n        if (comp == 'votes-split') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <SplitNatProvChart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000}\n                    />\n                </div>\n                \n            )\n        }\n        return null;\n    }\n\n    renderMyVDEnterForm() {\n        var {comp} = this.state;\n        if (comp != 'votes-myvd') {\n            return null;\n        }\n        return (\n            <div className=\"voting-district-enter-form\">\n                <input ref=\"vdInput\" type=\"text\" placeholder=\"65010035 or 86550385\"/>\n                <button onClick={this.onShowVDResult.bind(this)}> Show Result</button>\n            </div>\n        )\n    }\n\n    onShowVDResult() {\n        if (this.refs.vdInput.value.length == 0) {\n            alert(\"please enter valid vd number\");\n            return;\n        }\n        var newState = {\n            regionType: \"municipality-vd\",\n            iecId: this.refs.vdInput.value,\n            muniCode: \"\"\n        }\n        triggerCustomEvent(events.REGION_CHANGE, newState);\n    }\n\n    render() {\n        var {\n            stylesheetFor,\n        } = this.state;\n        return (\n            <div className={className(\"quickresultswidget\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"row\")}>\n                    <div className={cn(\"col-md-4\")+\" \"+className(\"main-left-part\")}>\n                        <NavBar {...this.state}/>\n                    </div>\n                    <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                        {this.renderQuickResultsTitle()}\n                        {this.renderTurnoutProgressSpoilt()}\n                        {this.renderMyVDEnterForm()}\n                        {this.renderBarchart()}\n                        {this.renderMap()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuickResultsWidget;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName, formatClassNameFromString} from \"../../utils\";\nimport config from \"../../config\"\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", options.viewBox || (\"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset)))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      // svg.append(\"text\")\n      //   .attr(\"text-anchor\", \"end\")\n      //   .attr(\"x\", width)\n      //   .attr(\"y\", 40)\n      //   .text(options.usedValue);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(groupChartData.map(item => d3.max(item.data, function(d) { return parseFloat(options.yValue(d)); }))) + 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(groupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.partyAbbr)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append('rect')\n        .attr('class', className(config.CSS_PREFIX + \"grouprect\"))\n        .attr('x', -x.bandwidth()*1/12)\n        .attr('y', YaxisOffset - 85)\n        .attr('width', x.bandwidth()*5/6)\n        .attr('height', 120 + height - YaxisOffset);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"baraxistext-container\");\n      \n      for (var i = 0; i < groupChartData.length; i ++) {\n        var partyAbbr = groupChartData[i].partyAbbr;\n        var chartData = groupChartData[i].data;\n\n        var subX = d3.scaleBand()\n          .rangeRound([0, x.bandwidth()*2/3])\n          .domain(chartData.map(function (d) {\n            return d.name;\n          }));\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(partyAbbr)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n        var barAxisTextSvg = groupSvg.select(\".baraxistext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n    \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", function (d, i) {\n              return subX(d.name)+subX.bandwidth()/4;\n            })\n            .attr(\"width\", subX.bandwidth()*1/2)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d)));\n            })\n            .attr(\"height\", function (d) {\n              return height - y(Number(options.yValue(d)));\n            })\n            \n\n          var barAxisTexts = barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barAxisTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barAxisTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) + 18;\n            })\n          barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return /(19|20)\\d{2}/g.exec(d.name)[0];\n            });\n            \n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return options.yValueFormat(options.yValue(d));\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d))) - 5;\n            })\n      }\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true,\n  viewBox: '45 0 655 340'\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 12\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n      \n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Seats Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Seats Comparison - ${getNationOrProvinceName(props)}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName, formatClassNameFromString} from \"../../utils\";\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(d.delta);\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(d.delta);\n        }\t\n      }\n\n      var newGroupChartData = groupChartData.map(item => {\n        var chartData = item.data;\n        return {\n          ...item,\n          data: [{\n            ...chartData[1],\n            delta: options.yValue(chartData[1]) - options.yValue(chartData[0])\n          }]\n        }\n      });\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [-100, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(newGroupChartData.map(item => parseFloat(item.data[0].delta))) + 1\n        minMaxY[0] = d3.min(newGroupChartData.map(item => parseFloat(item.data[0].delta))) - 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(newGroupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.partyAbbr)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n      \n      for (var i = 0; i < newGroupChartData.length; i ++) {\n        var partyAbbr = newGroupChartData[i].partyAbbr;\n        var deltaData = newGroupChartData[i].data;\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(partyAbbr)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData);\n\n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", x.bandwidth()/6)\n            .attr(\"width\", x.bandwidth()*1/3)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return Math.min(y(Number(d.delta)), y(0));\n            })\n            .attr(\"height\", function (d) {\n              return Math.abs(y(Number(d.delta)) - y(0));\n            })\n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return x.bandwidth()/3;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"12px\")\n            .attr(\"y\", function(d) {\n              if (d.delta > 0)\n                return y(0) - 5;\n              return y(0) + 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData)\n            .text(function(d) {\n              return options.yValueFormat(d.delta);\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              var barTextYDelta = 0;\n              if (d.delta > 0) {\n                barTextYDelta = -5;\n              } else {\n                barTextYDelta = 15;\n              }\n              return y(Number(d.delta)) + barTextYDelta;\n            })\n      }\n\n      svg.selectAll(\".xAxisLine\").remove();\n      var axisThick = 2;\n      svg.append('line')\n        .attr('class', 'xAxisLine')\n        .attr('stroke-width', axisThick)\n        .attr('stroke', \"currentColor\")\n        .attr('x1', XaxisOffset)\n        .attr('y1', y(0)-axisThick/2)\n        .attr('x2', width)\n        .attr('y2', y(0)-axisThick/2)\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 13\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-swing-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"deltabarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getNationOrProvinceName(props)}: Swing ${years}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 14\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n      \n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Votes Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Votes Comparison - ${getRegionName(props)}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => (value > 0? '+': '') + (value.toFixed(2)) + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 15\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-swing-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"deltabarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      \n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getRegionName(props)}: Swing ${years}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed,\n  QuickResultsWidget,\n  QuickResultsWidgetEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <QuickResultsWidget stylesheetFor={\"tv\"} eventDescription={\"2019 NATIONAL ELECTION\"} nationalEventDescription={\"2019 NATIONAL ELECTION\"} provincialEventDescription={\"2019 PROVINCIAL ELECTION\"} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}