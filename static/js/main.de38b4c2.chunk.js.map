{"version":3,"sources":["events/index.js","config/index.js","api/index.js","components/BarChart/barchart.js","components/BarChart/barchartEmbed.js","components/Map/map.js","components/Map/mapEmbed.js","App.js","components/Box/Box.js","serviceWorker.js","index.js"],"names":["events","config","DOMAIN","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","chart","dataRefreshTime","className","originName","styles","Chart","container","width","height","tooltipDiv","predefColors","svg","append","attr","document","getElementsByClassName","d3","style","x","rangeRound","y","YaxisOffset","text","barSvg","barTextSvg","this","draw","chartData","domain","map","d","name","select","transition","duration","call","ticks","tickFormat","bars","selectAll","concat","data","exit","remove","enter","bandwidth","i","length","on","html","partyInfo","split","toLowerCase","replace","l","toUpperCase","percOfVotes","pageX","pageY","Number","barTexts","destroy","BarChart","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","self","assertThisInitialized","state","numParties","regionName","regionType","setInterval","getContainer","handleRegionChange","bind","redrawChart","addEventListener","window","removeEventListener","modifW","body","clientWidth","modifH","clientHeight","setState","event","newState","detail","console","log","refs","vizcontainer","react_default","a","createElement","ref","options","fullRouteVoteResultsFile","voteResultLoader","Promise","resolve","reject","then","results","filter","edge","indexOf","slice","catch","error","getVotesDataT","drawGraph","edges","node","el","validVotes","parseInt","Component","originClassName","bootstrapStyles","BarChartEmbed","elementId","eventType","_this2","_this$state","type","placeholder","onChange","e","target","value","Map","parentProvinceName","nationalMapFile","fullRouteGeoJsonFile","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","getLoadingSpinner","process","w","classed","CustomEvent","dispatchEvent","geoJsonLoader","all","values","getJsonDataFeatures","geoJsonData","topojson","objects","features","projection","fitSize","path","center","projectionCenter","geometry","polylabel","coordinates","properties","SPROVINCE","smunicipal","SMUNICIPAL","labelElements","regions","overlapCnt","getBoundingClientRect","j","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","loading","react_loading_default","color","MapEmbed","locationName","App","BarChart_barchart","Map_map","BarChart_barchartEmbed","Map_mapEmbed","id","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de38b4c2.chunk.js","sourcesContent":["const REGION_CHANGE = \"region-change\";\n\nexport default {\n    REGION_CHANGE\n};","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\"\n}\n\nexport default config;","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport gql from \"graphql-tag\"\nimport * as d3 from \"d3\"\nimport config from \"../config\"\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"http://elections2019.xyz/graphql\", useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n  cache: new InMemoryCache()\n})\n\nexport function getVotesDataT(options) {\n  var fullRouteVoteResultsFile = config.DOMAIN + \"/votedata/\" + \"results.json\";\n  var voteResultLoader = d3.json(fullRouteVoteResultsFile);\n\n  return new Promise(function(resolve, reject) {\n    voteResultLoader.then(function(results) {\n      console.log(\"results\", results[\"data\"][\"allProvincialBallots\"][\"edges\"], options);\n\n      results[\"data\"][\"allProvincialBallots\"][\"edges\"] = results[\"data\"][\"allProvincialBallots\"][\"edges\"].filter(edge => {\n        console.log(\"checking ...\", edge[\"node\"][\"location\"][\"name\"]);\n        if (options.regionType == \"national\") {\n          console.log(\"checkinged1\", edge[\"node\"][\"location\"][\"name\"].indexOf(\"Country\") != -1);\n          return (edge[\"node\"][\"location\"][\"name\"].indexOf(\"Country\") != -1);\n        } else if (options.regionType == \"province\") {\n          console.log(\"checkinged2\", edge[\"node\"][\"location\"][\"name\"] == options.regionName);\n          return (edge[\"node\"][\"location\"][\"name\"] == options.regionName);\n        } else {\n          console.log(\"checkinged3\", false);\n          return false;\n        }\n      })\n      if (results[\"data\"][\"allProvincialBallots\"][\"edges\"].length) {\n        results[\"data\"][\"allProvincialBallots\"][\"edges\"][0][\"node\"][\"partyResults\"][\"edges\"] \n          = results[\"data\"][\"allProvincialBallots\"][\"edges\"][0][\"node\"][\"partyResults\"][\"edges\"].slice(0, options.numParties)\n      }\n      resolve(results);\n    }).catch(function(error) {\n      console.error(\"error\", error);\n      reject(error);\n    })\n  });\n}\n\nexport function getVotesDataM(options) {\n  return client.query({\n    query: gql`\n    {\n      allProvincialBallots{\n        edges{\n          node{\n            partyResults {\n              edges{\n                node{\n                  validVotes\n                  percOfVotes\n                  party {\n                    id\n                    name\n                    abbreviation\n                  }\n                }\n              }\n            }\n            location {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getVotesData(options) {\n    return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n              event_Description_Icontains:\"2004\", \n            event_EventType_Description_Icontains:\"${options.regionType}\",\n            location_Name:\"${options.regionName}\"\n        \n          ) {\n            edges {\n              node {\n                topResult(validVotes_Gt:1000, last:${options.numParties}) {\n                  edges {\n                    node {\n                      validVotes\n                      party {\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                }\n                location {\n                  name\n                }\n              }\n            }\n          }\n        }\n        `,\n      });\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./barchart.css\";\n\nimport events from \"../../events\";\nimport {\n  getVotesData,\n  getVotesDataT\n} from \"../../api\";\n\nvar dataRefreshTime = 30 * 1000;\n\n\n// for the purposes of the proof of concept - production data should be live\nvar use_live_data = true;\n\nvar js = {\n    \"data\": {\n      \"allProvincialBallots\": {\n        \"edges\": [\n          {\n            \"node\": {\n              \"partyResults\": {\n                \"edges\": [\n                  {\n                    \"node\": {\n                      \"validVotes\": 15311,\n                      \"percOfVotes\": 84.44,\n                      \"party\": {\n                        \"id\": \"52\",\n                        \"name\": \"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE\",\n                        \"abbreviation\": \"DA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 1508,\n                      \"percOfVotes\": 8.32,\n                      \"party\": {\n                        \"id\": \"7\",\n                        \"name\": \"AFRICAN NATIONAL CONGRESS\",\n                        \"abbreviation\": \"ANC\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 328,\n                      \"percOfVotes\": 1.81,\n                      \"party\": {\n                        \"id\": \"938\",\n                        \"name\": \"AGANG SOUTH AFRICA\",\n                        \"abbreviation\": \"AGANG SA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 255,\n                      \"percOfVotes\": 1.41,\n                      \"party\": {\n                        \"id\": \"945\",\n                        \"name\": \"ECONOMIC FREEDOM FIGHTERS\",\n                        \"abbreviation\": \"EFF\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 198,\n                      \"percOfVotes\": 1.09,\n                      \"party\": {\n                        \"id\": \"4\",\n                        \"name\": \"VRYHEIDSFRONT PLUS\",\n                        \"abbreviation\": \"VF Plus\"\n                      }\n                    }\n                  }\n                ]\n              },\n              \"location\": {\n                \"id\": \"UHJvdmluY2VUeXBlOjk5\",\n                \"name\": \"Out of Country\"\n              }\n            }\n          }\n        ]\n      }\n    }\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction Chart(container, width, height) {\n  var XaxisOffset = 70;\n  var YaxisOffset = 20;\n  var predefColors = [\"blue\", \"yellow\", \"red\"];\n  var svg = container.append(\"svg\")\n      .attr(\"width\", width + XaxisOffset)\n      .attr(\"height\", height + YaxisOffset);\n\n  var tooltipDiv;\n  if (document.getElementsByClassName(\"tooltip\")[0]) {\n    tooltipDiv = d3.select(\".tooltip\");\n  } else {\n    tooltipDiv = d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n\n  var x = d3.scaleBand()\n    .rangeRound([XaxisOffset, width])\n\n  var y = d3.scaleLinear()\n    .rangeRound([height, YaxisOffset]);\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n    .append(\"text\")\n    .attr(\"class\", className(\"percentage-label\"))\n    .attr(\"transform\", \"rotate(-90)\")\n    .text(\"PERCENTAGE VOTES\")\n    .attr(\"text-anchor\", \"middle\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n\n  var barSvg = svg.append(\"g\")\n    .attr(\"class\", className(\"bar-container\"));\n  var barTextSvg = svg.append(\"g\")\n    .attr(\"class\", className(\"bartext-container\"));\n\n  this.draw = function(chartData) {\n    x.domain(chartData.map(function (d) {\n        return d.name;\n      }));\n    y.domain([0, 100]);\n\n\t\tsvg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n\t\tsvg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n      .ticks(6)\n      .tickFormat(function(d) { return d + \"%\"; })\n    )\n\n    var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n\n    bars.exit()\n      .transition()\n      .duration(300)\n      .attr(\"y\", function(d) {\n        return y(0);\n      })\n      .attr(\"height\", 0)\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n    bars.enter()\n        .append(\"rect\")\n        .attr(\"class\", className(\"bar\"))\n        .attr(\"x\", function (d) {\n          return x(d.name)+x.bandwidth()/20;\n        })\n        .attr(\"width\", x.bandwidth()*9/10)\n        .attr(\"fill\", (d,i) => predefColors[i%predefColors.length])\n        .on(\"mousemove\", function(d) {\t\t\n            d3.select(this)\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            function formatPartyName(name) {\n              return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n            }\n            tooltipDiv.html(formatPartyName(d.partyInfo.name) + \" : \" + d.percOfVotes + \"%\")\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            d3.select(this)\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n        })\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)        \n\n      barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n        .transition()\n        .duration(300)\n        .attr(\"y\", function (d) {\n          return y(Number(d.percOfVotes));\n        })\n        .attr(\"height\", function (d) {\n          return height - y(Number(d.percOfVotes));\n        })\n        \n      var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n\n      barTexts.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0) - 5;\n        })\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n\n      barTexts.enter().append(\"text\")\n        .attr(\"class\", className(\"bartext\"))\n        .attr(\"x\", function (d) {\n          return x(d.name)+x.bandwidth()/2;\n        })\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"y\", function(d) {\n          return y(0) - 5;\n        })\n      barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n        .text(function(d) {\n          return d.percOfVotes + \"%\";\n        })\n        .transition()\n        .duration(300)\n        .attr(\"y\", function (d) {\n          return y(Number(d.percOfVotes)) - 5;\n        })\n  }\n  this.destroy = function() {\n    svg.remove();\n  }\n}\n\nvar chart;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        regionName: \"SA\",\n        regionType: \"national\",\n        width: 600,\n        height: 220\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionName) {\n        this.state.regionName = props.regionName;\n      }\n      if (props.width) {\n        this.state.width = props.width;\n      }\n      if (props.height) {\n        this.state.height = props.height;\n      }\n      setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.redrawChart = this.redrawChart.bind(this);\n    }\n  \n    componentDidMount() {\n      this.draw(this.getContainer(), this.state)\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      window.addEventListener(\"resize\", this.redrawChart, 200);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      window.removeEventListener(\"resize\", this.redrawChart);\n    }\n\n    redrawChart() {\n      var modifW = document.body.clientWidth, modifH = document.body.clientHeight/3;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), modifW, modifH);\n      this.setState({width: modifW, height: modifH});\n    };\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      console.log(\"handleRegionChange\", newState);\n      this.setState({regionName: newState.regionName, regionType: newState.regionType})\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      return (\n          <div>\n            <div className={className(\"chart-title\")}>RACE FOR VOTES ({this.state.regionName}): </div>\n            <div ref=\"vizcontainer\" className={className(\"chart-body\")}></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      if (use_live_data) {\n        getVotesDataT({\n          numParties: props.numParties || 5,\n          regionName: props.regionName || \"Western Cape\",\n          regionType: props.regionType || \"province\"\n        }).then(function(data) {\n            self.drawGraph(container, props, data);\n        }).catch(error => console.error(error));\n      }\n      else {\n          self.drawGraph(container, props, js);\n      }\n    }\n\n    drawGraph(container, props, data) {\n        var chartData;\n        var results = data[\"data\"][\"allProvincialBallots\"].edges[0][\"node\"][\"partyResults\"][\"edges\"];\n        \n        chartData = results.map(function(node) {\n            var el = node[\"node\"];\n            return {\n                name: el[\"party\"][\"abbreviation\"],\n                validVotes: el[\"validVotes\"],\n                percOfVotes: el[\"percOfVotes\"],\n                partyInfo: el[\"party\"]\n            }\n        });\n\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height);\n        chart.draw(chartData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventType: \"province\",\n            regionName: \"Western Cape\",\n            numParties: 5\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventType,\n            regionName,\n            numParties\n        } = this.state;\n        return (\n          <div>\n            <h3> Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event Type </label>\n                  <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"National\"\n                    onChange={e => this.setState({eventType: e.target.value})}/>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Location Name</label>\n                  <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"Western Cape\"\n                    onChange={e => this.setState({regionName: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script><script>showBarChart(document.getElementById(\"${elementId}\",\"${eventType}\",\"${regionName}\",${numParties}));</script>`}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\n\nexport default BarChartEmbed;\n\n\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"./map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          regionType: \"national\",\n          regionName: \"SA\",\n          parentProvinceName: \"\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.regionName) {\n            this.state.regionName = props.regionName;\n        }\n    }\n\n\n\n    drawGraph(container, props) {\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(regionName) {\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[regionName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.regionName);\n                case \"municipality\":\n                    return self.state.regionName + \".topojson\";\n                default:\n                    return null;\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv;\n        if (document.getElementsByClassName(\"tooltip\")[0]) {\n          tooltipDiv = d3.select(\".tooltip\");\n        } else {\n          tooltipDiv = d3.select(\"body\").append(\"div\")\t\n            .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n            .style(\"opacity\", 0);\n        }\n\n        console.log(\"process.env\", process.env)\n        console.log(\"fullRouteGeoJsonFile\", fullRouteGeoJsonFile);\n\n        var w = 1400;\n        var h = 700;\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\").style(\"background-color\",\"#ffffff\")\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h)\n            .classed(\"svg-content\", true);\n\n        var fo = svg.append(\"foreignObject\")\n            .attr(\"x\", w - 100)\n            .attr(\"y\", 10)\n            .attr(\"width\", 100)\n            .attr(\"height\", 30)\n            .attr(\"class\", \"map-controls\")\n        fo.append(\"xhtml:div\")\n            .append(\"button\")\n            .attr(\"class\", \"go-back\")\n            .html(\"go back\")\n            .on(\"click\", function() {\n                var regionType = self.state.regionType;\n                var newState, event;\n                if (regionType === \"province\") {\n                    newState = {regionType: \"national\", regionName: \"SA\"};\n                    event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                    document.dispatchEvent(event);\n                    self.setState(newState);\n                } else if (regionType === \"municipality\") {\n                    function getProvinceFromMunicipality(municipalityName) {\n                        return self.state.parentProvinceName;\n                    }\n                    newState = {\n                        regionType: \"province\", \n                        regionName: getProvinceFromMunicipality(self.regionName)\n                    };\n                    event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                    document.dispatchEvent(event);\n                    self.setState(newState);\n                }\n            });\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n\n        Promise.all([geoJsonLoader]).then(function(values){ \n\n            console.log(\"json load Finished\");\n            var geoJsonData = values[0];\n\n            var getJsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.regionName]);\n            }\n\n            getJsonDataFeatures = geoJsonData.features;\n\n            console.log(\"getJsonDataFeatures\", getJsonDataFeatures);\n\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(getJsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", regionColor)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            if (self.state.regionType !== \"municipality\") {\n                //show place label\n                svg.selectAll(\".place-label\")\n                    .data(getJsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function(d) { \n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    })\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                var labelElements = document.getElementsByClassName(\"place-label\");\n\n                var regions = {};\n                var overlapCnt = {};\n                var i;\n\n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    regions[i] = labelElements[i].getBoundingClientRect();\n                }\n    \n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    for (var j = 0; j < i; j ++) {\n                        var rect1 = regions[i];\n                        var rect2 = regions[j];\n                        var overlap = !(rect1.right < rect2.left || \n                            rect1.left > rect2.right || \n                            rect1.bottom < rect2.top || \n                            rect1.top > rect2.bottom);\n                        if (overlap) {\n                            overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n                        }\n                    }\n                    if (overlapCnt[i] > 2) {\n                        labelElements[i].setAttribute(\"opacity\", 0)\n                    } else if (overlapCnt[i] > 0){\n                        labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n                    } else {\n    \n                    }\n                }\n            }\n\n            \n\t\t\t\t\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(getJsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n                    function regionName() {\n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    }\n                    tooltipDiv.html(regionName())\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    console.log(\"click event\", i, d.properties);\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            regionName: d.properties.SPROVINCE\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        function getMunicipalityName(properties) {\n                            return properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        newState = {\n                            regionType: \"municipality\", \n                            regionName: getMunicipalityName(d.properties),\n                            parentProvinceName: self.state.regionName\n                        }\n                        // event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        // document.dispatchEvent(event);\n\n                        self.setState(newState);\n                    } else {\n                        // function getMunicipalityRegionName(properties) {\n                        //     return properties.SMUNICIPAL.split(\"-\")[0].replace(/\\s/g, \"\");\n                        // }\n                        // var newState = {\n                        //     regionType: \"municipality-region\", \n                        //     regionName: getMunicipalityRegionName(d.properties),\n                        // }\n                        // var event = new CustomEvent(events.REGION_CHANGE, newState);\n                        // document.dispatchEvent(event);\n                    }\n                })\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        })\n\n        var redrawChart = function() {\n\n        };\n\n        window.addEventListener(\"resize\", redrawChart, 200);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        return (\n            <div className=\"map-container\">\n                <div>{this.state.regionName}</div>\n                <div className=\"loading-spinner\" ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n                <div ref=\"vizcontainer\" className=\"map\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventType: \"province\",\n            locationName: \"Western Cape\",\n            numParties: 5\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId\n        } = this.state;\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script><script>showMap(document.getElementById(\"${elementId}\"));</script>`}</span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BarChart width=\"600\" height=\"220\" regionName=\"SA\" regionType=\"national\" numParties={3}/>\n        <Map />\n        <div className=\"barchartEmbed\">\n          <BarChartEmbed />\n        </div>\n        <div className=\"mapEmbed\">\n          <MapEmbed />\n        </div>\n        <div id=\"sales-data\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Box.css\";\n\nclass Box extends Component {\n    draw() {\n        d3.select(this.refs.box)\n            .append(\"rect\")\n            .attr(\"height\", this.props.height)\n            .attr(\"width\", this.props.width)\n            .classed(this.props.className, true)\n            .classed(\"box\", true)\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n      \n    render () {\n        return (\n          <svg width={this.props.width} height={this.props.height}>\n            <g ref=\"box\"></g>\n          </svg>\n        )\n    }\n}\n\nexport default Box;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}