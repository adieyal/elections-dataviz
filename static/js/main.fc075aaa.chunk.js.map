{"version":3,"sources":["events/index.js","api/index.js","components/BarChart/barchart.js","config/index.js","components/BarChart/barchartEmbed.js","components/Map/map.js","components/Map/mapEmbed.js","App.js","components/Box/Box.js","serviceWorker.js","index.js"],"names":["events","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","chart","dataRefreshTime","js","data","allProvincialBallots","edges","node","location","name","topResult","party","abbreviation","validVotes","className","originName","styles","Chart","container","width","height","tooltipDiv","predefColors","svg","append","attr","document","getElementsByClassName","d3","style","x","rangeRound","y","YaxisOffset","text","barSvg","barTextSvg","this","draw","chartData","domain","map","d","Number","value","select","transition","duration","call","ticks","bars","selectAll","concat","exit","remove","enter","bandwidth","i","length","on","html","pageX","pageY","barTexts","destroy","BarChart","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","self","assertThisInitialized","state","numParties","regionName","setInterval","getContainer","handleRegionChange","bind","redrawChart","addEventListener","window","removeEventListener","modifW","body","clientWidth","modifH","clientHeight","setState","event","refs","vizcontainer","react_default","a","createElement","ref","drawGraph","el","reverse","parseInt","Component","config","DOMAIN","originClassName","bootstrapStyles","BarChartEmbed","elementId","eventType","_this2","_this$state","type","placeholder","onChange","e","target","Map","regionType","parentProvinceName","console","log","nationalMapFile","fullRouteGeoJsonFile","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","process","JSON","stringify","indexOf","w","classed","geoJsonLoader","Promise","all","then","values","getJsonDataFeatures","geoJsonData","topojson","objects","features","projection","fitSize","path","geometry","center","polylabel","coordinates","projectionCenter","properties","SPROVINCE","smunicipal","split","SMUNICIPAL","labelElements","regions","overlapCnt","getBoundingClientRect","j","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","slice","newState","CustomEvent","dispatchEvent","replace","MapEmbed","locationName","App","BarChart_barchart","BarChart_barchartEmbed","Map_map","Map_mapEmbed","id","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+YAEeA,EAFO,sDCKP,IAAIC,IAAa,CAC9BC,KAAM,IAAIC,IAAS,CAAEC,IAAK,mCAAoCC,kBAAkB,EAAMC,QAAS,CAACC,eAAiB,yBACjHC,MAAO,IAAIC,MCEb,IA0QIC,EA1QAC,EAAkB,IAalBC,EAAK,CACPC,KAAQ,CACNC,qBAAwB,CACtBC,MAAS,CACP,CACEC,KAAQ,CACNC,SAAY,CACVC,KAAQ,gBAEVC,UAAa,CACXJ,MAAS,CACP,CACEC,KAAQ,CACNI,MAAS,CACPC,aAAgB,UAChBH,KAAQ,sBAEVI,WAAc,QAGlB,CACEN,KAAQ,CACNI,MAAS,CACPC,aAAgB,OAChBH,KAAQ,sCAEVI,WAAc,QAGlB,CACEN,KAAQ,CACNI,MAAS,CACPC,aAAgB,MAChBH,KAAQ,6BAEVI,WAAc,QAGlB,CACEN,KAAQ,CACNI,MAAS,CACPC,aAAgB,MAChBH,KAAQ,6BAEVI,WAAc,SAGlB,CACEN,KAAQ,CACNI,MAAS,CACPC,aAAgB,KAChBH,KAAQ,8CAEVI,WAAc,kBAYlC,SAASC,EAAUC,GACjB,OAAOC,IAAOD,IAAeA,EAG/B,SAASE,EAAMC,EAAWC,EAAOC,GAC/B,IAmCIC,EAhCAC,EAAe,CAAC,OAAQ,SAAU,OAClCC,EAAML,EAAUM,OAAO,OACtBC,KAAK,QAASN,EALD,IAMbM,KAAK,SAAUL,EALF,IAoChBC,EADEK,SAASC,uBAAuB,WAAW,GAChCC,IAAU,YAEVA,IAAU,QAAQJ,OAAO,OACnCC,KAAK,QAASX,EAAU,YACxBe,MAAM,UAAW,GAGtB,IAAIC,EAAIF,MACLG,WAAW,CA7CI,GA6CUZ,IAExBa,EAAIJ,MACLG,WAAW,CAACX,EA/CG,KAiDlBG,EAAIC,OAAO,KACRC,KAAK,YAAa,iBAAiBL,EAAO,EAAEa,IAAe,KAC3DT,OAAO,QACPC,KAAK,QAASX,EAAU,qBACxBW,KAAK,YAAa,eAClBS,KAAK,oBACLT,KAAK,cAAe,UAEvBF,EAAIC,OAAO,KACRC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBL,EAAS,KAE/CG,EAAIC,OAAO,KACRC,KAAK,QAAS,UACdA,KAAK,YAAa,oBAMrB,IAAIU,EAASZ,EAAIC,OAAO,KACrBC,KAAK,QAASX,EAAU,kBACvBsB,EAAab,EAAIC,OAAO,KACzBC,KAAK,QAASX,EAAU,sBAE3BuB,KAAKC,KAAO,SAASC,GACnBT,EAAEU,OAAOD,EAAUE,IAAI,SAAUC,GAC7B,OAAOA,EAAEjC,QAEbuB,EAAEQ,OAAO,CAAC,EAAGZ,IAAOW,EAAW,SAAUG,GACnC,OAAOC,OAAOD,EAAEE,WAIxBrB,EAAIsB,OAAO,WAAWC,aAAaC,SAAS,KAAKC,KAAKpB,IAAcE,IACpEP,EAAIsB,OAAO,WAAWC,aAAaC,SAAS,KAAKC,KAAKpB,IAAYI,GAC7DiB,MAAM,IAQT,IAAIC,EAAOf,EAAOgB,UAAP,IAAAC,OAAqBtC,EAAU,SAAUV,KAAKmC,GAEzDW,EAAKG,OACFP,aACAC,SAAS,KACTtB,KAAK,IAAK,SAASiB,GAClB,OAAOV,EAAE,KAEVP,KAAK,SAAU,GACfI,MAAM,eAAgB,MACtByB,SAEHJ,EAAKK,QACA/B,OAAO,QACPC,KAAK,QAASX,EAAU,QACxBW,KAAK,IAAK,SAAUiB,GACnB,OAAOZ,EAAEY,EAAEjC,MAAMqB,EAAE0B,YAAY,KAEhC/B,KAAK,QAAuB,EAAdK,EAAE0B,YAAc,IAC9B/B,KAAK,OAAQ,SAACiB,EAAEe,GAAH,OAASnC,EAAamC,EAAEnC,EAAaoC,UAElDC,GAAG,YAAa,SAASjB,GACtBd,IAAUS,MACPZ,KAAK,UAAW,IACnBJ,EAAWyB,aACNC,SAAS,KACTlB,MAAM,UAAW,IACtBR,EAAWuC,KAAKlB,EAAEjC,KAAO,MAAQiC,EAAEE,OAC9Bf,MAAM,OAASD,IAASiC,MAAS,MACjChC,MAAM,MAAQD,IAASkC,MAAQ,GAAM,QAE7CH,GAAG,WAAY,SAASjB,GACrBd,IAAUS,MACPZ,KAAK,UAAW,GACnBJ,EAAWyB,aACNC,SAAS,KACTlB,MAAM,UAAW,KAEzBJ,KAAK,IAAK,SAASiB,GAClB,OAAOV,EAAE,KAEVP,KAAK,SAAU,GAElBU,EAAOgB,UAAP,IAAAC,OAAqBtC,EAAU,SAAUV,KAAKmC,GAC3CO,aACAC,SAAS,KACTtB,KAAK,IAAK,SAAUiB,GACnB,OAAOV,EAAEW,OAAOD,EAAEE,UAEnBnB,KAAK,SAAU,SAAUiB,GACxB,OAAOtB,EAASY,EAAEW,OAAOD,EAAEE,UAG/B,IAAImB,EAAW3B,EAAWe,UAAX,IAAAC,OAAyBtC,EAAU,aAAcV,KAAKmC,GAErEwB,EAASV,OACNP,aACAC,SAAS,KACTtB,KAAK,IAAK,SAASiB,GAClB,OAAOV,EAAE,GAAK,IAEfH,MAAM,eAAgB,MACtByB,SAEHS,EAASR,QAAQ/B,OAAO,QACrBC,KAAK,QAASX,EAAU,YACxBW,KAAK,IAAK,SAAUiB,GACnB,OAAOZ,EAAEY,EAAEjC,MAAMqB,EAAE0B,YAAY,IAEhC/B,KAAK,cAAe,UACpBA,KAAK,YAAa,QAClBA,KAAK,IAAK,SAASiB,GAClB,OAAOV,EAAE,GAAK,IAElBI,EAAWe,UAAX,IAAAC,OAAyBtC,EAAU,aAAcV,KAAKmC,GACnDL,KAAK,SAASQ,GACb,OAAOA,EAAEE,QAEVE,aACAC,SAAS,KACTtB,KAAK,IAAK,SAAUiB,GACnB,OAAOV,EAAEW,OAAOD,EAAEE,QAAU,KAGpCP,KAAK2B,QAAU,WACbzC,EAAI+B,cA8GOW,cAtGX,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA4B,GACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAH,GAAAjB,KAAAX,KAAM6B,IACN,IAAIM,EAAIJ,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,IAFS,OAGjBA,EAAKO,MAAQ,CACXC,WAAY,EACZC,WAAY,eACZzD,MAAO,IACPC,OAAQ,KAEN8C,EAAMS,aACRR,EAAKO,MAAMC,WAAaT,EAAMS,YAE5BT,EAAMU,aACRT,EAAKO,MAAME,WAAaV,EAAMU,YAE5BV,EAAM/C,QACRgD,EAAKO,MAAMvD,MAAQ+C,EAAM/C,OAEvB+C,EAAM9C,SACR+C,EAAKO,MAAMtD,OAAS8C,EAAM9C,QAE5ByD,YAAY,WACVL,EAAKlC,KAAKkC,EAAKM,eAAgBN,EAAKE,QACnCxE,GACHiE,EAAKY,mBAAqBZ,EAAKY,mBAAmBC,KAAxBZ,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,KAC1BA,EAAKc,YAAcd,EAAKc,YAAYD,KAAjBZ,OAAAK,EAAA,EAAAL,QAAAK,EAAA,EAAAL,CAAAD,KAzBFA,mFA6BjB9B,KAAKC,KAAKD,KAAKyC,eAAgBzC,KAAKqC,OACpChD,SAASwD,iBAAiB3F,EAAsB8C,KAAK0C,oBACrDI,OAAOD,iBAAiB,SAAU7C,KAAK4C,YAAa,kDAIpD5C,KAAKC,KAAKD,KAAKyC,eAAgBzC,KAAKqC,sDAIpChD,SAAS0D,oBAAoB7F,EAAsB8C,KAAK0C,oBACxDI,OAAOC,oBAAoB,SAAU/C,KAAK4C,mDAI1C,IAAII,EAAS3D,SAAS4D,KAAKC,YAAaC,EAAS9D,SAAS4D,KAAKG,aAAa,EACxExF,GACFA,EAAM+D,UACR/D,EAAQ,IAAIgB,EAAMoB,KAAKyC,eAAgBO,EAAQG,GAC/CnD,KAAKqD,SAAS,CAACvE,MAAOkE,EAAQjE,OAAQoE,+CAGrBG,GACjBtD,KAAKqD,SAAS,CAACd,WAAY,wDAI3B,OAAOhD,IAAUS,KAAKuD,KAAKC,+CAI3B,OACIC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,gBAA1B,oBACAgF,EAAAC,EAAAC,cAAA,OAAKC,IAAI,eAAenF,UAAWA,EAAU,8CAKhDI,EAAWgD,GACd,IAAIM,EAAOnC,KAUPmC,EAAK0B,UAAUhF,EAAWgD,EAAO/D,qCAI7Be,EAAWgD,EAAO9D,GACxB,IAAImC,EAEJA,EADcnC,EAAI,KAAJ,qBAAqCE,MAAM,GAA3C,qBACMmC,IAAI,SAASlC,GAC7B,IAAI4F,EAAK5F,EAAI,KACb,MAAO,CACHE,KAAM0F,EAAE,MAAF,aACNvD,MAAOuD,EAAE,cAEdC,UAEH,IAAIjF,EAAQkF,SAASnC,EAAM/C,OACvBC,EAASiF,SAASnC,EAAM9C,QACvBnB,IACHA,EAAQ,IAAIgB,EAAMC,EAAWC,EAAOC,IACtCnB,EAAMqC,KAAKC,UApGI+D,aCjRRC,EAJF,CACTC,OAAU,kFCId,SAAS1F,EAAU2F,GACf,OAAOC,IAAgBD,IAAoBzF,IAAOyF,IAAoBA,MA4E3DE,cAvEX,SAAAA,EAAYzC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAsE,IACfxC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAuC,GAAA3D,KAAAX,KAAM6B,KACDQ,MAAQ,CACTkC,UAAW,OACXC,UAAW,WACXjC,WAAY,eACZD,WAAY,GANDR,mKAgBT,IAAA2C,EAAAzE,KACFmE,EAASD,EAAOC,OADdO,EAOF1E,KAAKqC,MAJLkC,EAHEG,EAGFH,UACAC,EAJEE,EAIFF,UACAjC,EALEmC,EAKFnC,WACAD,EANEoC,EAMFpC,WAEJ,OACEmB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,eACtBgF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACIgB,KAAK,OACLlG,UAAWA,EAAU,gBACrBmG,YAAY,kBACZC,SAAU,SAAAC,GAAC,OAAIL,EAAKpB,SAAS,CAACkB,UAAWO,EAAEC,OAAOxE,YAGxDkD,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,eACtBgF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACEgB,KAAK,OACLlG,UAAWA,EAAU,gBACrBmG,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIL,EAAKpB,SAAS,CAACmB,UAAWM,EAAEC,OAAOxE,YAExDkD,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,eACtBgF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACEgB,KAAK,OACLlG,UAAWA,EAAU,gBACrBmG,YAAY,eACZC,SAAU,SAAAC,GAAC,OAAIL,EAAKpB,SAAS,CAACd,WAAYuC,EAAEC,OAAOxE,YAEzDkD,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,eACtBgF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEgB,KAAK,SACLlG,UAAWA,EAAU,gBACrBmG,YAAY,IACZC,SAAU,SAAAC,GAAC,OAAIL,EAAKpB,SAAS,CAACf,WAAYwC,EAAEC,OAAOxE,YAEzDkD,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,eACtBgF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,cACxBgF,EAAAC,EAAAC,cAAA,4BAAA5C,OAAuBoD,EAAvB,8EAAApD,OAAwGwD,EAAxG,OAAAxD,OAAuHyD,EAAvH,OAAAzD,OAAsIwB,EAAtI,MAAAxB,OAAqJuB,EAArJ,4BAjEQ2B,uDCD5B,SAASxF,EAAUC,GACjB,OAAOC,IAAOD,IAAeA,MA0VhBsG,cArVX,SAAAA,EAAYnD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAgF,IACflD,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAiD,GAAArE,KAAAX,KAAM6B,KACDQ,MAAQ,CACX4C,WAAY,WACZ1C,WAAY,KACZ2C,mBAAoB,IAGlBrD,EAAMoD,aACNnD,EAAKO,MAAM4C,WAAapD,EAAMoD,YAE9BpD,EAAMU,aACNT,EAAKO,MAAME,WAAaV,EAAMU,YAZnBT,yEAkBTjD,EAAWgD,GACjBsD,QAAQC,IAAI,YAAa,MAAOpF,MAChC,IAAImC,EAAOnC,KACPqF,EAAkB,0BA4BtB,IAEIrG,EAFAsG,EAAuBpB,EAAOC,OAAS,YA1B3C,WAgBI,OAAOhC,EAAKE,MAAM4C,YACd,IAAK,WACD,OAAOI,EACX,IAAK,WACD,OAnBqB9C,EAmBMJ,EAAKE,MAAME,WAlB1C4C,QAAQC,IAAI,sBAAuB7C,GACP,CACxBgD,QAAW,qBACXC,WAAc,oBACdC,QAAW,oBACXC,gBAAiB,qBACjBC,aAAc,oBACdC,aAAc,oBACdC,eAAgB,oBAChBC,gBAAiB,oBACjBC,eAAgB,qBAESxD,GAO7B,IAAK,eACD,OAAOJ,EAAKE,MAAME,WAAa,YArBvC,IAA6BA,EAyBwByD,GAIvDhH,EADEK,SAASC,uBAAuB,WAAW,GAChCC,IAAU,YAEVA,IAAU,QAAQJ,OAAO,OACnCC,KAAK,QAASX,EAAU,YACxBe,MAAM,UAAW,GAGtB2F,QAAQC,IAAI,cAAea,iDAEyB,GAAhDC,KAAKC,UAAUF,gDAAaG,QAAQ,UACpCd,EAAuB,WAAaA,GAGxCH,QAAQC,IAAI,uBAAwBE,GAEpC,IAAIe,EAAI,KAERxH,EAAUiC,UAAU,OAAOG,SAC3B,IAAI/B,EAAML,EAAUM,OAAO,OACtBC,KAAK,sBAAuB,iBAAiBI,MAAM,mBAAmB,WACtEJ,KAAK,UAAW,gBAChBkH,QAAQ,eAAe,GA2BxBC,GAzBKrH,EAAIC,OAAO,iBACfC,KAAK,IAAKiH,MACVjH,KAAK,IAAK,IACVA,KAAK,QAAS,KACdA,KAAK,SAAU,IACfA,KAAK,QAAS,gBACGD,OAAO,aACxBA,OAAO,UACPC,KAAK,QAAS,WACdmC,KAAK,WACLD,GAAG,QAAS,WACT,IAAI2D,EAAa9C,EAAKE,MAAM4C,WAC5B,GAAkB,YAAdA,EACA9C,EAAKkB,SAAS,CAAC4B,WAAY,WAAY1C,WAAY,YAChD,GAAkB,gBAAd0C,EAA8B,CAIrC9C,EAAKkB,SAAS,CACV4B,WAAY,WACZ1C,YAAwCJ,EAAKI,WAJtCJ,EAAKE,MAAM6C,yBASd3F,IAAQ+F,IAE5BkB,QAAQC,IAAI,CAACF,IAAgBG,KAAK,SAASC,GAEvCxB,QAAQC,IAAI,sBACZ,IAEIwB,EAFAC,EAAcF,EAAO,IAGyB,GAA9CrB,EAAqBc,QAAQ,eAC7BS,EAAcC,IAAiBD,EAAaA,EAAYE,QAAQ5E,EAAKE,MAAME,cAG/EqE,EAAsBC,EAAYG,SAElC7B,QAAQC,IAAI,sBAAuBwB,GAGnC,IAAIK,EAAa1H,MAAiB2H,QAAQ,CAACb,EAjDvC,KAiD8CQ,GAC9CM,EAAO5H,MAAa0H,WAAWA,GAgDnC,GA7CA/H,EAAI4B,UAAJ,IAAAC,OAAkBtC,EAAU,YACvBV,KAAK6I,GACL1F,QACA/B,OAAO,QACPC,KAAK,QAASX,EAAU,WACxBW,KAAK,SAAU,QACfA,KAAK,OAAQ,SACbA,KAAK,KAAM,SAASiB,EAAGe,GACpB,gBAAAL,OAAiBK,KAEpBhC,KAAK,IAAK+H,GAEc,gBAAzBhF,EAAKE,MAAM4C,YAEX/F,EAAI4B,UAAU,gBACT/C,KAAK6I,GACT1F,QAAQ/B,OAAO,QACXC,KAAK,QAAS,eACdA,KAAK,YAAa,QAClBA,KAAK,YAAa,SAASiB,GACxB,GAAuB,WAAnBA,EAAE+G,SAASzC,KAAmB,CAC9B,IAAI0C,EAASC,IAAUjH,EAAE+G,SAASG,aAGlC,OAFIC,EAAmBP,EAAWI,IACjB,IAAM,GAChB,aAAeG,EAAmB,IAEzC,IACIA,EADAH,EAASC,IAAUjH,EAAE+G,SAASG,YAAY,IAG9C,OAFIC,EAAmBP,EAAWI,IACjB,IAAM,EAChB,aAAeG,EAAmB,MAGhDpI,KAAK,KAAM,SACXI,MAAM,cAAe,UACrBK,KAAK,SAASQ,GACX,MAA6B,YAAzB8B,EAAKE,MAAM4C,WACJ5E,EAAEoH,WAAWC,UACY,YAAzBvF,EAAKE,MAAM4C,WACX5E,EAAEoH,WAAWE,WAAWC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAEjDvH,EAAEoH,WAAWI,WAAWD,MAAM,KAAK,GAAGA,MAAM,KAAK,KAK3C,gBAAzBzF,EAAKE,MAAM4C,WAA8B,CAKzC,IAJA,IAAI6C,EAAgBzI,SAASC,uBAAuB,eAEhDyI,EAAU,GACVC,EAAa,GACR5G,EAAI,EAAGA,EAAIwF,EAAoBvF,OAAQD,IAC5C2G,EAAQ3G,GAAK0G,EAAc1G,GAAG6G,wBAGlC,IAAS7G,EAAI,EAAGA,EAAIwF,EAAoBvF,OAAQD,IAAM,CAClD,IAAK,IAAI8G,EAAI,EAAGA,EAAI9G,EAAG8G,IAAM,CACzB,IAAIC,EAAQJ,EAAQ3G,GAChBgH,EAAQL,EAAQG,KACJC,EAAME,MAAQD,EAAME,MAChCH,EAAMG,KAAOF,EAAMC,OACnBF,EAAMI,OAASH,EAAMI,KACrBL,EAAMK,IAAMJ,EAAMG,UAElBP,EAAW5G,GAAK4G,EAAW5G,GAAK4G,EAAW5G,GAAK,EAAI,GAGxD4G,EAAW5G,GAAK,EAChB0G,EAAc1G,GAAGqH,aAAa,UAAW,GAClCT,EAAW5G,GAAK,IACvB0G,EAAc1G,GAAGsH,UAAYZ,EAAc1G,GAAGsH,UAAUC,MAAM,EAAG,GAAK,QA8BlFzJ,EAAI4B,UAAU,eACT/C,KAAK6I,GACT1F,QACI/B,OAAO,QACPC,KAAK,IAAK+H,GACV/H,KAAK,QAAS,cACdA,KAAK,KAAM,SAASiB,EAAGe,GACpB,oBAAAL,OAAqBK,KAExBhC,KAAK,OAAQ,eACbkC,GAAG,YAAa,SAASjB,EAAGe,GACzB7B,IAAA,WAAAwB,OAAqBK,IAChBhC,KAAK,eAAgB,GACrBI,MAAM,eAAgB,MAE9B8B,GAAG,YAAa,SAASjB,GACO,gBAAzB8B,EAAKE,MAAM4C,aACfjG,EAAWyB,aACNC,SAAS,KACTlB,MAAM,UAAW,GAUtBR,EAAWuC,KARsB,YAAzBY,EAAKE,MAAM4C,WACJ5E,EAAEoH,WAAWC,UACY,YAAzBvF,EAAKE,MAAM4C,WACX5E,EAAEoH,WAAWE,WAAWC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAEjDvH,EAAEoH,WAAWI,WAAWD,MAAM,KAAK,GAAGA,MAAM,KAAK,IAI3DpI,MAAM,OAASD,IAASiC,MAAS,MACjChC,MAAM,MAAQD,IAASkC,MAAQ,GAAM,SAE7CH,GAAG,WAAY,SAASjB,EAAGe,GACxB7B,IAAA,WAAAwB,OAAqBK,IAChBhC,KAAK,eAAgB,GACrBI,MAAM,eAAgB,GAEE,gBAAzB2C,EAAKE,MAAM4C,YAEfjG,EAAWyB,aACNC,SAAS,KACTlB,MAAM,UAAW,KAEzB8B,GAAG,QAAS,SAASjB,EAAGe,GACrB+D,QAAQC,IAAI,cAAehE,EAAGf,EAAEoH,YAChCzI,EAAWyB,aACNC,SAAS,KACTlB,MAAM,UAAW,GAEtB,IAUiCiI,EAV7BxC,EAAa9C,EAAKE,MAAM4C,WAC5B,GAAkB,YAAdA,EAA0B,CAC1B,IAAI2D,EAAW,CACX3D,WAAY,WACZ1C,WAAYlC,EAAEoH,WAAWC,WAEzBpE,EAAQ,IAAIuF,YAAY3L,EAAsB0L,GAClDvJ,SAASyJ,cAAcxF,GACvBnB,EAAKkB,SAASuF,QACX,GAAkB,YAAd3D,EAA0B,CAI7B2D,EAAW,CACX3D,WAAY,eACZ1C,YALyBkF,EAKOpH,EAAEoH,WAJ3BA,EAAWE,WAAWC,MAAM,KAAK,GAAGmB,QAAQ,MAAO,KAK1D7D,mBAAoB/C,EAAKE,MAAME,YAE/Be,EAAQ,IAAIuF,YAAY3L,EAAsB0L,GAClDvJ,SAASyJ,cAAcxF,GAEvBnB,EAAKkB,SAASuF,MAa1BzD,QAAQC,IAAI,0BAOhBtC,OAAOD,iBAAiB,SAJN,aAI6B,kCAG9ChE,EAAWgD,GACZ7B,KAAK6D,UAAUhF,EAAWgD,+CAI1B7B,KAAKC,KAAKD,KAAKyC,eAAgBzC,KAAK6B,oDAIpC7B,KAAKC,KAAKD,KAAKyC,eAAgBzC,KAAK6B,8CAIpC,OAAOtC,IAAUS,KAAKuD,KAAKC,+CAI3B,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAAM3D,KAAKqC,MAAME,YACjBkB,EAAAC,EAAAC,cAAA,OAAKC,IAAI,eAAenF,UAAU,gBAjVhCwF,8BCPlB,SAASxF,EAAU2F,GACf,OAAOC,IAAgBD,IAAoBzF,IAAOyF,IAAoBA,MAiD3D4E,cA5CX,SAAAA,EAAYnH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAgJ,IACflH,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAiH,GAAArI,KAAAX,KAAM6B,KACDQ,MAAQ,CACTkC,UAAW,OACXC,UAAW,WACXyE,aAAc,eACd3G,WAAY,GANDR,mKAgBT,IAAA2C,EAAAzE,KACFmE,EAASD,EAAOC,OAEhBI,EACAvE,KAAKqC,MADLkC,UAEJ,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,eACtBgF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACIgB,KAAK,OACLlG,UAAWA,EAAU,gBACrBmG,YAAY,kBACZC,SAAU,SAAAC,GAAC,OAAIL,EAAKpB,SAAS,CAACkB,UAAWO,EAAEC,OAAOxE,YAG1DkD,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,eACtBgF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKlF,UAAWA,EAAU,cACtBgF,EAAAC,EAAAC,cAAA,4BAAA5C,OAAuBoD,EAAvB,yEAAApD,OAAmGwD,EAAnG,6BAtCGN,aCkBRiF,SCvBGjF,6LDOd,OACER,EAAAC,EAAAC,cAAA,OAAKlF,UAAU,OACbgF,EAAAC,EAAAC,cAACwF,EAAD,CAAUrK,MAAM,MAAMC,OAAO,MAAMwD,WAAW,eAAeD,WAAY,IACzEmB,EAAAC,EAAAC,cAAA,OAAKlF,UAAU,iBACbgF,EAAAC,EAAAC,cAACyF,EAAD,OAEF3F,EAAAC,EAAAC,cAAC0F,EAAD,MACA5F,EAAAC,EAAAC,cAAA,OAAKlF,UAAU,YACbgF,EAAAC,EAAAC,cAAC2F,EAAD,OAEF7F,EAAAC,EAAAC,cAAA,OAAK4F,GAAG,uBAZEtF,cEGEuF,QACW,cAA7B1G,OAAO3E,SAASsL,UAEe,UAA7B3G,OAAO3E,SAASsL,UAEhB3G,OAAO3E,SAASsL,SAASC,MACvB,2DCZNC,IAASC,OAAOnG,EAAAC,EAAAC,cAACkG,EAAD,MAASxK,SAASyK,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvD,KAAK,SAAAwD,GACjCA,EAAaC","file":"static/js/main.fc075aaa.chunk.js","sourcesContent":["const REGION_CHANGE = 'region-change';\n\nexport default {\n    REGION_CHANGE\n};","import { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport gql from 'graphql-tag'\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: 'http://elections2019.xyz/graphql', useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n  cache: new InMemoryCache()\n})\n\n\nexport function getVotesData(options) {\n    return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n              event_Description_Icontains:\"2004\", \n            event_EventType_Description_Icontains:\"National\",\n            location_Name:\"${options.regionName}\"\n        \n          ) {\n            edges {\n              node {\n                topResult(validVotes_Gt:1000, last:${options.numParties}) {\n                  edges {\n                    node {\n                      validVotes\n                      party {\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                }\n                location {\n                  name\n                }\n              }\n            }\n          }\n        }\n        `,\n      });\n}","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport styles from './barchart.css';\n\nimport events from '../../events';\nimport {\n  getVotesData\n} from '../../api';\n\nvar dataRefreshTime = 30 * 1000;\nvar predefBarChartColors = [\n  {R: 0, G: 114, B: 47},\n  {R: 3, G: 62, B: 108},\n  {R: 131, G: 23, B: 27},\n  {R: 170, G: 0, B: 14},\n  {R: 76, G: 114, B: 114},\n  {R: 191, G: 135, B: 50},\n];\nvar seed = 1;\n\n// for the purposes of the proof of concept - production data should be live\nvar use_live_data = false;\nvar js = {\n  \"data\": {\n    \"allProvincialBallots\": {\n      \"edges\": [\n        {\n          \"node\": {\n            \"location\": {\n              \"name\": \"Western Cape\"\n            },\n            \"topResult\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"VF Plus\",\n                      \"name\": \"VRYHEIDSFRONT PLUS\"\n                    },\n                    \"validVotes\": 23243\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"ACDP\",\n                      \"name\": \"AFRICAN CHRISTIAN DEMOCRATIC PARTY\"\n                    },\n                    \"validVotes\": 25318\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"EFF\",\n                      \"name\": \"ECONOMIC FREEDOM FIGHTERS\"\n                    },\n                    \"validVotes\": 50280\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"ANC\",\n                      \"name\": \"AFRICAN NATIONAL CONGRESS\"\n                    },\n                    \"validVotes\": 737219\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"DA\",\n                      \"name\": \"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE\"\n                    },\n                    \"validVotes\": 1241424\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction Chart(container, width, height) {\n  var XaxisOffset = 70;\n  var YaxisOffset = 20;\n  // var predefColors = predefBarChartColors;\n  var predefColors = ['blue', 'yellow', 'red'];\n  var svg = container.append(\"svg\")\n      .attr(\"width\", width + XaxisOffset)\n      .attr(\"height\", height + YaxisOffset);\n\n  function gradientName(rgb) {\n    return `gradientrgb-${rgb.R}-${rgb.G}-${rgb.B}`;\n  }\n\n  function defineGradient(defs, originRGB) {\n    function getMergedColorWithWhite(percent) {\n      var mixedR = (originRGB.R * (100-percent) + 255 * (percent))/100;\n      var mixedG = (originRGB.G * (100-percent) + 255 * (percent))/100;\n      var mixedB = (originRGB.B * (100-percent) + 255 * (percent))/100;\n      return `rgb(${mixedR},${mixedG},${mixedB})`;\n    }\n    var linearGradient = defs.append(\"linearGradient\")\n      .attr(\"id\", gradientName(originRGB));\n    var gradientInfo = [[0,0], [11, 92], [25,15], [82, 35], [100, 4]];\n    linearGradient.selectAll(\"stop\")\n      .data(gradientInfo)\n      .enter()\n      .append('stop')\n      .attr(\"offset\", d => d[0]+'%')\n      .attr(\"stop-color\", d => getMergedColorWithWhite(d[1]))\n      .attr(\"stop-opacity\", 1);\n  }\n\n  // var defs = svg.append(\"defs\");\n  // for (var i = 0; i < predefColors.length; i ++)\n  //   defineGradient(defs, predefColors[i]);\n\n  var tooltipDiv;\n  if (document.getElementsByClassName('tooltip')[0]) {\n    tooltipDiv = d3.select(\".tooltip\");\n  } else {\n    tooltipDiv = d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n\n  var x = d3.scaleBand()\n    .rangeRound([XaxisOffset, width])\n\n  var y = d3.scaleLinear()\n    .rangeRound([height, YaxisOffset]);\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n    .append(\"text\")\n    .attr(\"class\", className(\"percentage-label\"))\n    .attr(\"transform\", \"rotate(-90)\")\n    .text(\"PERCENTAGE VOTES\")\n    .attr(\"text-anchor\", \"middle\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n\n  // svg.append(\"g\")\n  //   .attr(\"class\", className(\"grid\"))\n  //   .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n\n  var barSvg = svg.append(\"g\")\n    .attr(\"class\", className(\"bar-container\"));\n  var barTextSvg = svg.append(\"g\")\n    .attr(\"class\", className(\"bartext-container\"));\n\n  this.draw = function(chartData) {\n    x.domain(chartData.map(function (d) {\n        return d.name;\n      }));\n    y.domain([0, d3.max(chartData, function (d) {\n          return Number(d.value);\n        })]);\n\n\n\t\tsvg.select('.x.axis').transition().duration(300).call(d3.axisBottom(x));\n\t\tsvg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n      .ticks(6)\n    )\n    // svg.select(\".grid\").transition().duration(300).call(d3.axisLeft(y)\n    //   .ticks(6)\n    //   .tickSize(-width+XaxisOffset)\n    //   .tickFormat(\"\")\n    // )\n\n    var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n\n    bars.exit()\n      .transition()\n      .duration(300)\n      .attr(\"y\", function(d) {\n        return y(0);\n      })\n      .attr(\"height\", 0)\n      .style('fill-opacity', 1e-6)\n      .remove();\n\n    bars.enter()\n        .append(\"rect\")\n        .attr(\"class\", className(\"bar\"))\n        .attr(\"x\", function (d) {\n          return x(d.name)+x.bandwidth()/20;\n        })\n        .attr(\"width\", x.bandwidth()*9/10)\n        .attr(\"fill\", (d,i) => predefColors[i%predefColors.length])\n        // .attr(\"fill\", (d, i) =>`url(#${gradientName(predefColors[i%predefColors.length])})`)\n        .on(\"mousemove\", function(d) {\t\t\n            d3.select(this)\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltipDiv.html(d.name + ' : ' + d.value)\t\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            d3.select(this)\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n        })\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)        \n\n      barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n        .transition()\n        .duration(300)\n        .attr(\"y\", function (d) {\n          return y(Number(d.value));\n        })\n        .attr(\"height\", function (d) {\n          return height - y(Number(d.value));\n        })\n        \n      var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n\n      barTexts.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0) - 5;\n        })\n        .style('fill-opacity', 1e-6)\n        .remove();\n\n      barTexts.enter().append(\"text\")\n        .attr(\"class\", className(\"bartext\"))\n        .attr(\"x\", function (d) {\n          return x(d.name)+x.bandwidth()/2;\n        })\n        .attr('text-anchor', 'middle')\n        .attr('font-size', '12px')\n        .attr(\"y\", function(d) {\n          return y(0) - 5;\n        })\n      barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n        .text(function(d) {\n          return d.value;\n        })\n        .transition()\n        .duration(300)\n        .attr(\"y\", function (d) {\n          return y(Number(d.value)) - 5;\n        })\n  }\n  this.destroy = function() {\n    svg.remove();\n  }\n}\n\nvar chart;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        regionName: \"Western Cape\",\n        width: 600,\n        height: 220\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionName) {\n        this.state.regionName = props.regionName;\n      }\n      if (props.width) {\n        this.state.width = props.width;\n      }\n      if (props.height) {\n        this.state.height = props.height;\n      }\n      setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.redrawChart = this.redrawChart.bind(this);\n    }\n  \n    componentDidMount() {\n      this.draw(this.getContainer(), this.state)\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      window.addEventListener(\"resize\", this.redrawChart, 200);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      window.removeEventListener(\"resize\", this.redrawChart);\n    }\n\n    redrawChart() {\n      var modifW = document.body.clientWidth, modifH = document.body.clientHeight/3;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), modifW, modifH);\n      this.setState({width: modifW, height: modifH});\n    };\n\n    handleRegionChange(event) {\n      this.setState({regionName: \"Eastern Cape\"})\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      return (\n          <div>\n            <div className={className(\"chart-title\")}>RACE FOR VOTES: </div>\n            <div ref=\"vizcontainer\" className={className(\"chart-body\")}></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      if (use_live_data) {\n        getVotesData({\n          numParties: props.numParties || 5,\n          regionName: props.regionName || \"Western Cape\"\n        }).then(function(data) {\n            self.drawGraph(container, props, data);\n        }).catch(error => console.error(error));\n      }\n      else {\n          self.drawGraph(container, props, js);\n      }\n    }\n\n    drawGraph(container, props, data) {\n        var chartData;\n        var results = data[\"data\"][\"allProvincialBallots\"].edges[0][\"node\"][\"topResult\"][\"edges\"];\n        chartData = results.map(function(node) {\n            var el = node[\"node\"];\n            return {\n                name: el[\"party\"][\"abbreviation\"],\n                value: el[\"validVotes\"] //+ parseInt(Math.random(seed++) * 0.1 * el[\"validVotes\"])\n            }\n        }).reverse();\n\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height);\n        chart.draw(chartData);\n    }\n}\n\nexport default BarChart;\n","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\"\n}\n\nexport default config;","import React, { Component } from 'react';\nimport config from '../../config';\nimport bootstrapStyles from 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './barchartEmbed.css'\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: 'root',\n            eventType: 'National',\n            regionName: 'Western Cape',\n            numParties: 5\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventType,\n            regionName,\n            numParties\n        } = this.state;\n        return (\n          <div>\n            <h3> Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event Type </label>\n                  <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"National\"\n                    onChange={e => this.setState({eventType: e.target.value})}/>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Location Name</label>\n                  <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"Western Cape\"\n                    onChange={e => this.setState({regionName: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script><script>showBarChart(document.getElementById('${elementId}','${eventType}','${regionName}',${numParties}));</script>`}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\n\nexport default BarChartEmbed;\n\n\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\nimport config from '../../config';\nimport polylabel from 'polylabel';\nimport styles from './map.css';\nimport events from '../../events';\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          regionType: \"national\",\n          regionName: \"SA\",\n          parentProvinceName: \"\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.regionName) {\n            this.state.regionName = props.regionName;\n        }\n    }\n\n\n\n    drawGraph(container, props) {\n        console.log(\"drawGraph\", \"new\", this);\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(regionName) {\n                console.log(\"getProvinceFileName\", regionName);\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[regionName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.regionName);\n                case \"municipality\":\n                    return self.state.regionName + \".topojson\";\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n        var tooltipDiv;\n        if (document.getElementsByClassName('tooltip')[0]) {\n          tooltipDiv = d3.select(\".tooltip\");\n        } else {\n          tooltipDiv = d3.select(\"body\").append(\"div\")\t\n            .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n            .style(\"opacity\", 0);\n        }\n\n        console.log(\"process.env\", process.env)\n\n        if (JSON.stringify(process.env).indexOf(\"docz\") != -1) {\n            fullRouteGeoJsonFile = \"/public/\" + fullRouteGeoJsonFile;\n        }\n\n        console.log(\"fullRouteGeoJsonFile\", fullRouteGeoJsonFile);\n\n        var w = 1400;\n        var h = 700;\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\").style(\"background-color\",\"#c9e8fd\")\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h)\n            .classed(\"svg-content\", true);\n\n        var fo = svg.append('foreignObject')\n            .attr('x', w - 100)\n            .attr('y', 10)\n            .attr('width', 100)\n            .attr('height', 30)\n            .attr('class', 'map-controls')\n        var gobackbutton = fo.append('xhtml:div')\n            .append('button')\n            .attr('class', 'go-back')\n            .html('go back')\n            .on(\"click\", function() {\n                var regionType = self.state.regionType;\n                if (regionType == \"province\") {\n                    self.setState({regionType: \"national\", regionName: \"SA\"});\n                } else if (regionType == \"municipality\") {\n                    function getProvinceFromMunicipality(municipalityName) {\n                        return self.state.parentProvinceName;\n                    }\n                    self.setState({\n                        regionType: \"province\", \n                        regionName: getProvinceFromMunicipality(self.regionName)\n                    });\n                }\n            });\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n\n        Promise.all([geoJsonLoader]).then(function(values){ \n\n            console.log(\"json load Finished\");\n            var geoJsonData = values[0];\n\n            var getJsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") != -1) {\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.regionName]);\n            }\n\n            getJsonDataFeatures = geoJsonData.features;\n\n            console.log(\"getJsonDataFeatures\", getJsonDataFeatures);\n\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with green\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(getJsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr('stroke', \"#FFF\")\n                .attr(\"fill\", \"green\")\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            if (self.state.regionType != \"municipality\") {\n                //show place label\n                svg.selectAll(\".place-label\")\n                    .data(getJsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        if (d.geometry.type == \"Polygon\") {\n                            var center = polylabel(d.geometry.coordinates);\n                            var projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            var center = polylabel(d.geometry.coordinates[0]);\n                            var projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function(d) { \n                        if (self.state.regionType == \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType == \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    })\n            }\n\n            if (self.state.regionType != \"municipality\") {\n                var labelElements = document.getElementsByClassName(\"place-label\");\n\n                var regions = {};\n                var overlapCnt = {};\n                for (var i = 0; i < getJsonDataFeatures.length; i ++) {\n                    regions[i] = labelElements[i].getBoundingClientRect();\n                }\n    \n                for (var i = 0; i < getJsonDataFeatures.length; i ++) {\n                    for (var j = 0; j < i; j ++) {\n                        var rect1 = regions[i];\n                        var rect2 = regions[j];\n                        var overlap = !(rect1.right < rect2.left || \n                            rect1.left > rect2.right || \n                            rect1.bottom < rect2.top || \n                            rect1.top > rect2.bottom);\n                        if (overlap) {\n                            overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n                        }\n                    }\n                    if (overlapCnt[i] > 2) {\n                        labelElements[i].setAttribute(\"opacity\", 0)\n                    } else if (overlapCnt[i] > 0){\n                        labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n                    } else {\n    \n                    }\n                }\n            }\n\n            // placeLabelText.append('tspan')\n            //     .attr(\"x\", 0)\n            //     .attr(\"dy\", '0em')\n            //     .text(function(d) { \n            //         if (self.state.regionType == \"national\") {\n            //             return d.properties.SPROVINCE;\n            //         } else if (self.state.regionType == \"province\") {\n            //             return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n            //         } else {//municipality\n            //             return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n            //         }\n            //     });\n            // placeLabelText.append('tspan')\n            //     .attr(\"x\", 0)\n            //     .attr(\"dy\", '1em')\n            //     .text(function(d) { \n            //         if (d.properties.SPROVINCE) \n            //             return \"\";\n            //         return \"[\" + d.properties.smunicipal.split(\"-\")[1].split(\"[\")[1]; \n            //     });\n            \n\t\t\t\t\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(getJsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on('mouseover', function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr('stroke-width', 3)\n                        .style('fill-opacity', 0.8);\n                })\n                .on(\"mousemove\", function(d) {\t\n                    if (self.state.regionType == \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n                    function regionName() {\n                        if (self.state.regionType == \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType == \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    }\n                    tooltipDiv.html(regionName())\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on('mouseout', function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr('stroke-width', 1)\n                        .style('fill-opacity', 1);\n                    \n                    if (self.state.regionType == \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    console.log(\"click event\", i, d.properties);\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    if (regionType == \"national\") {\n                        var newState = {\n                            regionType: \"province\",\n                            regionName: d.properties.SPROVINCE\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, newState);\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    } else if (regionType == \"province\") {\n                        function getMunicipalityName(properties) {\n                            return properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        var newState = {\n                            regionType: \"municipality\", \n                            regionName: getMunicipalityName(d.properties),\n                            parentProvinceName: self.state.regionName\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, newState);\n                        document.dispatchEvent(event);\n\n                        self.setState(newState);\n                    } else {\n                        // function getMunicipalityRegionName(properties) {\n                        //     return properties.SMUNICIPAL.split(\"-\")[0].replace(/\\s/g, \"\");\n                        // }\n                        // var newState = {\n                        //     regionType: \"municipality-region\", \n                        //     regionName: getMunicipalityRegionName(d.properties),\n                        // }\n                        // var event = new CustomEvent(events.REGION_CHANGE, newState);\n                        // document.dispatchEvent(event);\n                    }\n                })\n            console.log(\"svg drawing finished\");\n        })\n\n        var redrawChart = function() {\n\n        };\n\n        window.addEventListener(\"resize\", redrawChart, 200);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n        return (\n            <div>\n                <div>{this.state.regionName}</div>\n                <div ref=\"vizcontainer\" className=\"map\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport bootstrapStyles from 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './mapEmbed.css';\nimport config from '../../config';\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: 'root',\n            eventType: 'National',\n            locationName: 'Western Cape',\n            numParties: 5\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId\n        } = this.state;\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script><script>showMap(document.getElementById('${elementId}'));</script>`}</span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default MapEmbed;\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed\n} from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BarChart width=\"600\" height=\"220\" regionName=\"Western Cape\" numParties={3}/>\n        <div className=\"barchartEmbed\">\n          <BarChartEmbed />\n        </div>\n        <Map />\n        <div className=\"mapEmbed\">\n          <MapEmbed />\n        </div>\n        <div id=\"sales-data\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3'\nimport './Box.css';\n\nclass Box extends Component {\n    draw() {\n        d3.select(this.refs.box)\n            .append(\"rect\")\n            .attr(\"height\", this.props.height)\n            .attr(\"width\", this.props.width)\n            .classed(this.props.className, true)\n            .classed(\"box\", true)\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n      \n    render () {\n        return (\n          <svg width={this.props.width} height={this.props.height}>\n            <g ref=\"box\"></g>\n          </svg>\n        )\n    }\n}\n\nexport default Box;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}