{"version":3,"sources":["config/index.js","utils/index.js","components/BarChart/d3barchart.js","events/index.js","api/config.js","api/race-for-seats.js","api/race-for-votes.js","api/turnout.js","api/spoilt.js","api/prog-votescount.js","api/index.js","components/BarChart/barchart.js","components/RaceForSeatBarchart/barchart.js","components/SpoiltBarchart/barchart.js","components/Map/map.js","components/TurnoutMap/map.js","components/TurnoutBarchart/barchart.js","components/BarchartWithNavMap/barchartMap.js","components/ProgVotesCountPiechart/d3piechart.js","components/ProgVotesCountPiechart/piechart.js","components/RaceForSeatDonut/piechart.js","components/VoteCompBarchart/barchart.js","components/SeatCompBarchart/barchart.js","components/SeatHorseShoeChart/d3horseshoe.js","components/SeatHorseShoeChart/horseshoe.js","components/VotePredictionLineChart/d3voteprediction.js","components/VotePredictionLineChart/voteprediction.js","components/SplitNatProv/d3groupbarchart.js","components/SplitNatProv/barchart.js","components/NavBar/navbar.js","components/QuickResultsWidget/quickResultsWidget.js","components/TVVoteCompBarchart/d3groupbarchart.js","components/TVSeatCompBarchart/barchart.js","components/TVVoteSwingBarchart/d3deltabarchart.js","components/TVSeatSwingBarchart/barchart.js","components/TVVoteCompBarchart/barchart.js","components/TVVoteSwingBarchart/barchart.js","App.js","serviceWorker.js","index.js"],"names":["config","DOMAIN","CSS_PREFIX","calcPercent","a","b","toFixed","getYear","desc","exec","parseVotesData","data","props","firstEdge","regionType","edges","console","error","nodeData","sort","node","percOfVotes","slice","numParties","map","el","name","iecId","validVotes","partyInfo","parseVotesComparisonData","eventDescriptions","electionType","results","edge","partyResults","result","filter","partyIecId","partyAbbr","abbreviation","indexOf","reverse","new_results","i","length","available","j","push","Object","objectSpread","parseVotesComparisonDataMultipleParties","partyAbbrs","partyIdx","newProps","partyIecIds","parseProgressVotesCount","percent","totalCount","count","getTopPartyNameFromNode","parseSeatsData","seats","parseSeatsComparisonData","parseSeatsComparisonDataMultipleParties","parseSpoiltVotesData","getRegionName","state","beautifiedMuniName","muniName","split","provinceName","getNationalProvincialStr2","eventDescription","toLocaleLowerCase","getSeatsCount","Eastern Cape","Free State","Gauteng","KwaZulu-Natal","Limpopo","Mpumalanga","North West","Northern Cape","Western Cape","getNationOrProvinceName","getNationOrProvinceName2","createTooltip","className","tooltipClassName","document","getElementsByClassName","d3","concat","append","attr","style","fixMapLabelIntersect","labelElements","regions","overlapCnt","getBoundingClientRect","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","triggerCustomEvent","eventName","eventParam","event","CustomEvent","detail","dispatchEvent","formatPartyName","toLowerCase","replace","l","toUpperCase","getSubRegionName","properties","SPROVINCE","smunicipal","getMunicipalityiecId","getMunicipalityCode","code","VDNumber","PKLVDNUMBE","getRegionFileName","muniCode","handleRegionChange","newState","JSON","parse","stringify","componentID","this","setState","fetchDataFromOBJ","keys","forEach","key","formatClassNameFromString","str","createSvg","container","width","height","selectAll","remove","classed","createErrorText","xOffset","yOffset","undefined","Chart","options","chartType","yAxisLabel","yValue","d","yValueFormat","value","offset","predefColors","svg","showLegend","tooltipDiv","x","rangeRound","y","text","barSvg","barTextSvg","errorText","draw","chartData","colorsData","partyColorByName","partyAbbrByName","getFillColorFromPartyName","partyName","getFillColor","noXaxisByParty","colour","domain","minMaxY","dynamicYAxisFromValues","maxValue","parseFloat","customizeDynamicMaxValue","select","transition","duration","call","ticks","tickFormat","bars","exit","enter","bandwidth","on","html","getTooltipText","pageX","pageY","Number","barTexts","parties","_ref","party","legends","xydata","parseInt","getLegendXY","destroy","events","client","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","getSeatsDataForComparison","query","gql","_templateObject","_templateObject2","getSeatsData","_templateObject3","_templateObject4","getVotesDataForComparison","race_for_votes_templateObject3","race_for_votes_templateObject4","_templateObject5","_templateObject6","getVotesDataM","_templateObject11","_templateObject12","_templateObject13","_templateObject14","getTurnoutDataForOneEvent","turnout_templateObject4","turnout_templateObject5","turnout_templateObject6","turnout_templateObject7","getSpoiltData","spoilt_templateObject","spoilt_templateObject2","spoilt_templateObject3","spoilt_templateObject4","getProgressVotesCount","prog_votescount_templateObject","prog_votescount_templateObject2","prog_votescount_templateObject3","prog_votescount_templateObject4","getPartyColors","api_templateObject2","getProvincesData","provincesData","munis","localeCompare","partyColorsData","originName","styles","cn","chartOptions","maxVal","Math","min","BarChart","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","comp","stylesheetFor","chart","refreshIntervalID","exportAsPNG","bind","assertThisInitialized","exportAsPNGUri","handlePreviewEvent","self","getContainer","setInterval","addEventListener","removeEventListener","clearInterval","svgToPng","saveSvgAsPng","refs","vizcontainer","childNodes","Promise","resolve","reject","svgAsPngUri","log","_this$state","react_default","createElement","ref","dataLoaders","partyColorsLoader","all","then","values","votesData","drawGraph","catch","locationResult","fetchLocationTrackFromVDdata","needUpdate","Component","regionColor","Map","disableNavigation","prevProps","prevState","rect","rendercanvas","window","canvg","ignoreDimensions","scaleWidth","scaleHeight","toDataURL","e","canvas","filename","lnk","download","href","createEvent","initMouseEvent","fireEvent","loading","react_loading_default","type","color","_this2","fullRouteGeoJsonFile","getLoadingSpinner","h","geoJsonLoader","_templateObject15","_templateObject16","_templateObject17","getMainParties","geoJsonData","locationToMainParty","parseMainPartyData","jsonDataFeatures","getMainPartyName","objects","topojson","features","projection","fitSize","path","availableCnt","center","projectionCenter","geometry","polylabel","coordinates","undefinedText","mainPartyName","subRegionName","tooltipText","appendSpan","foDiv","regionName","addSub","appendLink","setRegionType","currentRegionName","setTimeout","alert","turnout_templateObject","turnout_templateObject2","turnout_templateObject3","getTurnoutData","locationToTurnout","percVoterTurnout","parseTurnoutData","getFillColorFromTurnout","turnout","getTurnout","it","turnoutData","eventType","turnout_templateObject8","turnout_templateObject9","turnout_templateObject10","turnout_templateObject11","getTurnoutDataForAllEvents","edge1","edge2","parseTurnoutDataForAllEvents","margin","variable","category","floatFormat","random","radius","pie","arc","outerRadius","innerRadius","cornerRadius","padAngle","totalSvg","transformX","labelSvg","toolTip","selection","tip","toolTipHTML","arcTween","_current","t","colorsDataP","updatePath","data0","data1","each","m","k","findPreceding","startAngle","endAngle","n","findFollowing","findNeighborArc","attrTween","PieChart","progressVotesData","Completed","Not Completed","viewBox","seatsData","mainSvg","originChartData","largest","rest","totalSeats","rows","poslist","J","R","angle","Totals","PI","asin","sin","cos","onMouseMove","onMouseOut","Counter","partySvg","pythonConvertedCode","HorseShoeChart","has_drawn","showPoints","pointRadius","showPointLabels","pointLabelOffset","showCurrentLine","minMaxData","getPartyColour","partyColours","partyColourByName","PartyColours","minX","maxX","range","radiusScale","axisContainer","lineContainer","legendContainer","eventCaptureContainer","valueline","cleaned_name","idx","formatDate","hr","getHours","getMinutes","getDate","getMonth","getFullYear","VotePredictionLineChart","_isMounted","currentTimeText","Date","race_for_votes_templateObject","race_for_votes_templateObject2","getVotesPredictionData","predictionData","parseCSIRMinMax","lineData","percVds","prediction","predictionEdge","predictionNodeData","predictedPercent","partyIndex","actualPercent","oneLine","parseVotesPredictionData","_parseCSIRTurnoutTime","timestamp","parseCSIRTurnoutTimestamp","projectedTurnout","lastTimestamp","lastTimeStampText","XaxisOffset","groupChartData","topLabel","item","groupSvgs","groupSvg","_loop","subX","_ref2","usedValue","numPartiesSplitNatProv","eventDescriptionsSplitNatProv","_templateObject7","_templateObject8","_templateObject9","_templateObject10","getVotesDataForAllEvents","year","shortenedNatProv","getShortenedEventDescription","longEventDescription","edge1Year","edge2Year","parseVotesDataForAllEvents","cssPrefix","metrosData","CustomLink","onClick","hasSubMenu","toggleSubMenu","activateMe","newLocation","to","selectedMenuLabel","label","children","React","NavBar","nationalEventDescription","provincialEventDescription","activeLinkId","handleNavBarSelection","getElementById","id","rel","head","appendChild","navbar","target","classList","lastClass","passInfo","enableMap","enableTurnoutProgressSpoilt","selectionData","join","preventDefault","content","icon","metro","province","lib_default","LinkComponent","QuickResultsWidget","enableBarChart","national","provincial","currentTurnout","currentCountingProg","currentSpoiltVotes","fetchCurrentResultData","handleSeatsElectedsEvent","spoiltData","progVotesData","parsedSpoiltData","parsedTurnoutData","parseTurnoutDataForOneEvent","parsedProgVotesData","parsedVotesData","voteItem","parsedSeatsData","seatItem","curCountingProg","zipfileName","imageLoadPromises","toConsumableArray","barchartInstances","instance","mapInstance","barchartInstance","zip","JSZip","imgs","folder","element","file","base64","generateAsync","saveAs","triggerState","_this$state2","_this$state3","getRegionName2","getNationalProvincialStr4","getNationalProvincialStr3","getRegionName4","_this$state4","mapState","Map_map","assign","TurnoutMap_map","_this3","_this$state5","BarChart_barchart","SeatHorseShoeChart_horseshoe","TurnoutBarchart_barchart","ProgVotesCountPiechart_piechart","VotePredictionLineChart_voteprediction","Array","VoteCompBarchart_barchart","SeatCompBarchart_barchart","SplitNatProv_barchart","placeholder","onShowVDResult","vdInput","components","renderQuickResultsTitle","renderTurnoutProgressSpoilt","renderMyVDEnterForm","renderBarchart","renderMap","NavBar_navbar","YaxisOffset","barAxisTextSvg","barAxisTexts","newGroupChartData","delta","deltaData","abs","barTextYDelta","axisThick","App","QuickResultsWidget_quickResultsWidget","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05a2969c.chunk.js","sourcesContent":["var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\",\n    // \"DOMAIN\": \"http://127.0.0.1:8080\",\n    \"CSS_PREFIX\": \"ELVIZ_\"\n}\n\nexport default config;","import * as d3 from \"d3\";\nimport config from \"../config\";\n\nfunction calcPercent(a, b) {\n  if (b == 0) {\n    return 0;\n  } else {\n    return (a/b*100).toFixed(2);\n  }\n}\n\nexport function getShortenedEventDescription(event) {\n  var year = /(19|20)\\d{2}/g.exec(event[\"description\"])[0];\n  var shortenedNatProv = (event[\"eventType\"][\"description\"] == \"National Election\"? \"Nat\": \"Prov\");\n  return `${year} ${shortenedNatProv}`;\n}\n\nexport function getYear(desc) {\n  return /(19|20)\\d{2}/g.exec(desc)[0];\n}\n\nexport function parseVotesDataForAllEvents(data, props) {\n    var results, edges;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      edges = data[\"data\"][\"allBallots\"].edges;\n    } else if (regionType == \"province\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n    } else if (regionType == \"municipality\") {\n      edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n    } else { //\"municipality-vd\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n    }\n\n    console.log(\"props\", props)\n    return edges.map(edge => {\n      var nodeData = edge[\"node\"];\n\n      var eventDescription = getShortenedEventDescription(nodeData[\"event\"]); //nodeData[\"event\"][\"description\"];\n      var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n      results = partyResults[\"edges\"];\n      results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n      results = results.slice(0, props.numPartiesSplitNatProv);\n\n      return {\n        longEventDescription: nodeData[\"event\"][\"description\"],\n        eventDescription,\n        data: results.map(function(node) {\n          var el = node[\"node\"];\n          return {\n              name: el[\"party\"][\"abbreviation\"],\n              iecId: el[\"party\"][\"iecId\"],\n              validVotes: el[\"validVotes\"].toFixed(2),\n              percOfVotes: el[\"percOfVotes\"].toFixed(2),\n              partyInfo: el[\"party\"]\n          }\n        })\n      }\n    }).filter(edge => props.eventDescriptionsSplitNatProv.indexOf(edge.longEventDescription) != -1)\n    .sort(function(edge1, edge2) {\n      var edge1Year = parseInt(/(19|20)\\d{2}/g.exec(edge1.eventDescription)[0]);\n      var edge2Year = parseInt(/(19|20)\\d{2}/g.exec(edge2.eventDescription)[0]);\n      if (edge1Year == edge2Year) {\n        if (edge1.eventDescription > edge2.eventDescription) {\n          return 1;\n        }\n        return -1;\n      }\n      return edge1Year - edge2Year;\n    })\n}\n \nexport function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n    results = results.sort(function(a, b) {return b.node.percOfVotes - a.node.percOfVotes});\n\n    results = results.slice(0, props.numParties);\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            iecId: el[\"party\"][\"iecId\"],\n            validVotes: el[\"validVotes\"].toFixed(2),\n            percOfVotes: el[\"percOfVotes\"].toFixed(2),\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function fetchLocationTrackFromVDdata(data) {\n  var firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  var nodeData = firstEdge[\"node\"];\n  var locationResult = nodeData[\"location\"];\n  var newState = {\n    regionType: \"municipality-vd\",\n    iecId: locationResult[\"iecId\"],\n    muniCode: locationResult[\"ward\"][\"municipality\"][\"code\"],\n    provinceName: locationResult[\"ward\"][\"municipality\"][\"province\"][\"name\"],\n  };     \n  return newState;      \n}\n\nexport function parseVotesComparisonData(data, props) {\n  var results, edges;\n\n  var regionType = props.regionType;\n  var eventDescriptions = props.eventDescriptions[\"national\"]\n  if (props.electionType === \"provincial\")\n    eventDescriptions = props.eventDescriptions[\"provincial\"]\n\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges= data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else { //\"municipality-vd\"\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n\n  var partyfilter_edges = edges.map(edge => {\n    var nodeData = edge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"]\n      .filter(a => props.partyIecId\n        ? (a.node[\"party\"][\"iecId\"] == props.partyIecId) \n        : (a.node[\"party\"][\"abbreviation\"] == props.partyAbbr));\n    var result = results[0];\n    if (result) {\n      var el = result[\"node\"];\n      return {\n          name: nodeData[\"event\"][\"description\"],\n          percOfVotes: el[\"percOfVotes\"].toFixed(2),\n          partyInfo: el[\"party\"]\n      }\n    }\n    return {\n      name: nodeData[\"event\"][\"description\"],\n      percOfVotes: 0,\n      partyInfo: {\n        name: props.partyAbbr,\n        abbreviation: props.partyAbbr,\n      }\n    }\n  });\n  var results = partyfilter_edges.filter(edge => eventDescriptions.indexOf(edge.name) != -1).reverse();\n\n  var new_results = [];\n  for(var i = 0; i < eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == eventDescriptions[i]) {\n        var available = true;\n        new_results.push({\n          ...results[j],\n          name: getYear(results[j].name)\n        });\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: getYear(eventDescriptions[i]),\n        percOfVotes: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n  new_results.sort(function(a, b) {\n    return a.name - b.name;\n  })\n  return new_results;\n}\n\nexport function parseVotesComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map((partyAbbr, partyIdx) => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    newProps.partyIecId = props.partyIecIds[partyIdx];\n    return {\n      partyAbbr,\n      data: parseVotesComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseProgressVotesCount(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"progress votes count data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Completed\",\n      percent: calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdWithResultsCaptured\"]\n    }, {\n      name: \"Not Completed\",\n      percent: 100 - calcPercent(nodeData[\"vdWithResultsCaptured\"], nodeData[\"vdCount\"]),\n      totalCount: nodeData[\"vdCount\"],\n      count: nodeData[\"vdCount\"] - nodeData[\"vdWithResultsCaptured\"]\n    }\n  ]\n}\n\n// export function parseMainPartyData(data, props) {\n//     if (!data)  return null;\n//     var locationToMainParty = {};\n//     var edges;\n//     var regionType = props.regionType;\n//     var sort_results = function(party_results) {\n//         party_results[\"edges\"] = party_results[\"edges\"].sort(function(a, b) {\n//             return b.node.percOfVotes - a.node.percOfVotes;\n//         })\n//         return party_results;\n//     }\n//     if (regionType === \"national\") {\n//         edges = data[\"data\"][\"allProvincialBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var provinceName = node[\"location\"][\"name\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[provinceName] = partyName;\n//         })\n//     } else if (regionType === \"province\") {\n//         edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var muniCode = node[\"location\"][\"code\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[muniCode] = partyName;\n//         })\n//     } else {// \"municipality\"\n//         edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n//         edges.forEach(function(edge) {\n//             var node = edge.node;\n//             var iecId = node[\"location\"][\"iecId\"];\n//             var partyResults = sort_results(node[\"partyResults\"]);\n\n//             var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n//             locationToMainParty[iecId] = partyName;\n//         })\n//     }\n//     return locationToMainParty;\n// }\n\nfunction getTopPartyNameFromNode(node) {\n  if (node && node[\"topParty\"] && node[\"topParty\"][\"party\"] && node[\"topParty\"][\"party\"][\"name\"])\n      return node[\"topParty\"][\"party\"][\"name\"];\n  return \"\";\n}\n\nexport function parseMainPartyData(data, props) {\n  if (!data)  return null;\n  var locationToMainParty = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"topPartiesByProvince\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          locationToMainParty[provinceName] = getTopPartyNameFromNode(node);\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"topPartiesByMunicipality\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          locationToMainParty[muniCode] = getTopPartyNameFromNode(node);\n      })\n  } else {// \"municipality\"\n      edges = data[\"data\"][\"topPartiesByVotingDistrict\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          locationToMainParty[iecId] = getTopPartyNameFromNode(node);\n      })\n  }\n  return locationToMainParty;\n}\n\nexport function parseSeatsData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"abbreviation\"],\n      iecId: node[\"party\"][\"iecId\"],\n      partyInfo: node[\"party\"],\n    }\n  })\n  \n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return results.slice(0, props.numParties);\n}\n\nexport function parseVotesPredictionData(data, props) {\n  // TODO actually implement a function that removes hypens and .s\n  var edges = data[\"data\"][\"CSIRPrediction\"][\"results\"].edges;\n  var partyIecIds = [];\n  var lineData = [];\n  edges.forEach(function(edge) {\n    var nodeData = edge.node;\n    var percVds = nodeData.percVds;\n    var prediction = nodeData.prediction;\n    var predictionEdges = prediction.edges;\n    predictionEdges.forEach(function(predictionEdge) {\n      console.log(\"predictionEdge\", predictionEdge);\n      var predictionNodeData = predictionEdge.node;\n      var partyInfo = predictionNodeData.party;\n      if (!partyInfo) {\n        return;\n      }\n      var predictedPercent = predictionNodeData.predictedPercent;\n      var actualPercent = predictionNodeData.actualPercent;\n\n      var partyIndex = partyIecIds.indexOf(partyInfo.iecId);\n      if (partyIndex == -1) {\n        partyIecIds.push(partyInfo.iecId);\n        lineData.push({\n          name: partyInfo.name,\n          iecId: partyInfo.iecId,\n          abbreviation: partyInfo.abbreviation,\n          cleaned_name: partyInfo.abbreviation.replace(/[^a-zA-Z0-9]+/g, ''),\n          data: []\n        });\n        partyIndex = partyIecIds.length - 1;\n      }\n      lineData[partyIndex].data.push({\n        'x': percVds,\n        'y': predictedPercent\n      })\n    })\n  })\n  lineData.forEach(oneLine => {\n    oneLine.data.sort(function(a, b) {\n      return a.x - b.x;\n    })\n  })\n  console.log(\"parsedLineData\", lineData);\n  // var lineData = [{\n  //     name : \"AFRICAN NATIONAL CONGRESS\",\n  //     cleaned_name : \"anc\",\n  //     data : [\n  //       {'x': 3, 'y': 51.6},\n  //       {'x': 6, 'y': 59.3},\n  //       {'x': 12, 'y': 55.4},\n  //       {'x': 20, 'y': 56},\n  //       {'x': 27, 'y': 59.5},\n  //       {'x': 33, 'y': 59.8},\n  //       {'x': 39, 'y': 61.2},\n  //       {'x': 45, 'y': 61.8},\n  //       {'x': 51, 'y': 62.7},\n  //       {'x': 57, 'y': 63.1},\n  //       {'x': 63, 'y': 63.6},\n  //       {'x': 69, 'y': 62.7},\n  //       {'x': 69, 'y': 62.7},\n  //       {'x': 75, 'y': 62.3},\n  //       {'x': 81, 'y': 62.9},\n  //       {'x': 87, 'y': 63},\n  //       {'x': 93, 'y': 62.8},\n  //       {'x': 100, 'y': 62.8},\n  //     ]\n  //   },\n  //   {\n  //     name : \"DEMOCRATIC ALLIANCE\",\n  //     cleaned_name: \"da\",\n  //     data : [\n  //       {'x': 3, 'y': 31.6},\n  //       {'x': 6, 'y': 39.3},\n  //       {'x': 12, 'y': 35.4},\n  //       {'x': 20, 'y': 36},\n  //       {'x': 27, 'y': 39.6},\n  //       {'x': 33, 'y': 39.8},\n  //       {'x': 39, 'y': 31.2},\n  //       {'x': 45, 'y': 31.4},\n  //       {'x': 51, 'y': 22.7},\n  //       {'x': 57, 'y': 33.1},\n  //       {'x': 63, 'y': 23.6},\n  //       {'x': 69, 'y': 32.7},\n  //       {'x': 69, 'y': 32.7},\n  //       {'x': 75, 'y': 22.3},\n  //       {'x': 81, 'y': 32.9},\n  //       {'x': 87, 'y': 33},\n  //       {'x': 93, 'y': 22.8},\n  //       {'x': 100, 'y': 22.8},\n  //     ]\n  //   }\n  // ];\n\n  return lineData;\n}\n\nexport function parseCSIRTurnoutTimestamp(data) {\n  var predictionData = data[\"data\"][\"CSIRPrediction\"];\n  var {\n    turnout,\n    timestamp\n  } = predictionData;\n  return {\n    turnout: turnout.toFixed(2),\n    timestamp\n  }\n}\n\nexport function parseCSIRMinMax(data) {\n  var predictionData = data[\"data\"][\"CSIRPrediction\"];\n  var {\n    minX,\n    maxX\n  } = predictionData;\n  return {\n    minX,\n    maxX\n  }\n}\n\nexport function parseSeatsComparisonData(data, props) {\n  if (!data)  return null;\n  var edges = data[\"data\"][\"allSeatCalculations\"].edges;\n  var regionType = props.regionType;\n  var eventDescriptions = props.eventDescriptions[\"national\"]\n  if (props.electionType === \"provincial\")\n    eventDescriptions = props.eventDescriptions[\"provincial\"]\n\n  var results = edges.map(edge => {\n    var node = edge.node;\n    var seats = 0;\n    if (regionType === \"national\") {\n      seats = node[\"nationalPr\"] + node[\"regional\"];\n    } else {//\"province\"\n      seats = node[\"regional\"];\n    }\n    return {\n      seats,\n      name: node[\"party\"][\"event\"][\"description\"],\n      partyInfo: node[\"party\"]\n    }\n  }).filter(result => eventDescriptions.indexOf(result.name) != -1)\n  .filter(result => \n    props.partyIecId\n    ? (result.partyInfo[\"iecId\"] == props.partyIecId)\n    : (result.partyInfo[\"abbreviation\"] == props.partyAbbr)\n  )\n\n  var new_results = [];\n  for(var i = 0; i < eventDescriptions.length; i ++) {\n    var available = false;\n    for (var j = 0; j < results.length; j ++) {\n      if (results[j].name == eventDescriptions[i]) {\n        var available = true;\n        new_results.push({\n          ...results[j],\n          name: getYear(results[j].name)\n        });\n        break;\n      }\n    }\n    if (!available) {\n      new_results.push({\n        name: getYear(props.eventDescriptions[i]),\n        seats: 0,\n        partyInfo: {\n          name: props.partyAbbr,\n          abbreviation: props.partyAbbr,\n        } \n      })\n    }\n  }\n      // name: nodeData[\"event\"][\"description\"],\n      // percOfVotes: 0,\n      // partyInfo: {\n      //   name: props.partyAbbr,\n      //   abbreviation: props.partyAbbr,\n      // }\n  // results.sort(function(a,b) {\n  //   return b[\"seats\"] - a[\"seats\"];\n  // })\n  return new_results;\n}\n\nexport function parseSeatsComparisonDataMultipleParties(data, props) {\n  return props.partyAbbrs.map((partyAbbr, partyIdx) => {\n    var newProps = {...props};\n    newProps.partyAbbr = partyAbbr;\n    newProps.partyIecId = props.partyIecIds[partyIdx];\n    return {\n      partyAbbr,\n      data: parseSeatsComparisonData(data, newProps)\n    }\n  })\n}\n\nexport function parseTurnoutData(data, props) {\n  if (!data)  return null;\n  var locationToTurnout = {};\n  var edges;\n  var regionType = props.regionType;\n  if (regionType === \"national\") {\n      edges = data[\"data\"][\"allProvincialBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var provinceName = node[\"location\"][\"name\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[provinceName] = percVoterTurnout;\n      })\n  } else if (regionType === \"province\") {\n      edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var muniCode = node[\"location\"][\"code\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[muniCode] = percVoterTurnout;\n      })\n  } else {// \"municipality\" or \"municipality-vd\"\n      edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n      edges.forEach(function(edge) {\n          var node = edge.node;\n          var iecId = node[\"location\"][\"iecId\"];\n          var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n          locationToTurnout[iecId] = percVoterTurnout;\n      })\n  }\n  return locationToTurnout;\n}\n\nexport function parseTurnoutDataForAllEvents(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var eventType = node[\"event\"][\"eventType\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n    return {\n      name: getYear(event),\n      eventType: eventType,\n      percVoterTurnout\n    }\n  }).filter(edge => edge.eventType.toLowerCase().indexOf(props.eventType) != -1)\n  .sort(function(edge1, edge2) {\n    var edge1Year = parseInt(/(19|20)\\d{2}/g.exec(edge1.name)[0]);\n    var edge2Year = parseInt(/(19|20)\\d{2}/g.exec(edge2.name)[0]);\n    return edge1Year - edge2Year;\n  })\n}\n\nexport function parseTurnoutDataForOneEvent(data, props) {\n  if (!data)  return null;\n  var edges;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    edges = data[\"data\"][\"allBallots\"].edges;\n  } else if (regionType == \"province\") {\n    edges = data[\"data\"][\"allProvincialBallots\"].edges;\n  } else if (regionType == \"municipality\") {\n    edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n  } else if (regionType == \"municipality-vd\") {\n    edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n  }\n  \n  return edges.map(function(edge) {\n    var node = edge.node;\n    var event = node[\"event\"][\"description\"];\n    var percVoterTurnout = node[\"percVoterTurnout\"].toFixed(2); \n    return {\n      name: getYear(event),\n      percVoterTurnout\n    }\n  })\n}\n\nexport function parseSpoiltVotesData(data, props) {\n  var firstEdge;\n  var regionType = props.regionType;\n  if (regionType == \"national\") {\n    firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n  } else if (regionType == \"province\") {\n    firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n  } else if (regionType == \"municipality\") {\n    firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n  } else { //\"municipality-vd\"\n    firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n  }\n  if (!firstEdge){\n    console.error(\"spoilt data is empty!!\");\n    return null;\n  }\n\n  var nodeData = firstEdge[\"node\"];\n\n  return [\n    {\n      name: \"Valid\",\n      percent: calcPercent(nodeData[\"totalValidVotes\"], nodeData[\"totalVotesCast\"])\n    }, {\n      name: \"Spoilt\",\n      percent: calcPercent(nodeData[\"spoiltVotes\"], nodeData[\"totalVotesCast\"])\n    }\n  ]\n}\n\nexport function getRegionName(state) {\n  function beautifiedMuniName(muniName) {\n    if (muniName.indexOf(\" - \") != -1) {\n        muniName = muniName.split(\" - \")[1];\n    }\n    if (muniName.indexOf(\"[\") != -1) {\n        muniName = muniName.split(\"[\")[0];\n    }\n    return muniName;\n  }\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  if (state.regionType == \"province\") {\n    return state.provinceName;\n  }\n  if (state.regionType == \"municipality\") {\n    return beautifiedMuniName(state.muniName);\n  }\n  if (state.regionType == \"municipality-vd\") {\n    return beautifiedMuniName(state.muniName) + \"-\" + state.iecId;\n  }\n}\n\nexport function getRegionName2(state) {\n  if (state.regionType == \"national\") {\n    var event = state.eventDescription.toLocaleLowerCase()\n\n    if (event.indexOf(\"national election\") >= 0) {\n      return \"National Assembly\"\n    }\n    else if (event.indexOf(\"provincial election\") >= 0) {\n      return \"Results for Provincial Legislatures\"\n    }\n    else\n      return \"\"\n  }\n  else if (state.regionType == \"province\") {\n    return getRegionName(state) + \" Legislature\";\n  }\n  return getRegionName(state);\n}\n\nexport function getRegionName3(state) {\n  if (state.regionType == \"national\")\n    return \"National\";\n  if (state.regionType == \"province\") {\n    return getRegionName(state) + \" Legislature\";\n  }\n  return getRegionName(state);\n}\n\nexport function getRegionName4(state) {\n  if (state.regionType == \"national\") {\n    return \"National Assembly\";\n  } else { // province\n    return state.provinceName + \" Legislature\";\n  }\n}\n\nexport function getNationalProvincialStr(state) {\n  var event = state.eventDescription.toLocaleLowerCase()\n  var nationalProvincialStr = \"\"; \n  if (event.indexOf(\"national election\") >= 0) {\n      nationalProvincialStr = \"National Assembly\";\n  } else {\n      nationalProvincialStr = \"Provincial Legislature\";\n  }\n  return nationalProvincialStr;\n}\n\nexport function getNationalProvincialStr2(state) {\n  var event = state.eventDescription.toLocaleLowerCase()\n  var nationalProvincialStr = \"\"; \n  if (event.indexOf(\"national election\") >= 0) {\n      nationalProvincialStr = \"National Assembly\";\n  } else {\n      nationalProvincialStr = state.provinceName + \" Legislature\";\n  }\n  return nationalProvincialStr;\n}\n\nexport function getNationalProvincialStr3(state) {\n  var event = state.eventDescription.toLocaleLowerCase()\n  var nationalProvincialStr = \"\"; \n  if (event.indexOf(\"national election\") >= 0) {\n      nationalProvincialStr = \"\";\n  } else {\n      nationalProvincialStr = \": \" + state.provinceName + \" Legislature\";\n  }\n  return nationalProvincialStr;\n}\n\nexport function getNationalProvincialStr4(state) {\n  var event = state.eventDescription.toLocaleLowerCase()\n  var nationalProvincialStr = \"\"; \n  if (event.indexOf(\"national election\") >= 0) {\n      nationalProvincialStr = \"National\";\n  } else {\n      nationalProvincialStr = state.provinceName + \" Legislature\";\n  }\n  return nationalProvincialStr;\n}\n\nexport function getSeatsCount(state) {\n  if (state.regionType == \"national\") {\n    return 400;\n  } else {\n    var seatsTable = {\n      \"Eastern Cape\": 63,\n      \"Free State\": 30,\n      \"Gauteng\": 73,\n      \"KwaZulu-Natal\": 80,\n      \"Limpopo\": 49,\n      \"Mpumalanga\": 30,\n      \"North West\": 33,\n      \"Northern Cape\": 30,\n      \"Western Cape\": 42,\n    }\n    return seatsTable[state.provinceName];\n  }\n  \n}\n\nexport function getNationOrProvinceName(state) {\n  if (state.regionType == \"national\") {\n    return \"South Africa\";\n  }\n  return state.provinceName;\n}\n\nexport function getNationOrProvinceName2(state) {\n  if (state.regionType == \"national\") {\n    return \"National Assembly\";\n  }\n  return state.provinceName;\n}\n\nexport function createTooltip(className) {\n  var tooltipClassName = className(config.CSS_PREFIX + \"tooltip\")\n  if (document.getElementsByClassName(tooltipClassName)[0]) {\n    return d3.select(`.${tooltipClassName}`);\n  } else {\n    return d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", tooltipClassName)\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n}\n\n\n\nexport function fixMapLabelIntersect() {\n  var labelElements = document.getElementsByClassName(\"place-label\");\n  var regions = {};\n  var overlapCnt = {};\n  var i;\n\n  for (i = 0; i < labelElements.length; i ++) {\n      regions[i] = labelElements[i].getBoundingClientRect();\n  }\n\n  for (i = 0; i < labelElements.length; i ++) {\n      for (var j = 0; j < i; j ++) {\n          var rect1 = regions[i];\n          var rect2 = regions[j];\n          var overlap = !(rect1.right < rect2.left || \n              rect1.left > rect2.right || \n              rect1.bottom < rect2.top || \n              rect1.top > rect2.bottom);\n          if (overlap) {\n              overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n          }\n      }\n      if (overlapCnt[i] > 2) {\n          labelElements[i].setAttribute(\"opacity\", 0)\n      } else if (overlapCnt[i] > 0){\n          labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n      } else {\n\n      }\n  }\n}\n\nexport function triggerCustomEvent(eventName, eventParam) {\n  var event = new CustomEvent(eventName, { detail: eventParam });\n  document.dispatchEvent(event);\n}\n\nexport function formatPartyName(name) {\n  return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n}\n\nexport function getSubRegionName(properties, state) {\n  if (state.regionType === \"national\") {\n      return properties.SPROVINCE;\n  } else if (state.regionType === \"province\") {\n      return properties.smunicipal && properties.smunicipal.split(\" - \")[1].split(\"[\")[0]; \n  } else {//municipality\n    return getMunicipalityiecId(properties);\n    // if (properties.Municipali) {\n    //   return properties.Municipali.split(\" - \")[1].split(\"[\")[0];\n    // }\n    // return properties.SMUNICIPAL && properties.SMUNICIPAL.split(\" - \")[1].split(\"[\")[0]; \n  }\n}\n\nexport function getMunicipalityCode(properties) {\n  return properties.code || (properties.smunicipal && properties.smunicipal.split(\" - \")[0].replace(/\\s/g, \"\"));\n}\n\nexport function getMunicipalityiecId(properties) {\n  return properties.VDNumber || properties.PKLVDNUMBE;\n}\n\nexport function getRegionFileName(state) {\n  var nationalMapFile = \"province_lo-res.geojson\";\n  function getProvinceFileName(provinceName) {\n      var provinceNameToFileMap = {\n          \"Limpopo\": \"lim_lo-res.geojson\",\n          \"Mpumalanga\": \"mp_lo-res.geojson\",\n          \"Gauteng\": \"gt_lo-res.geojson\",\n          \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n          \"North West\": \"nw_lo-res.geojson\",\n          \"Free State\": \"fs_lo-res.geojson\",\n          \"Eastern Cape\": \"ec_lo-res.geojson\",\n          \"Northern Cape\": \"nc_lo-res.geojson\",\n          \"Western Cape\": \"wc_lo-res.geojson\",\n      }\n      return provinceNameToFileMap[provinceName];\n  }\n  switch(state.regionType) {\n      case \"national\":\n          return nationalMapFile;\n      case \"province\":\n          return getProvinceFileName(state.provinceName);\n      case \"municipality\":\n          return state.muniCode + \".topojson\";//\".geojson\";\n      case \"municipality-vd\":\n          return \"vd-data/\" + state.muniCode + \"-\" + state.iecId + \".topojson\"; //\".geojson\";\n      default:\n          return null;\n  }\n}\n\nexport function loadScript(id, scriptURL, callback) {\n  if (document.getElementById(id))\n    return;\n  var script = document.createElement('script');\n  script.onload = function () {\n    if(callback) {\n      callback();\n    }\n  };\n  script.id = id;\n  script.src = scriptURL;\n\n  document.head.appendChild(script);\n}\n\nexport function loadCanvg() {\n  loadScript(\"canvgScript\", \"https://cdn.jsdelivr.net/npm/canvg/dist/browser/canvg.min.js\", function() {\n    console.log(\"canvgScript load finished\");\n  });\n}\n\nexport function loadJSZip() {\n  loadScript(\"jsZipScript\", \"https://cdnjs.cloudflare.com/ajax/libs/jszip/3.2.0/jszip.min.js\", function() {\n    console.log(\"loadJSZip load finished\");\n  });\n}\n\nexport function loadScriptsForEmbedMode() {\n  loadCanvg();\n  loadJSZip();\n}\n\n\nexport function handleRegionChange(event) {\n  var newState = JSON.parse(JSON.stringify(event.detail));\n  delete newState.componentID;\n  this.setState(newState)\n}\n\nexport function fetchDataFromOBJ(state, props) {\n  Object.keys(state).forEach(key => {\n    if (props[key]) {\n      state[key] = props[key];\n    }\n  })\n}\n\nexport function formatClassNameFromString(str) {\n  return \"formedClass_\" + str.replace(/[^a-zA-Z0-9]+/g, '');\n}\n\nexport function onPartyAbbrsChange(e) {\n    var options = e.target.options;\n    var values = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        values.push(options[i].value);\n      }\n    }\n    values = values.slice(0, 4);\n    this.setState({\n        partyAbbrs: values.map(value => value.split(\"\\x22\")[0]),\n        partyIecIds: values.map(value => value.split(\"\\x22\")[1]),\n    })\n}\n\nexport function nationalEventSelected(state) {\n  for (var i = 0; i < state.electionEvents.length; i ++) {\n    if (state.electionEvents[i].description == state.eventDescription) {\n      if (state.electionEvents[i].eventType.description.toLowerCase().indexOf(\"national\") != -1) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function createSvg(container, width, height) {\n  container.selectAll(\"svg\").remove();\n  var svg = container.append(\"svg\")\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", \"0 0 \" + (width) + \" \" + (height))\n      .classed(\"svg-content\", true);\n\n  return svg;\n}\n\nexport function createErrorText(container, xOffset, yOffset) {\n  if (xOffset === undefined) xOffset = 0;\n  if (yOffset === undefined) yOffset = 0;\n\n  var errorText = container.append(\"g\")\n    .attr(\"transform\", \"translate(\"+ xOffset + \",\" + yOffset + \")\")\n    .append(\"text\")\n    .attr(\"text-anchor\", \"middle\");\n\n  return errorText;\n}\n\nexport function PartyColours(partyColours) {\n  var partyColourByName = {};\n\n  if (partyColours && partyColours[\"data\"][\"allParties\"][\"edges\"]) {\n      partyColours[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n        partyColourByName[edge.node.name] = edge.node.colour;\n      })\n  }\n\n  // TODO should used cleaned name\n  function getFillColourFromPartyName(partyName, i) {\n    // console.log(partyColourByName[partyName])\n    // console.log(partyColourByName)\n    return partyColourByName[partyName];\n    //return partyColourByName[partyName.split(\"/\")[0]] || predefColours[i%predefColours.length];\n  }\n\n  return getFillColourFromPartyName;\n}\n\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, createErrorText} from \"../../utils\";\nimport { type } from \"os\";\nimport config from \"../../config\";\nimport {\n  formatPartyName\n} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n\n\n  if (!options) {\n    options = {};\n  } \n  if (!options.chartType) {\n    options.chartType = \"Race For Votes\";\n  }\n  if (!options.yAxisLabel) {\n    options.yAxisLabel = \"PERCENTAGE VOTES\";\n  }\n  if (!options.yValue) {\n    options.yValue = function(d) {\n      return d.percOfVotes;\n    }\n  }\n  if (!options.yValueFormat) {\n    options.yValueFormat = function(value) {\n      return value + '%';\n    }\n  }\n\n  var offset = {\n    width: 70,\n    height: 20\n  }\n\n  width = 700;\n  height = 200;\n\n  var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n  var svg = createSvg(container, width + offset.width, height + offset.height + (options.showLegend ? 50 : 0))\n  var tooltipDiv = createTooltip(className);\n\n  var x = d3.scaleBand()\n    .rangeRound([offset.width, width])\n\n  var y = d3.scaleLinear()\n    .rangeRound([height, offset.height]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+offset.height/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(config.CSS_PREFIX + \"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(options.yAxisLabel)\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + offset.width +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n\n    var errorText = createErrorText(svg, width / 2, height / 2);\n\n    this.draw = function(chartData, colorsData) {\n\n      if (!chartData) {\n        errorText.text(\"chart data is not available\");\n        barSvg.selectAll('rect').remove();\n        barTextSvg.selectAll('text').remove();\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n      var partyAbbrByName = {};\n\n      if (options.noXaxisByParty) {\n\n      } else {\n        if (colorsData && colorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          colorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n          })\n        }\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n        if (options.noXaxisByParty) {\n          if (typeof colorsData == \"object\")\n            return colorsData[d.name];\n          if (typeof colorsData == \"function\")\n            return colorsData(d, i);\n          return colorsData;\n        } else {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n        }\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        var maxValue = d3.max(chartData, function(d) { return parseFloat(options.yValue(d)); });\n        if (options.customizeDynamicMaxValue) {\n          minMaxY[1] = options.customizeDynamicMaxValue(maxValue);\n        } else {\n          minMaxY[1] = maxValue + 1;\n        }\n      }\n      y.domain(minMaxY);\n  \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => getFillColor(d, i))\n          .on(\"mousemove\", function(d, i) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              tooltipDiv.html(getTooltipText(d, i))\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .attr(\"fill\", (d, i) => getFillColor(d, i))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d)));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(options.yValue(d)));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .text(function(d) {\n            return options.yValueFormat(options.yValue(d));\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(options.yValue(d))) - 5;\n          })\n        \n        if (options.showLegend) {\n          var parties = [];\n          var partyIecIds = [];\n          chartData.forEach(({partyInfo}) => {\n            var party = partyInfo.name;\n            if (partyIecIds.indexOf(partyInfo.iecId) === -1 && partyInfo.iecId) {\n                parties.push(party);\n                partyIecIds.push(partyInfo.iecId);\n            }\n          })\n          \n          function getLegendXY(i) {\n            \n            var xydata = [offset.width + (i%5)*100, height + 30 + parseInt(i/5) * 40];\n            if (parties.length < 6) {\n              xydata[0] += 100 * ( 6 - parties.length) / 2;\n            }\n            return xydata;\n          }\n          svg.selectAll(`.${className(\"legend\")}`).remove();\n          var legends = svg.selectAll(`.${className(\"legend\")}`)\n              .data(parties)\n              .enter()\n              .append('g')\n              .attr(\"class\", className(\"legend\"))\n              .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n          legends\n              .append(\"rect\")\n              .attr('width', 10)\n              .attr('height', 10)\n              .attr('x', 0)\n              .attr('y', 0)\n              .attr(\"fill\", (party, i) => {\n                  return getFillColorFromPartyName(party);\n              })\n          legends.append('text')\n              .attr('x', 30)\n              .attr('y', 10)\n              .style('font-size', '12px')\n              .text(party => partyAbbrByName[party])\n        }\n        \n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","const REGION_CHANGE = \"region-change\";\nconst CHART_PREVIEW = \"chart-preview\";\nconst SEATS_ELECTEDS_EVENT = \"seats-electeds-event\";\nconst MAP_PREVIEW = \"map-preview\";\nconst QUICK_RESULTS_PREVIEW = \"quick-results-preview\"\nconst EXPORT_PNG = \"export-png\";\nconst EXPORT_SUPERWIDGET_PNG = \"export-superwidget-png\";\n\nexport default {\n    REGION_CHANGE,\n    CHART_PREVIEW,\n    SEATS_ELECTEDS_EVENT,\n    MAP_PREVIEW,\n    QUICK_RESULTS_PREVIEW,\n    EXPORT_PNG,\n    EXPORT_SUPERWIDGET_PNG,\n};","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\n// var API_URI = \"https://elections2019.xyz/graphql\";\nvar API_URI = \"https://eds.elections.sabc.co.za/graphql\";\n\n\nconst client = new ApolloClient({\n    link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n    cache: new InMemoryCache()\n  })\n\nexport {\n    API_URI,\n    client\n}","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getSeatsDataForComparison(options) {\n  if (options.regionType === \"national\") {\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            eventType:\"National Election\" \n            orderBy:[\"-seats\"]){\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                  iecId\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  } else { //  if (options.regionType === \"province\")\n    return client.query({\n      query: gql`\n      {\n          allSeatCalculations(\n            province:\"${options.provinceName}\", \n            orderBy:[\"-seats\"]\n          ) {\n            edges{\n              node\n              {\n                nationalPr\n                regional\n                party{\n                  event {\n                    description\n                  }\n                  name\n                  abbreviation\n                  iecId\n                }\n                province{\n                  name\n                }\n              }\n            }\n          }\n      }\n      `\n    })\n  }\n}\n\n\nexport function getSeatsData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(\n              event:\"${eventDescription}\", \n              orderBy:[\"-seats\"]\n            ) {\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                    iecId\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    } else { //  if (options.regionType === \"province\")\n      eventDescription = eventDescription.replace(\"National\", \"Provincial\");\n      eventDescription = eventDescription.replace(\"NATIONAL\", \"PROVINCIAL\");\n      eventDescription = eventDescription.replace(\"national\", \"provincial\");\n      return client.query({\n        query: gql`\n        {\n            allSeatCalculations(\n              province:\"${options.provinceName}\", \n              event:\"${eventDescription}\", \n              orderBy:[\"-seats\"]\n            ) {\n              edges{\n                node\n                {\n                  nationalPr\n                  regional\n                  party{\n                    name\n                    abbreviation\n                    iecId\n                  }\n                  province{\n                    name\n                    country{\n                      event{\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            }\n        }\n        `\n      })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n\nexport function getVotesPredictionData(options) {\n    console.log(\"getVotesPredictionData\", options);\n    var eventType = (options.electionType == \"national\"? \"National Election\": \"Provincial Election\");\n\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          CSIRPrediction(eventType: \"${eventType}\", areaType:\"National\") {\n            turnout\n            timestamp\n            results{\n              edges{\n                node{\n                  percVds\n                  prediction{\n                    edges{\n                      node{\n                        party{\n                          name\n                          abbreviation\n                          iecId\n                        }\n                        actualPercent\n                        predictedPercent\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }`\n      })\n    } else { // regionType == \"province\"\n      return client.query({\n        query: gql`\n        {\n          CSIRPrediction(eventType: \"${eventType}\", areaType:\"Provincial\", province: \"${options.provinceName}\") {\n            turnout\n            timestamp\n            results{\n              edges{\n                node{\n                  percVds\n                  prediction{\n                    edges{\n                      node{\n                        party{\n                          name\n                          abbreviation\n                          iecId\n                        }\n                        actualPercent\n                        predictedPercent\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }`\n      })\n    }\n}\n\nexport function getVotesDataForComparison(options) {\n  if (options.regionType === \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots{\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType === \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          province:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    percOfVotes\n                    party {\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n              location {\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType === \"municipality\") {\n    var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          province:\"${options.provinceName}\", \n          municipalCode: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              event {\n                description\n              }\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                      iecId\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType === \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n          iecId:\"${options.iecId}\", \n        ) {\n          edges{\n            node{\n              event {\n                description\n              }\n              location {\n                iecId\n              }\n              partyResults {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getVotesDataForAllEvents(options) {\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                location {\n                  iecId\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n\nexport function getVotesDataM(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                  \n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                partyResults {\n                  edges{\n                    node{\n                      validVotes\n                      percOfVotes\n                      party {\n                        id\n                        name\n                        abbreviation\n                        iecId\n                      }\n                    }\n                  }\n                }\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                partyResults {\n                  edges{\n                    node{\n                      party {               \n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }\n                  \n                }\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event:\"${eventDescription}\",\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                location {\n                  iecId\n                  ward {\n                    municipality {\n                      code\n                      province {\n                        name\n                      }\n                    }\n                  }\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                        iecId\n                      }\n                      validVotes\n                      percOfVotes\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }\n\n  export function getMainParties(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByProvince(event:\"${eventDescription}\") {\n            edges {\n              node {\n                location{\n                  id\n                  name\n                }\n                totalVotesCast\n                topParty{\n                  validVotes\n                  percOfVotes\n                  party {\n                      id\n                      name\n                      abbreviation\n                      iecId\n                  }\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          topPartiesByMunicipality(\n            event:\"${eventDescription}\", \n            province:\"${options.provinceName}\") {\n            \n            edges {\n              node {\n                location{\n                    code\n                    name\n                    longName\n                }\n                totalVotesCast\n                topParty{\n                  party {               \n                    name\n                    abbreviation\n                    iecId\n                  }\n                  validVotes\n                  percOfVotes\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { //if (options.regionType === \"municipality\") {\n        return client.query({\n          query: gql`\n          {\n            topPartiesByVotingDistrict(\n              event:\"${eventDescription}\", \n              province:\"${options.provinceName}\",\n              municipalCode: \"${options.muniCode}\"\n            ) {\n              \n              edges {\n                node {\n                  location{\n                    iecId\n                  }\n                  topParty{\n                    party{\n                      name\n                      abbreviation\n                      iecId\n                    }\n                  }\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n\n\n  export function getTurnoutData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                percVoterTurnout\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                percVoterTurnout\n                location {\n                  code\n                  name\n                  longName\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else { // municipality or municipality-vd\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots( \n              event:\"${eventDescription}\",\n              municipalCode:\"${options.muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    }\n  }\n  \n  export function getTurnoutDataForOneEvent(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ) {\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\"\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n              event:\"${eventDescription}\"\n              province:\"${options.provinceName}\", \n              municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType === \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              event:\"${eventDescription}\"\n              iecId:\"${options.iecId}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n\n  export function getTurnoutDataForAllEvents(options) {\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots{\n            edges{\n              node{\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                event {\n                  description\n                  eventType {\n                    description\n                  }\n                }\n                percVoterTurnout\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n              province:\"${options.provinceName}\", \n              municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType === \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              iecId:\"${options.iecId}\" \n            ) {\n              edges{\n                node{\n                  event {\n                    description\n                    eventType {\n                      description\n                    }\n                  }\n                  percVoterTurnout\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\n  export function getSpoiltData(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n      return;\n    if (options.regionType === \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ) {\n            edges{\n              node {\n                spoiltVotes\n                totalVotesCast\n                totalValidVotes\n                location {\n                    id\n                    name\n                }\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType === \"municipality\") {\n        var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n\n        return client.query({\n          query: gql`\n          {\n            allMunicipalBallots( \n                event:\"${eventDescription}\",\n                province:\"${options.provinceName}\", \n                municipalCode: \"${muniCode}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    code\n                    name\n                    longName\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n    } else if (options.regionType === \"municipality-vd\") {\n        return client.query({\n          query: gql`\n          {\n            allVotingDistrictBallots(\n              event:\"${eventDescription}\",\n              iecId:\"${options.iecId}\"\n            ) {\n              edges{\n                node{\n                  location {\n                    iecId\n                  }\n                  spoiltVotes\n                  totalVotesCast\n                  totalValidVotes\n                }\n              }\n            }\n          }\n          `\n        })\n      }\n  }\n  ","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport function getProgressVotesCount(options) {\n    var eventDescription = options.eventDescription;\n    if (!eventDescription)\n    return;\n    if (options.regionType == \"national\") {\n      return client.query({\n        query: gql`\n        {\n          allBallots(\n            event:\"${eventDescription}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"province\") {\n      return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\"\n          ){\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality\") {\n      var muniCode = options.muniCode || options.muniName.split(\" - \")[0];\n  \n      return client.query({\n        query: gql`\n        {\n          allMunicipalBallots(\n            event:\"${eventDescription}\",\n            province:\"${options.provinceName}\", \n            municipalCode: \"${muniCode}\"\n          ) {\n            edges{\n              node {\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    } else if (options.regionType == \"municipality-vd\") {\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots(\n            event:\"${eventDescription}\",\n            iecId:\"${options.iecId}\"\n          ) {\n            edges{\n              node{\n                vdCount\n                vdWithResultsCaptured\n              }\n            }\n          }\n        }\n        `\n      })\n    }\n  }","import gql from \"graphql-tag\"\nimport {client} from \"./config\"\n\nexport {getSeatsData, getSeatsDataForComparison} from \"./race-for-seats\"\nexport {getVotesPredictionData, getVotesDataM, getVotesDataForAllEvents, getVotesDataForComparison, getMainParties} from \"./race-for-votes\"\nexport {getTurnoutData, getTurnoutDataForOneEvent, getTurnoutDataForAllEvents} from \"./turnout\"\nexport {getSpoiltData} from \"./spoilt\"\nexport {getProgressVotesCount} from \"./prog-votescount\"\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n        eventType {\n          description\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            abbreviation\n            colour\n            iecId\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getProvincesData() {\n  var provincesData = [\n      {\n          \"name\": \"Limpopo\",\n          \"abbreviation\": \"LIM\",\n          \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n      },\n      {\n          \"name\": \"Mpumalanga\",\n          \"abbreviation\": \"MP\",\n          \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n      },\n      {\n          \"name\": \"Gauteng\",\n          \"abbreviation\": \"GT\",\n          \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n      },\n      {\n          \"name\": \"KwaZulu-Natal\",\n          \"abbreviation\": \"KZN\",\n          \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n      },\n      {\n          \"name\": \"North West\",\n          \"abbreviation\": \"NW\",\n          \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n      },\n      {\n          \"name\": \"Free State\",\n          \"abbreviation\": \"FS\",\n          \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n      },\n      {\n          \"name\": \"Eastern Cape\",\n          \"abbreviation\": \"EC\",\n          \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n      },\n      {\n          \"name\": \"Northern Cape\",\n          \"abbreviation\": \"NC\",\n          \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHâI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n      },\n      {\n          \"name\": \"Western Cape\",\n          \"abbreviation\": \"WC\",\n          \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n      }\n  ]\n  provincesData.sort(function(a, b) {\n    return ('' + a.name).localeCompare(b.name);\n  })\n  return provincesData;\n}\n\nexport function getMetrosData() {\n  var metrosData = [\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},\n    {\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"},\n    {\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},\n    {\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},\n    {\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"},\n    {\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}\n  ]\n  return metrosData;\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataM,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange,\n  triggerCustomEvent,\n  fetchLocationTrackFromVDdata\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  dynamicYAxisFromValues: true,\n  customizeDynamicMaxValue: (maxVal) => Math.min(100, maxVal * 1.5),\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        comp: \"votes-default\",\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 1\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID !== this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n        console.log(d3);\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID !== -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataM(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesData(data, props);\n\n        if (props.comp === \"votes-myvd\") {\n          var newState;\n          if (chartData) {\n            newState = fetchLocationTrackFromVDdata(data);\n          } else {\n            newState = {iecId: \"\"}\n          }\n          var needUpdate = false;\n          Object.keys(newState).forEach(key => {\n            if (props[key] !== newState[key]) {\n              needUpdate = true;\n            }\n          })\n          if (needUpdate) {\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n          }\n        }\n       \n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName2,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 6\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-barchart(${getNationOrProvinceName2(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n        \n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName2(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSpoiltData\n} from \"../../api\";\nimport {\n  parseSpoiltVotesData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Spoilt vs Valid Votes',\n  yAxisLabel: 'PERCENTAGE VOTES',\n  noXaxisByParty: true,\n  yValue: d => d.percent,\n  yValueFormat: value => value + '%'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 9\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID !== this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `spoilt-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID !== -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var spoiltDataLoader = getSpoiltData(props);\n      var dataLoaders = [spoiltDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var spoiltData = values[0];\n        self.drawGraph(container, props, spoiltData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseSpoiltVotesData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Valid\": \"rgb(0,255,0)\",\n          \"Spoilt\": \"rgb(255,0,0)\"\n        });\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors,\n} from \"../../api\";\nimport {\n  parseMainPartyData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName,\n  fetchDataFromOBJ\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            disableNavigation: false,\n            stylesheetFor: \"web\",\n            componentID: 3\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        var self = this;\n        this.draw(this.getContainer(), this.state);\n        this.refreshIntervalID = setInterval(() => {\n          self.draw(self.getContainer(), self.state)\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      this.getContainer().selectAll(\"svg\").remove();\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    // componentWillReceiveProps(newProps) {\n    //     var newState = JSON.parse(JSON.stringify(this.state));\n    //     fetchDataFromOBJ(newState, newProps);\n    //     this.setState(newState);\n    // }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state))\n            this.draw(this.getContainer(), this.state)\n    }\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n\n            window.canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID !== this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        if (!window.canvg) {\n            return console.error(\"canvg module not available\");\n        }\n        window.canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n\n        var canvas = rendercanvas, filename = `race-for-votes-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        if (!this.state.disableNavigation) {\n            var newState = event.detail;\n            this.setState(newState)\n        }\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            stylesheetFor,\n            componentID\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\")+\" \"+cn(`stylesheet-${stylesheetFor}`)}>\n                {\n                    componentID !== -1000 && <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n                }\n\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        // var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n        var dataLoaders = [mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        geoJsonLoader.then(function(value) {\n            var geoJsonData = value;\n            Promise.all(dataLoaders).then(function(values){ \n                var locationToMainParty = parseMainPartyData(values[0], props);\n                partyColorsData = partyColorsData || values[1];  \n    \n                var partyColorByName = {};\n                var partyAbbrByName = {};\n                if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n                  partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                    partyColorByName[edge.node.name] = edge.node.colour;\n                    partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n                  })\n                }            \n    \n                function getFillColorFromPartyName(partyName) {\n                  if (!partyName)\n                    return regionColor;\n                  return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n                }\n    \n                function getMainPartyName(d, i) {\n                    var partyName;\n                    var regionType = self.state.regionType;\n                    if (regionType === \"national\") {\n                        var provinceName = d.properties.SPROVINCE;\n                        partyName = locationToMainParty[provinceName];\n                    } else if (regionType === \"province\") {\n                        var muniCode = getMunicipalityCode(d.properties);\n                        partyName = locationToMainParty[muniCode];\n                    } else if (regionType === \"municipality\"){// \"municipality\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        partyName = locationToMainParty[iecId];\n                    } else {// \"municipality-vd\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        partyName = locationToMainParty[iecId];\n                    }\n                    return partyName;\n                }\n                function getMainPartyColorFromRegion(d, i) {\n                    var partyName = getMainPartyName(d, i);\n                    var partyColor = getFillColorFromPartyName(partyName);\n                    return partyColor;\n                }\n    \n                var jsonDataFeatures;\n                if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                    var regionType = self.state.regionType\n                    if (regionType == \"municipality\") {\n                        if (!geoJsonData.objects[self.state.muniCode])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                    } else { // \"municipality-vd\"\n                        if (!geoJsonData.objects[self.state.iecId])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                    }\n                }\n    \n                jsonDataFeatures = geoJsonData.features;\n    \n                var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n                var path = d3.geoPath().projection(projection);\n    \n                // fill region with regionColor\n                svg.selectAll(`.${className(\"region\")}`)\n                    .data(jsonDataFeatures)\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"class\", className(\"region\"))\n                    .attr(\"stroke\", regionBorderColor)\n                    .attr(\"fill\", getMainPartyColorFromRegion)\n                    .attr(\"id\", function(d, i) {\n                        return `region-${i}`;\n                    })\n                    .attr(\"d\", path);\n                \n                var parties = [];\n                var availableCnt = [];\n                jsonDataFeatures.forEach((d, i) => {\n                    var party = getMainPartyName(d, i);\n                    if (parties.indexOf(party) == -1) {\n                        parties.push(party);\n                        availableCnt.push(1);\n                    } else {\n                        availableCnt[parties.indexOf(party)] ++;\n                    }\n                })\n    \n                parties.sort(function(a, b){\n                    return availableCnt[parties.indexOf(b)] - availableCnt[parties.indexOf(a)];\n                })\n    \n                function getLegendXY(i) {\n                    return [(i%5)*150, h + 10 + parseInt(i/5) * 40];\n                }\n                var legends = svg.selectAll(`.${className(\"legend\")}`)\n                    .data(parties)\n                    .enter()\n                    .append('g')\n                    .attr(\"class\", className(\"legend\"))\n                    .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n                legends\n                    .append(\"rect\")\n                    .attr('width', 20)\n                    .attr('height', 20)\n                    .attr('x', 0)\n                    .attr('y', 0)\n                    .attr(\"fill\", (party, i) => {\n                        return getFillColorFromPartyName(party);\n                    })\n                legends.append('text')\n                    .attr('x', 30)\n                    .attr('y', 16)\n                    .text(party => partyAbbrByName[party])\n                \n                if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                    svg.selectAll(\".place-label\")\n                        .data(jsonDataFeatures)\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"place-label\")\n                        .attr(\"font-size\", \"12px\")\n                        .attr(\"transform\", function(d) { \n                            var center, projectionCenter;\n                            if (d.geometry.type === \"Polygon\") {\n                                center = polylabel(d.geometry.coordinates);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 12;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            } else { //\"MultiPolygon\"\n                                center = polylabel(d.geometry.coordinates[0]);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 5;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            }\n                        })\n                        .attr(\"dy\", \".35em\")\n                        .style(\"text-anchor\", \"middle\")\n                        .text(d => getSubRegionName(d.properties, self.state))\n                }\n    \n                if (self.state.regionType.indexOf(\"municipality\") == -1) {\n                    fixMapLabelIntersect();\n                }\n    \n                //hidden area for catching events\n                svg.selectAll(\".eventLayer\")\n                    .data(jsonDataFeatures)\n                .enter()\n                    .append(\"path\")\n                    .attr(\"d\", path)\n                    .attr(\"class\", \"eventLayer\")\n                    .attr(\"id\", function(d, i) {\n                        return `eventLayer-${i}`;\n                    })\n                    .attr(\"fill\", \"transparent\")\n                    .on(\"mouseover\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 3)\n                            .style(\"fill-opacity\", 0.8);\n                    })\n                    .on(\"mousemove\", function(d, i) {\t\n                        // if (self.state.regionType === \"municipality\") return;\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 1);\n    \n                        var undefinedText;\n                        if (self.state.regionType === \"province\") {\n                            undefinedText = \"New municipality - no previous results available\"\n                        } else {\n                            undefinedText = \"New voting district - no previous results available\"\n                        }\n                        var mainPartyName = getMainPartyName(d, i);\n                        var subRegionName = getSubRegionName(d.properties, self.state);\n                        var tooltipText = (typeof mainPartyName !== \"undefined\")? \n                                    (subRegionName + \" : \" + mainPartyName) : undefinedText;\n    \n                        tooltipDiv.html(tooltipText)\t\n                            .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                    })\n                    .on(\"mouseout\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 1)\n                            .style(\"fill-opacity\", 1);\n                        \n                        if (self.state.regionType === \"municipality\") return;\n    \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                    })\n                    .on(\"click\", function(d, i) {                  \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                        \n                        var regionType = self.state.regionType;\n                        var newState, event;\n                        if (regionType === \"national\") {\n                            newState = {\n                                regionType: \"province\",\n                                provinceName: d.properties.SPROVINCE\n                            }\n                        } else if (regionType === \"province\") {\n                            newState = {\n                                regionType: \"municipality\", \n                                provinceName: self.state.provinceName,\n                                muniName: d.properties.smunicipal,\n                                muniCode: getMunicipalityCode(d.properties),\n                            }\n                        } else if (regionType === \"municipality\"){ // \"municipality\"\n                            var newState = {\n                                regionType: \"municipality-vd\", \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: getMunicipalityiecId(d.properties),\n                            }\n                        } else { // \"municipality-vd\"\n                            return;\n                        }\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        if (self.state.disableNavigation) {\n                            return;\n                        }\n                        self.setState(newState);\n                    })\n                if (!self.state.disableNavigation) {\n                    var fo = svg.append(\"foreignObject\")\n                        .attr(\"x\", 0)\n                        .attr(\"y\", 10)\n                        .attr(\"width\", 500)\n                        .attr(\"height\", 30)\n                        .attr(\"class\", \"map-controls\")\n                    \n                    function setRegionType(regionType) {\n                        var newState;\n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            iecId: self.state.iecId,\n                        }\n                        newState.regionType = regionType;\n                        triggerCustomEvent(events.REGION_CHANGE, newState);\n                        self.setState(newState);\n                    }\n    \n                    function appendSpan(foDiv, regionName, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"span\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"default\")\n                            .html(regionName);\n                    }\n    \n                    function appendLink(foDiv, regionName, regionType, addSub) {\n                        if (addSub) foDiv.append(\"span\").html(\" > \");\n                        foDiv.append(\"a\")\n                            .style(\"height\", \"30px\")\n                            .style(\"cursor\", \"pointer\")\n                            .html(regionName)\n                            .on(\"click\", function() {\n                                setRegionType(regionType);\n                            });\n                    }\n                    \n                    var foDiv = fo.append(\"xhtml:div\");\n                    var regionType = self.state.regionType;\n                    if (regionType == \"national\") {\n                        appendSpan(foDiv, \"South Africa\", false);\n                    } else {\n                        appendLink(foDiv, \"South Africa\", \"national\", false);\n                        if (regionType == \"province\") {\n                            appendSpan(foDiv, self.state.provinceName, true);\n                        } else {\n                            appendLink(foDiv, self.state.provinceName, \"province\", true);\n                            if (regionType == \"municipality\") {\n                                appendSpan(foDiv, self.state.muniCode, true);\n                            } else {\n                                appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                                appendSpan(foDiv, self.state.iecId, true);\n                            }\n                        }\n                    }\n                }\n                self.getLoadingSpinner()\n                    .style(\"display\", \"none\");\n            }).catch(error => {\n                console.error(error);\n                console.log(`failed to get data from server`);\n            })\n        }).catch(error => {\n            console.error(error);\n\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n            \n            if (self.state.disableNavigation) {\n                return;\n            }\n\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniCode: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                if (regionType == \"national\" || regionType == \"province\") {\n                  console.log(`Can't get map data for $currentRegionName`)\n                } else {\n                    alert(`${currentRegionName} has been disestablished`); \n                }\n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"../Map/map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getTurnoutData,\n    getProvincesData\n} from \"../../api\";\nimport {\n  parseTurnoutData,\n  getRegionName,\n  getSubRegionName,\n  createTooltip,\n  getMunicipalityCode,\n  fixMapLabelIntersect,\n  triggerCustomEvent,\n  getMunicipalityiecId,\n  getRegionFileName,\n  fetchDataFromOBJ\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar provincesData = getProvincesData();\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 11\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        var self = this;\n        this.draw(this.getContainer(), this.state);\n        this.refreshIntervalID = setInterval(() => {\n          self.draw(self.getContainer(), self.state)\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n        this.getContainer().selectAll(\"svg\").remove();\n        document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n        document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(prevState) !== JSON.stringify(this.state))\n            this.draw(this.getContainer(), this.state)\n    }\n\n\n    exportAsPNGUri() {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var rect = {width: 950, height: 890};\n            var rendercanvas = document.createElement('canvas');\n            rendercanvas.setAttribute(\"width\", rect.width);\n            rendercanvas.setAttribute(\"height\", rect.height);\n\n            if (!window.canvg) {\n                return reject(\"canvg module not available\");\n            }\n\n            window.canvg(rendercanvas, self.refs.vizcontainer.innerHTML, {\n                ignoreDimensions: true,\n                scaleWidth: rect.width,\n                scaleHeight: rect.height\n            });\n            resolve(rendercanvas.toDataURL(\"image/png;base64\").split(',')[1])\n        });\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var rect = {width: 950, height: 890};\n        var rendercanvas = document.createElement('canvas');\n        rendercanvas.setAttribute(\"width\", rect.width);\n        rendercanvas.setAttribute(\"height\", rect.height);\n\n        if (!window.canvg) {\n            return console.error(\"canvg module not available\");\n        }\n\n        window.canvg(rendercanvas, this.refs.vizcontainer.innerHTML, {\n            ignoreDimensions: true,\n            scaleWidth: rect.width,\n            scaleHeight: rect.height\n        });\n\n        var canvas = rendercanvas, filename = `turnout-map(${getRegionName(this.state)}).png`;\n        var lnk = document.createElement(\"a\"), e;\n\n        lnk.download = filename;\n        lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n        if (document.createEvent) {\n            e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, true, window,\n                            0, 0, 0, 0, 0, false, false, false,\n                            false, 0, null);\n            lnk.dispatchEvent(e);\n        } else if (lnk.fireEvent) {\n            lnk.fireEvent(\"onclick\");\n        }\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        var {\n            disableNavigation,\n            stylesheetFor,\n            componentID\n        } = this.state;\n        return (\n            <div className={className(\"map-widget\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n                {\n                    componentID != -1000 && <div className={cn(\"map-title\")}>{getRegionName(this.state)}</div>\n                }\n                <div ref=\"vizcontainer\" className={className(\"map\")}></div>\n                <div className={cn(\"loading-spinner\")} ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n            </div>\n        )\n    }\n \n    drawGraph(container, props) {\n        var self = this;\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName(self.state);\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv = createTooltip(className);\n\n        var w = 900;\n        var h = 800;\n        var bottomMargin = 90;// for legend\n        var rightMargin = 50;\n\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", \"0 0 \" + (w+rightMargin) + \" \" + (h+bottomMargin))\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var turnoutDataLoader = getTurnoutData(props);\n        // var dataLoaders = [geoJsonLoader, turnoutDataLoader];\n        var dataLoaders = [turnoutDataLoader];\n\n        geoJsonLoader.then(function(value) {\n            var geoJsonData = value;\n            Promise.all(dataLoaders).then(function(values){ \n                var locationToTurnout = parseTurnoutData(values[0], props);      \n    \n                function getMergedColorWithWhite(percent) {\n                    var originRGB = {\n                        R: 0,\n                        G: 255,\n                        B: 0\n                    }\n                    var mixedR = (originRGB.R * (percent) + 255 * (100-percent))/100;\n                    var mixedG = (originRGB.G * (percent) + 255 * (100-percent))/100;\n                    var mixedB = (originRGB.B * (percent) + 255 * (100-percent))/100;\n                    return `rgb(${mixedR},${mixedG},${mixedB})`;\n                }\n                function getFillColorFromTurnout(turnout) {\n                  if (turnout > 65)\n                    return \"#39711D\";//getMergedColorWithWhite(100);//\"rgb(0,165,138)\";\n                  if (turnout >= 60)\n                    return \"#458923\";//getMergedColorWithWhite(90);//\"rgb(4,68,95)\";\n                  if (turnout >= 55)\n                    return \"#53B025\";//getMergedColorWithWhite(80);//\"rgb(4,98,138)\";\n                  if (turnout >= 50)\n                    return \"#4BDC02\";//getMergedColorWithWhite(70);//\"rgb(4,117,164)\";\n                  if (turnout >= 45)\n                    return \"#7CE547\";//getMergedColorWithWhite(60);//\"rgb(4,136,191)\";\n                  if (turnout >= 40)\n                    return \"#93E968\";//getMergedColorWithWhite(50);//\"rgb(0,154,216)\";\n                  if (turnout >= 35)\n                    return \"#A6ED83\";//getMergedColorWithWhite(40);//\"rgb(77,174,224)\";\n                  if (turnout >= 30)\n                    return \"#C5F3AF\";//getMergedColorWithWhite(30);//\"rgb(124,194,231)\";\n                  return \"#D3F6C3\";//regionColor;\n                }\n    \n                function getTurnout(d, i) {\n                    var turnout;\n                    var regionType = self.state.regionType;\n                    if (regionType === \"national\") {\n                        var provinceName = d.properties.SPROVINCE;\n                        turnout = locationToTurnout[provinceName];\n                    } else if (regionType === \"province\") {\n                        var muniCode = getMunicipalityCode(d.properties);\n                        turnout = locationToTurnout[muniCode];\n                    } else if (regionType === \"municipality\"){// \"municipality\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        turnout = locationToTurnout[iecId];\n                    } else {// \"municipality-vd\"\n                        var iecId = getMunicipalityiecId(d.properties);\n                        turnout = locationToTurnout[iecId];\n                    }\n                    return turnout;\n                }\n                function getFillColorFromRegion(d, i) {\n                    var turnout = getTurnout(d, i);\n                    var fillColor = getFillColorFromTurnout(turnout);\n                    return fillColor;\n                }\n                var jsonDataFeatures;\n                if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for munis and muni-vds\n                    var regionType = self.state.regionType\n                    if (regionType == \"municipality\") {\n                        if (!geoJsonData.objects[self.state.muniCode])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n                    } else { // \"municipality-vd\"\n                        if (!geoJsonData.objects[self.state.iecId])\n                            return;\n                        geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.iecId]);\n                    }\n                }\n    \n                jsonDataFeatures = geoJsonData.features;\n    \n                var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n                var path = d3.geoPath().projection(projection);\n    \n                // fill region with regionColor\n                svg.selectAll(`.${className(\"region\")}`)\n                    .data(jsonDataFeatures)\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"class\", className(\"region\"))\n                    .attr(\"stroke\", regionBorderColor)\n                    .attr(\"fill\", getFillColorFromRegion)\n                    .attr(\"id\", function(d, i) {\n                        return `region-${i}`;\n                    })\n                    .attr(\"d\", path);\n                \n                var turnoutColors = [{\n                    text: \"More than 65%\",\n                    turnout: 66\n                },{\n                    text: \"60% - 65%\",\n                    turnout: 60\n                },{\n                    text: \"55% - 60%\",\n                    turnout: 55\n                },{\n                    text: \"50% - 55%\",\n                    turnout: 50\n                },{\n                    text: \"45% - 50%\",\n                    turnout: 45\n                },{\n                    text: \"40% - 45%\",\n                    turnout: 40\n                },{\n                    text: \"35% - 40%\",\n                    turnout: 35\n                },{\n                    text: \"30% - 35%\",\n                    turnout: 30\n                },{\n                    text: \"Less than 30%\",\n                    turnout: 15\n                }];\n                \n                function getLegendXY(i) {\n                    return [(i%5)*170, h + 10 + parseInt(i/5) * 40];\n                }\n                var legends = svg.selectAll(`.${className(\"legend\")}`)\n                    .data(turnoutColors)\n                    .enter()\n                    .append('g')\n                    .attr(\"class\", className(\"legend\"))\n                    .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n                legends\n                    .append(\"rect\")\n                    .attr('width', 20)\n                    .attr('height', 20)\n                    .attr('x', 0)\n                    .attr('y', 0)\n                    .attr(\"fill\", (it) => {\n                        return getFillColorFromTurnout(it.turnout);\n                    })\n                legends.append('text')\n                    .attr('x', 30)\n                    .attr('y', 16)\n                    .text(it => it.text)\n                \n                if (self.state.regionType !== \"municipality\") {\n                    svg.selectAll(\".place-label\")\n                        .data(jsonDataFeatures)\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"place-label\")\n                        .attr(\"font-size\", \"12px\")\n                        .attr(\"transform\", function(d) { \n                            var center, projectionCenter;\n                            if (d.geometry.type === \"Polygon\") {\n                                center = polylabel(d.geometry.coordinates);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 12;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            } else { //\"MultiPolygon\"\n                                center = polylabel(d.geometry.coordinates[0]);\n                                projectionCenter = projection(center);\n                                projectionCenter[1] -= 5;\n                                return \"translate(\" + projectionCenter + \")\"; \n                            }\n                        })\n                        .attr(\"dy\", \".35em\")\n                        .style(\"text-anchor\", \"middle\")\n                        .text(d => getSubRegionName(d.properties, self.state))\n                }\n    \n                if (self.state.regionType !== \"municipality\") {\n                    fixMapLabelIntersect();\n                }\n    \n                //hidden area for catching events\n                svg.selectAll(\".eventLayer\")\n                    .data(jsonDataFeatures)\n                .enter()\n                    .append(\"path\")\n                    .attr(\"d\", path)\n                    .attr(\"class\", \"eventLayer\")\n                    .attr(\"id\", function(d, i) {\n                        return `eventLayer-${i}`;\n                    })\n                    .attr(\"fill\", \"transparent\")\n                    .on(\"mouseover\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 3)\n                            .style(\"fill-opacity\", 0.8);\n                    })\n                    .on(\"mousemove\", function(d, i) {\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 1);\n                        \n                        var undefinedText;\n                        if (self.state.eventDescription.indexOf(\"2019\") == -1) {\n                            if (self.state.regionType === \"province\") {\n                                undefinedText = \"New municipality - no previous results available\"\n                            } else {\n                                undefinedText = \"New voting district - no previous results available\"\n                            }\n                        } else {\n                            undefinedText = \"votes not counted yet\";\n                        }\n    \n                        var turnoutData = getTurnout(d, i);\n                        var subRegionName = getSubRegionName(d.properties, self.state);\n                        var tooltipText = (typeof turnoutData !== \"undefined\")? \n                                    (subRegionName + \" : \" + turnoutData + \"%\") : undefinedText;\n    \n                        tooltipDiv.html(tooltipText)\t\n                            .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                    })\n                    .on(\"mouseout\", function(d, i) {\n                        d3.select(`#region-${i}`)\n                            .attr(\"stroke-width\", 1)\n                            .style(\"fill-opacity\", 1);\n                        \n                        if (self.state.regionType === \"municipality\") return;\n    \n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                    })\n                    .on(\"click\", function(d, i) {\n                        if (self.state.disableNavigation) {\n                            return;\n                        }\n                        tooltipDiv.transition()\t\t\n                            .duration(200)\t\t\n                            .style(\"opacity\", 0);\t\n                        \n                        var regionType = self.state.regionType;\n                        var newState;\n                        if (regionType === \"national\") {\n                            newState = {\n                                regionType: \"province\",\n                                provinceName: d.properties.SPROVINCE\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        } else if (regionType === \"province\") {\n                            newState = {\n                                regionType: \"municipality\", \n                                provinceName: self.state.provinceName,\n                                muniName: d.properties.smunicipal,\n                                muniCode: getMunicipalityCode(d.properties),\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        } else { // \"municipality\"\n                            var newState = {\n                                regionType: \"municipality-vd\", \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: getMunicipalityiecId(d.properties),\n                            }\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n    \n                            self.setState(newState);\n                        }\n                    })\n                    if (!self.state.disableNavigation) {\n                        var fo = svg.append(\"foreignObject\")\n                            .attr(\"x\", 0)\n                            .attr(\"y\", 10)\n                            .attr(\"width\", 500)\n                            .attr(\"height\", 30)\n                            .attr(\"class\", \"map-controls\")\n                        \n                        function setRegionType(regionType) {\n                            var newState;\n                            var newState = {\n                                regionType: self.state.regionType, \n                                provinceName: self.state.provinceName,\n                                muniName: self.state.muniName,\n                                muniCode: self.state.muniCode,\n                                iecId: self.state.iecId,\n                            }\n                            newState.regionType = regionType;\n                            triggerCustomEvent(events.REGION_CHANGE, newState);\n                            self.setState(newState);\n                        }\n        \n                        function appendSpan(foDiv, regionName, addSub) {\n                            if (addSub) foDiv.append(\"span\").html(\" > \");\n                            foDiv.append(\"span\")\n                                .style(\"height\", \"30px\")\n                                .style(\"cursor\", \"default\")\n                                .html(regionName);\n                        }\n        \n                        function appendLink(foDiv, regionName, regionType, addSub) {\n                            if (addSub) foDiv.append(\"span\").html(\" > \");\n                            foDiv.append(\"a\")\n                                .style(\"height\", \"30px\")\n                                .style(\"cursor\", \"pointer\")\n                                .html(regionName)\n                                .on(\"click\", function() {\n                                    setRegionType(regionType);\n                                });\n                        }\n                        \n                        var foDiv = fo.append(\"xhtml:div\");\n                        var regionType = self.state.regionType;\n                        if (regionType == \"national\") {\n                            appendSpan(foDiv, \"South Africa\", false);\n                        } else {\n                            appendLink(foDiv, \"South Africa\", \"national\", false);\n                            if (regionType == \"province\") {\n                                appendSpan(foDiv, self.state.provinceName, true);\n                            } else {\n                                appendLink(foDiv, self.state.provinceName, \"province\", true);\n                                if (regionType == \"municipality\") {\n                                    appendSpan(foDiv, self.state.muniCode, true);\n                                } else {\n                                    appendLink(foDiv, self.state.muniCode, \"municipality\", true);\n                                    appendSpan(foDiv, self.state.iecId, true);\n                                }\n                            }\n                        }\n                        // foDiv\n                        //     .append(\"button\")\n                        //     .attr(\"class\", \"go-back\")\n                        //     .style(\"height\", \"30px\")\n                        //     .style(\"color\", \"black\")\n                        //     .html(\"go back\")\n                        //     .on(\"click\", function() {\n                        //         var regionType = self.state.regionType;\n                        //         var newState, event;\n            \n                        //         var newState = {\n                        //             regionType: self.state.regionType, \n                        //             provinceName: self.state.provinceName,\n                        //             muniName: self.state.muniName,\n                        //             muniCode: self.state.muniCode,\n                        //             iecId: self.state.iecId,\n                        //         }\n                                \n                        //         if (regionType === \"province\") {\n                        //             newState.regionType = \"national\";\n                        //         } else if (regionType === \"municipality\") {\n                        //             newState.regionType = \"province\";\n                        //         } else if (regionType === \"municipality-vd\") {\n                        //             newState.regionType = \"municipality\";\n                        //         }\n            \n                        //         triggerCustomEvent(events.REGION_CHANGE, newState);\n                        //         self.setState(newState);\n                        //     });\n                    }\n                self.getLoadingSpinner()\n                    .style(\"display\", \"none\");\n            }).catch(error => {\n                console.error(error);\n                console.log(`failed to get data from server`);\n            })\n        }).catch(error => {\n            console.error(error);       \n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n            var currentRegionName = getRegionName(this.state);\n            var regionType = self.state.regionType;\n            var newState, event;\n\n            var newState = {\n                regionType: self.state.regionType, \n                provinceName: self.state.provinceName,\n                muniName: self.state.muniName,\n                muniCode: self.state.muniCode,\n                iecId: self.state.iecId,\n            }\n            \n            if (regionType === \"province\") {\n                newState.regionType = \"national\";\n            } else if (regionType === \"municipality\") {\n                newState.regionType = \"province\";\n            } else if (regionType === \"municipality-vd\") {\n                newState.regionType = \"municipality\";\n            }\n\n            triggerCustomEvent(events.REGION_CHANGE, newState);\n            self.setState(newState);\n            setTimeout(() => {\n                if (regionType == \"national\" || regionType == \"province\") {\n                  console.log(`Can't get map data for ${currentRegionName}`);\n                } else {\n                    alert(`${currentRegionName} has been disestablished`); \n                }\n            }, 300);    \n        })\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getTurnoutDataForAllEvents,\n} from \"../../api\";\nimport {\n  parseTurnoutDataForAllEvents,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Turnout Barchart',\n  yAxisLabel: 'PERCENTAGE',\n  noXaxisByParty: true,\n  yValue: function(d) {\n    return d.percVoterTurnout;\n  },\n  yValueFormat: function(percVoterTurnout) {\n    return percVoterTurnout + '%';\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        eventType: \"national\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 10\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n    \n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `turnout-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var turnoutDataLoader = getTurnoutDataForAllEvents(props);\n      var dataLoaders = [turnoutDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var turnoutData = values[0];\n        self.drawGraph(container, props, turnoutData, 'rgb(157,51,55)');\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, colorsData) {\n        var chartData = parseTurnoutDataForAllEvents(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, colorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport styles from \"./barchartMap.css\";\nimport BarChart from '../BarChart/barchart';\nimport Map from '../Map/map';\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getRegionName,\n    fetchDataFromOBJ\n} from \"../../utils\";\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nclass BarchartWithNavMap extends Component {    \n    constructor(props) {\n        super(props);\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2019 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            stylesheetFor: \"web\",\n            componentID: 2\n        }      \n\n        fetchDataFromOBJ(this.state, props);\n\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var self = this;\n        Promise.all([\n            self.barchartInstance.exportAsPNGUri(),\n            self.mapInstance.exportAsPNGUri()\n        ]).then(values => {\n            var zip = new window.JSZip();\n\n            var imgs = zip.folder(\"export-images\");\n            imgs.file(\"barchart.png\", values[0], {base64: true});\n            imgs.file(\"map.png\", values[1], {base64: true});\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `race-for-votes-barchart-map(${getRegionName(self.state)}).zip`);\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n    }\n\n    render() {\n      const {\n        stylesheetFor\n      } = this.state;\n\n        return (\n        <div ref=\"superwidget\" className={className(\"barchart-map\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div className={className(\"barchart-container\")} ref=\"barchart\">\n                <BarChart \n                    ref={instance => { this.barchartInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n            <div className={className(\"map-container\")}>\n                <Map \n                    ref={instance => { this.mapInstance = instance; }} \n                    {...this.state}\n                    componentID={-1000} />\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BarchartWithNavMap;\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, createErrorText} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n    var data = [],\n        width = 700,\n        height = 300,\n        margin = {top: 10, right: 10, bottom: 10, left: 10},\n        variable = options.variable,\n        category = options.category,\n        padAngle = 0.015,\n        transTime = 750,\n        floatFormat = d3.format('.4r'),\n        cornerRadius = 3,\n        colorsData = null;\n\n\n        \n\n    function colour(key) {\n        if (colorsData && colorsData[key]) {\n            return colorsData[key];\n        }\n        return 'rgb(' + Math.random()*250 + ',' + Math.random()*250 + ',' + Math.random()*250 + ')';\n    }\n\n    var radius = Math.min(width, height) / 2;\n\n    var pie = d3.pie()\n        .value(function(d) { return floatFormat(d[variable]); })\n        .sort(null);\n\n    var arc = d3.arc()\n        .outerRadius(radius * 0.8)\n        .innerRadius(radius * 0.6)\n        .cornerRadius(cornerRadius)\n        .padAngle(padAngle);\n\n    var totalSvg = createSvg(container, width + margin.left + margin.right, height + margin.top + margin.bottom);\n    \n    \n    var transformX = height / 2, transformY = height / 2;\n    if (options.chartType === 'Progress on Votes Count') {\n    } else {\n        transformX = width / 2;\n    }\n    var svg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + transformX + ',' + transformY + ')');\n    \n    var labelSvg = totalSvg\n        .append('g')\n        .attr('transform', 'translate(' + height * 6 / 5 + ',' + height / 2 + ')');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'lines');\n\n    var path = svg.select('.slices')\n        .selectAll('path')\n        .data(pie(data))\n        .enter().append('path')\n        .attr('fill', function(d) { return colour(d.data[category]); })\n        .attr('d', arc);\n\n    var errorText = createErrorText(svg);\n\n    this.destroy = function() {\n        container.selectAll(\"svg\").remove();\n    }\n    this.draw = function(value, colorsDataP) {\n        if (!value) {\n            errorText.text(\"chart data is not available\");\n            return;\n        } else {\n            errorText.text(\"\");\n        }\n\n        if (options.chartType === 'Progress on Votes Count') {\n            colorsData = colorsDataP;\n        } else {\n            var partyColorByName = {};\n\n            var partyColorsData = colorsDataP;\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n                partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                    partyColorByName[edge.node.abbreviation] = edge.node.colour;\n                })\n            }\n            colorsData = partyColorByName;\n        }\n        \n        data = value;\n\n        if (options.chartType === 'Progress on Votes Count') {\n            labelSvg.selectAll('text').remove();\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', -15)\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle')\n                .text('Completed' + ': ' + data[0][\"percent\"] + '%');\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', 0)\n                .text('Captured Votes' + ': ' + data[0][\"count\"])\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n            labelSvg.append('text')\n                .attr('x', 0)\n                .attr('y', 15)\n                .text('Total' + ': ' + data[0][\"totalCount\"])\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n        }\n\n        var updatePath = d3.select('.slices').selectAll('path');\n\n        var data0 = path.data(),\n            data1 = pie(data);\n\n        updatePath = updatePath.data(data1, key);\n\n        updatePath.enter().append('path')\n            .each(function(d, i) { this._current = findNeighborArc(i, data0, data1, key) || d; })\n            .attr('fill', function(d) {  return colour(d.data[category]); })\n            .attr('d', arc);\n\n        updatePath.exit()\n            .transition()\n            .duration(transTime)\n            .attrTween(\"d\", arcTween)\n            .remove();\n\n        updatePath.transition().duration(transTime)\n            .attrTween('d', arcTween);\n\n        d3.selectAll('.labelName text, .slices path').call(toolTip);\n\n    };\n\n    function toolTip(selection) {\n\n        selection.on('mouseenter', function (data) {\n            svg.append('text')\n                .attr('class', 'toolCircle')\n                .attr('dy', -15)\n                .html(toolTipHTML(data))\n                .style('font-size', '.7em')\n                .style('text-anchor', 'middle');\n\n            svg.append('circle')\n                .attr('class', 'toolCircle')\n                .attr('r', radius * 0.55)\n                .style('fill', colour(data.data[category]))\n                .style('fill-opacity', 0.35);\n\n        });\n\n        selection.on('mouseout', function () {\n            d3.selectAll('.toolCircle').remove();\n        });\n    }\n\n    function toolTipHTML(data) {\n\n        if (options.chartType === 'Progress on Votes Count') {\n            var tip = '';\n            tip += '<tspan x=\"0\">' + 'Progress' + ': ' + data.data[\"percent\"] + '%' + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Captured Votes' + ': ' + data.data[\"count\"] + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Total' + ': ' + data.data[\"totalCount\"] + '</tspan>';\n        } else { //'Race for Seats Donut chart'\n            var tip = '';\n            tip += '<tspan x=\"0\">' + 'Seats' + ': ' + data.data[\"seats\"] + '</tspan>';\n            tip += '<tspan x=\"0\" dy=\"1.2em\">' + 'Party' + ': ' + data.data[\"name\"] + '</tspan>';\n        }\n        return tip;\n    }\n\n    function arcTween(d) {\n        var i = d3.interpolate(this._current, d);\n        this._current = i(0);\n        return function(t) { return arc(i(t)); };\n    }\n\n    function findNeighborArc(i, data0, data1, key) {\n        var d;\n        return (d = findPreceding(i, data0, data1, key)) ? {startAngle: d.endAngle, endAngle: d.endAngle}\n            : (d = findFollowing(i, data0, data1, key)) ? {startAngle: d.startAngle, endAngle: d.startAngle}\n                : null;\n    }\n\n    function findPreceding(i, data0, data1, key) {\n        var m = data0.length;\n        while (--i >= 0) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n\n    function key(d) {\n        return d.data[category];\n    }\n\n    function findFollowing(i, data0, data1, key) {\n        var n = data1.length, m = data0.length;\n        while (++i < n) {\n            var k = key(data1[i]);\n            for (var j = 0; j < m; ++j) {\n                if (key(data0[j]) === k) return data0[j];\n            }\n        }\n    }\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"./d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getProgressVotesCount\n} from \"../../api\";\nimport {\n  parseProgressVotesCount,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Progress on Votes Count',\n  variable: 'percent',\n  category: 'name'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\n\nclass PieChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 4\n      }     \n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `progress-on-votes-piechart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n   \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"piechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var progressVotesDataLoader = getProgressVotesCount(props);\n      var dataLoaders = [progressVotesDataLoader];\n\n      Promise.all(dataLoaders).then(function(values){ \n        var progressVotesData = values[0];\n        self.drawGraph(container, props, progressVotesData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data) {\n        var chartData = parseProgressVotesCount(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, {\n          \"Completed\": \"#15707C\",\n          \"Not Completed\": \"#CCCCCC\"\n        });\n    }\n}\n\nexport default PieChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./piechart.css\";\nimport {Chart} from \"../ProgVotesCountPiechart/d3piechart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Donut Chart',\n  variable: 'seats',\n  category: 'name',\n  viewBox: '170 0 360 320'\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass DonutChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 17\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID !== this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-donutchart-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"donutchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID !== -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default DonutChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonData,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  chartType: \"Race For Votes Comparison\",\n  yAxisLabel: \"PERCENTAGE VOTES\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  showLegend: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        partyIecId: null,\n        eventDescriptions: [\n            \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 16\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n              componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonData(data, props);\n        console.log(\"comparison data fetch\", data, chartData);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../BarChart/d3barchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats Comparison',\n  yAxisLabel: 'Seats Count',\n  dynamicYAxisFromValues: true,\n  yValue: function(d) {\n    return d.seats;\n  },\n  yValueFormat: function(seats) {\n    return seats;\n  } \n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbr: \"ANC\",\n        partyIecId: null,\n        eventDescriptions: [\n            \"National Elections 1999\",\n            \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            \"2019 PROVINCIAL ELECTION\",\n\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 7\n      }\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      \n      return (\n          <div className={cn(\"barchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, createErrorText} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n    options = {};\n  } \n\n  width = 360;\n  height = 185;\n\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = createSvg(container, width, height);\n\n\n    var tooltipDiv = createTooltip(className);\n\n    var mainSvg = svg.append(\"g\");\n    var errorText = createErrorText(svg, width / 2, height / 2);\n\n    this.draw = function(originChartData, colorsData) {\n      var chartData = [];\n      if (!originChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n\n      chartData = originChartData;\n      var largest = chartData[0];\n      var rest = chartData.slice(1);\n\n\n      rest.push(largest);\n      chartData = rest;\n\n      var partyColorByName = {};\n\n      var partyColorsData = colorsData;\n      if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n          partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n          partyColorByName[edge.node.name] = edge.node.colour;\n          })\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getTooltipText(d, i) {\n          return d.name;\n      }\n\n      var totalSeats = 0;\n      for (var i = 0; i < chartData.length; i ++) {\n        totalSeats += chartData[i].seats;\n      }\n\n      function pythonConvertedCode(totalSeats, mainSvg) {\n        var Totals=[\n              3, 15, 33, 61, 95, 138, 189, 247, 313, 388, 469, 559, 657, 762, 876, 997,\n              1126, 1263, 1408, 1560, 1722, 1889, 2066, 2250, 2442, 2641, 2850, 3064, 3289, 3519,\n              3759, 4005, 4261, 4522, 4794, 5071, 5358, 5652, 5953, 6263, 6581, 6906, 7239, 7581,\n              7929, 8287, 8650, 9024, 9404, 9793, 10187, 10594, 11003, 11425, 11850, 12288, 12729,\n              13183, 13638, 14109, 14580, 15066, 15553, 16055, 16557, 17075, 17592, 18126, 18660,\n              19208, 19758, 20323, 20888, 21468, 22050, 22645, 23243, 23853, 24467, 25094, 25723,\n              26364, 27011, 27667, 28329, 29001, 29679, 30367, 31061\n        ]\n    \n        if (totalSeats > Totals[Totals.length-1]){\n            console.error(\"total seats >\", Totals[Totals.length-1]);\n        }\n    \n        if (totalSeats < 1) {\n          console.error(\"total seats < 1\");\n        }\n        var rows;\n        var radius;\n        var poslist;\n        var J, R, angle;\n          // Figure out how many rows are needed:\n          for (var i = 0; i < Totals.length; i++) {\n              if (Totals[i] >= totalSeats) {\n                  rows = i + 1;\n                  break\n              }\n          }\n          // Maximum radius of spot is 0.5/rows; leave a bit of space.\n          radius = 0.4/rows;\n    \n          // Create list of centre spots\n          poslist = []\n\n          for (var i = 1; i < rows; i ++) {\n            // Each row can contain pi/(2asin(2/(3n+4i-2))) spots, where n is the number of rows and i is the number of the current row.\n            J = parseInt((totalSeats)/Totals[rows-1]*Math.PI/(2*Math.asin(2.0/(3.0*rows+4.0*i-2.0))));\n            // The radius of the ith row in an N-row diagram (Ri) is (3*N+4*i-2)/(4*N)\n            R = (3.0*rows+4.0*i-2.0)/(4.0*rows);\n            if (J === 1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n            } else {\n              for (var j = 0; j < J; j ++){\n                // The angle to a spot is n.(pi-2sin(r/Ri))/(Ni-1)+sin(r/Ri) where Ni is the number in the arc\n                // x=R.cos(theta) + 1.75\n                // y=R.sin(theta)\n                angle = (j)*(Math.PI-2.0*Math.sin(radius/R))/(J-1.0)+Math.sin(radius/R);\n                poslist.push({\n                  angle,\n                  x: R*Math.cos(angle)+1.75,\n                  y: R*Math.sin(angle)\n                });\n              }\n            }\n          }\n          J=totalSeats-poslist.length\n          R=(7.0*rows-2.0)/(4.0*rows)\n          if (J===1) {\n              poslist.push({\n                angle: Math.PI/2.0,\n                x: 1.75*R,\n                y: R\n              })\n          }\n          else {\n              for (var j = 0; j < J; j ++) {\n                  angle=(j)*(Math.PI-2.0*Math.sin(radius/R))/((J)-1.0)+Math.sin(radius/R)\n                  poslist.push({\n                    angle,\n                    x: R*Math.cos(angle)+1.75,\n                    y: R*Math.sin(angle)\n                  })\n              }\n          }\n\n          poslist.sort(function(a,b) {\n            function value(x) {\n              return x.angle - Math.PI/2;\n            }\n            return value(b) - value(a);\n          })\n\n          function onMouseMove(svg, i){\n            svg\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltipDiv.html(getTooltipText(chartData[i], i))\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n          }\n          function onMouseOut(svg) {\n            svg\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n          }\n          \n          mainSvg.append('text')\n            .attr('x', 175)\n            .attr('y', 175)\n            .attr('style', \"font-size:36px;font-weight:bold;text-align:center;text-anchor:middle;font-family:sans-serif\")\n            .text(totalSeats);\n\n          var Counter=0 //How many spots have we drawn?\n          for (var i = 0; i < chartData.length; i ++){\n            //Make each party's blocks an svg group\n            var partySvg = mainSvg.append('g')\n              .attr(\"fill\", getFillColorFromPartyName(chartData[i].partyInfo.name, i))\n              .attr(\"id\", chartData[i].name);\n            \n            partySvg.on(\"mousemove\", onMouseMove.bind(this, partySvg, i))\t\t\t\t\t\n              .on(\"mouseout\", onMouseOut.bind(this, partySvg))\n            \n            for (var j = 0; j < chartData[i].seats; j++, Counter++) {\n              partySvg.append('circle')\n                .attr('cx', poslist[Counter].x*100.0+5.0)\n                .attr('cy', 100.0*(1.75-poslist[Counter].y)+5.0)\n                .attr('r', radius*100.0)\n            }\n          }\n      }\n      pythonConvertedCode(totalSeats, mainSvg);\n\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./horseshoe.css\";\nimport {Chart} from \"../SeatHorseShoeChart/d3horseshoe\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getSeatsData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseSeatsData,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Race For Seats HorseShoe Chart',\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass HorseShoeChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 8\n      }\n\n      fetchDataFromOBJ(this.state, props);\n      this.state[\"numParties\"] = 100;\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      if (this.has_drawn === undefined) {\n        this.draw(this.getContainer(), this.state)\n        this.has_drawn = true;\n      } else {\n        // Hack to prevent drawing horseshoe twice\n        this.has_drawn = undefined;\n      }\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID !== this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-horseshoe-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n      return (\n          <div className={className(\"horseshoechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID !== -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsData(props);\n      var dataLoaders = [seatsDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsData(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default HorseShoeChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, createErrorText, PartyColours} from \"../../utils\";\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n    options = {};\n  }\n\n  var showPoints = options.showPoints || true;\n  var pointRadius = options.pointRadius || 2;\n  var showPointLabels = options.showPointLabels || false;\n  var pointLabelOffset = options.pointLabelOffset || 4;\n  var showCurrentLine = options.showCurrentLine || true;\n\n  width = 600;\n  height = 400;\n\n  var margin = {\n      top: 20,\n      right: 20,\n      bottom: 50,\n      left: 40\n  }\n\n  var canvas = {\n    top : margin.top,\n    bottom : height - margin.bottom - margin.top,\n    left : margin.left,\n    right : width - margin.right - margin.left\n  }\n\n  //var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n  var svg = createSvg(container, width, height);\n\n  var tooltipDiv = createTooltip(className);\n\n  var mainSvg = svg\n    .append(\"g\")\n\n  var errorText = createErrorText(svg, width / 2, height / 2);\n\n  this.draw = function(originChartData, colorsData, minMaxData) {\n    var chartData = [];\n    var getPartyColour = PartyColours(colorsData);\n\n    if (!originChartData) {\n      errorText.text(\"chart data is not available\");\n      return;\n    }\n\n    if (!minMaxData.minX) {\n      minMaxData.minX = 0;\n    }\n    if (!minMaxData.maxX) {\n      var maxValue = d3.max(originChartData.map(partyInfo => {\n        return d3.max(partyInfo.data.map(it => it.x));\n      }));\n\n      minMaxData.maxX = Math.min(100, maxValue * 3);\n    }\n\n    var x = d3.scaleLinear()\n      .domain([minMaxData.minX, minMaxData.maxX])\n      .range([canvas.left, canvas.right]);\n\n    var y = d3.scaleLinear()\n      .domain([0, 100])\n      .range([canvas.bottom, canvas.top]);\n\n    var radiusScale = d3.scaleLinear()\n      .domain([0, 100])\n      .range([0, 100]);\n    \n    mainSvg.selectAll(\"g\").remove();\n\n    var axisContainer = mainSvg\n      .append(\"g\")\n        .classed(\"axes\", true)\n\n    axisContainer.append(\"g\")\n      .attr(\"transform\", \"translate(0, \" + canvas.bottom + \")\")\n      .classed(\"x-axis\", true)\n      .call(d3.axisBottom(x));\n\n    axisContainer.append(\"g\")\n      .attr(\"transform\", \"translate(\" + canvas.left + \", 0)\")\n      .classed(\"y-axis\", true)\n      .call(d3.axisLeft(y));\n\n    axisContainer.append(\"text\")\n      .text(\"% VDs declared\")\n      .attr(\"transform\", \"translate(\" + x(50) + \", \" + y(-10) + \")\")\n      .style(\"fill\", \"white\")\n      .attr(\"text-anchor\", \"middle\")\n      .classed(\"x-axis-text\", \"true\")\n      .classed(\"axis-text\", \"true\")\n\n    axisContainer.append(\"text\")\n      .text(\"% Party support\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(-90) translate(-180, 10)\")\n      .style(\"fill\", \"white\")\n      .classed(\"y-axis-text\", \"true\")\n      .classed(\"axis-text\", \"true\")\n\n    var data = null;\n    var party = null;\n    var lineContainer = null;\n    var legendContainer = null;\n    var eventCaptureContainer = null;\n    var cleaned_party_name = null;\n    var valueline = null;\n\n    originChartData.map(function(party) {\n      valueline = d3.line()\n        .x(function(d) { return x(d.x); })\n        .y(function(d) { return y(d.y); });\n\n      data = party.data;\n      var colour = getPartyColour(party.name);\n\n      lineContainer = mainSvg.append(\"g\")\n        .classed(\"line-container\", true)\n        .classed(party.cleaned_name, true);\n      \n      legendContainer = mainSvg.append(\"g\")\n        .classed(\"ledgends\", true)\n\n      eventCaptureContainer = mainSvg.append(\"g\")\n        .classed(\"event-capture-container\", true)\n        .classed(party.cleaned_name, true);\n\n      lineContainer.append(\"path\")\n        .data([data])\n          .attr(\"class\", \"line\")\n          .attr(\"d\", valueline)\n          .style(\"stroke\", colour)\n\n      if (showPoints) {\n        lineContainer.selectAll(\"circle\")\n          .data(data)\n          .enter()\n          .append(\"circle\")\n            .attr(\"cx\", function(d) { return x(d.x) })\n            .attr(\"cy\", function(d) { return y(d.y) })\n            .attr(\"r\", function(d) { return radiusScale(pointRadius) })\n            .style(\"fill\", colour)\n            .classed(\"graph-points\", true)\n        \n        eventCaptureContainer.selectAll(\"circle\")\n          .data(data)\n          .enter()\n          .append(\"circle\")\n            .attr(\"cx\", function(d) { return x(d.x) })\n            .attr(\"cy\", function(d) { return y(d.y) })\n            .attr(\"r\", function(d) { return radiusScale(pointRadius) * 3 })\n            .style(\"fill\", \"transparent\")\n            .classed(\"graph-points\", true)\n            .on(\"mousemove\", function(d, i) {\t\t\n              console.log(\"tooltip mousemove\");\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              tooltipDiv.html(d.y.toFixed(2) + \"%\")\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n              console.log(\"tooltip mouseout\");\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n            })\n      }\n\n      if (showPointLabels) {\n        lineContainer.selectAll(\"text\")\n          .data(data)\n          .enter()\n          .append(\"text\")\n            .text(function(d) { return d.y})\n            .attr(\"transform\", function(d) {\n              return \"translate(\" +  x(d.x - radiusScale(pointRadius / 2)) + \", \" + y(d.y + pointLabelOffset) + \")\"\n            })\n            .classed(\"graph-labels\", true)\n      }\n\n      // if (options.showLegend) \n      {\n        var parties = [];\n        var partyAbbrs = [];\n        var partyIecIds = [];\n        originChartData.forEach((partyInfo) => {\n          var party = partyInfo.name;\n          if (partyIecIds.indexOf(partyInfo.iecId) === -1 && partyInfo.iecId) {\n              parties.push(party);\n              partyAbbrs.push(partyInfo.abbreviation)\n              partyIecIds.push(partyInfo.iecId);\n          }\n        })\n        \n        function getLegendXY(i) {\n          \n          var xydata = [30 + (i%5)*100, height - 30 + parseInt(i/5) * 40];\n          if (parties.length < 6) {\n            xydata[0] += 100 * ( 6 - parties.length) / 2;\n          }\n          return xydata;\n        }\n        legendContainer.selectAll(`.${className(\"legend\")}`).remove();\n        var legends = legendContainer.selectAll(`.${className(\"legend\")}`)\n            .data(parties)\n            .enter()\n            .append('g')\n            .attr(\"class\", className(\"legend\"))\n            .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n        legends\n            .append(\"rect\")\n            .attr('width', 10)\n            .attr('height', 10)\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr(\"fill\", (party, i) => {\n                return getPartyColour(party);\n            })\n        legends.append('text')\n            .attr('x', 30)\n            .attr('y', 10)\n            .style('font-size', '12px')\n            .text((party, idx) => partyAbbrs[idx])\n      }\n\n    })\n\n\n\n\n\n     /*\n\n      function getTooltipText(d, i) {\n          return d.name;\n      }\n      */\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./voteprediction.css\";\nimport {Chart} from \"../VotePredictionLineChart/d3voteprediction\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesPredictionData,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesPredictionData,\n  parseCSIRTurnoutTimestamp,\n  parseCSIRMinMax,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\nvar chartOptions = {\n  chartType: 'Votes prediction line charts',\n};\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nfunction formatDate(d) {\n  var hr = d.getHours();\n  var min = d.getMinutes();\n  if (min < 10) {\n      min = \"0\" + min;\n  }\n\n  var date = d.getDate();\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var month = months[d.getMonth()];\n  var year = d.getFullYear();\n\n  var currentTimeText = hr + \":\" + min + \" on \" + date + \" \" + month + \" \" + year;\n  return currentTimeText;\n}\n\nvar partyColorsData;\n\nclass VotePredictionLineChart extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        numParties: 100,\n        electionType: \"national\",\n        eventDescription: \"2019 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 8\n      }\n      this._isMounted = false;\n\n      fetchDataFromOBJ(this.state, props);\n      this.state[\"numParties\"] = 100;\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      this._isMounted = true;\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state);\n    }\n\n    componentWillUnmount() {\n      this._isMounted = false;\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n\n      // TODO not sure what to change race-for-seats-horseshoe.... to\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-horseshoe-chart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      if (this._isMounted) {\n        var newState = event.detail;\n        if (this.chart)\n          this.chart.destroy();\n        this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n        this.setState(newState)\n      }\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor,\n        componentID\n      } = this.state;\n\n      var currentTimeText = formatDate(new Date());\n\n      return (\n          <div className={className(\"votepredictionlinechart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {\n                componentID != -1000 && <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div>\n            }\n            <div className={cn(\"vote-prediction-title\")}>\n              <div className={cn(\"projected-turnout\")}> \n                Projected turnout: <span ref=\"projectedTurnout\">10%</span>\n              </div>\n              <div className={cn(\"prediction-time\")}> \n                Predictions at <span ref=\"lastTimestamp\">{currentTimeText}</span>\n              </div>\n            </div>\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n              <div className={cn(\"CSIR-bottom-label\")}><b>CSIR's election prediction  model</b><br/>The CSIR produces predictions of the final results of the election based on a statistical model. The model can provide scientific predictions even if only a small number of voting districts have been declared and therefore can give a reliable early indication of what the final percentages for each party and the voter turnout rates would be.</div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var predictionDataLoader = getVotesPredictionData(props);\n      var dataLoaders = [predictionDataLoader];\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var predictionData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, predictionData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var minMaxData = parseCSIRMinMax(data);\n        var chartData = parseVotesPredictionData(data, props);\n        var {\n          turnout,\n          timestamp\n        } = parseCSIRTurnoutTimestamp(data, props);\n        if (this.refs.projectedTurnout && this.refs.projectedTurnout.innerHTML) {\n          this.refs.projectedTurnout.innerHTML = turnout + \"%\";\n        }\n        if (this.refs.lastTimestamp && this.refs.lastTimestamp.innerHTML) {\n          var lastTimeStampText = formatDate(new Date(timestamp));\n          console.log(\"timestamp\", new Date(timestamp), timestamp, lastTimeStampText);\n          this.refs.lastTimestamp.innerHTML = lastTimeStampText;\n        }\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData, minMaxData);\n    }\n}\n\nexport default VotePredictionLineChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, createSvg, formatPartyName, formatClassNameFromString} from \"../../utils\";\nimport config from \"../../config\"\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 250;\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 50;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    // TODO not sure what options.viewBox is below - don't see it being used anywhere\n    /*\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", options.viewBox || (\"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset)))\n        .classed(\"svg-content\", true);\n    */\n\n    var svg = createSvg(container, width + XaxisOffset, height + YaxisOffset);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n    svg.selectAll(\".topLabel\").remove();\n    svg.append(\"text\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n    if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n    } else {\n        errorText.text(\"\");\n    }\n    var partyColorByName = {};\n    var partyAbbrByName = {};\n    if (colorsData && colorsData[\"data\"][\"allParties\"][\"edges\"]) {\n      colorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n        partyColorByName[edge.node.name] = edge.node.colour;\n        partyAbbrByName[edge.node.name] = edge.node.abbreviation;\n      })\n    }   \n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(groupChartData.map(item => item.eventDescription));\n\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = Math.min(100, d3.max(groupChartData.map(item => d3.max(item.data, function(d) { return parseFloat(options.yValue(d)); }))) * 1.5);\n      }\n      y.domain(minMaxY);\n\n      var availableParties = \n \n      svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n      svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(4)\n        .tickFormat(function(d) { return options.yValueFormat(d); })\n      )\n\n      svg.selectAll(`.bar-group`).remove();\n      var groupSvgs = svg.selectAll(`.bar-group`).data(groupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.eventDescription)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.eventDescription) + x.bandwidth()*1/20}, 0)`);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n      \n      for (var i = 0; i < groupChartData.length; i ++) {\n        var eventDescription = groupChartData[i].eventDescription;\n        var chartData = groupChartData[i].data;\n\n        var subX = d3.scaleBand()\n          .rangeRound([0, x.bandwidth()*9/10])\n          .domain(chartData.map(function (d) {\n            return d.name;\n          }));\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(eventDescription)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n    \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", function (d, i) {\n              return subX(d.name)+subX.bandwidth()/4;\n            })\n            .attr(\"width\", subX.bandwidth()*1/2)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d)));\n            })\n            .attr(\"height\", function (d) {\n              return height - y(Number(options.yValue(d)));\n            })\n\n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return options.yValueFormat(options.yValue(d));\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d))) - 5;\n            })\n          \n          var parties = [];\n          var partyIecIds = [];\n          groupChartData.forEach(({data: chartData}) => {\n            chartData.forEach(({partyInfo}) => {\n              var party = partyInfo.name;\n              if (partyIecIds.indexOf(partyInfo.iecId) == -1) {\n                  parties.push(party);\n                  partyIecIds.push(partyInfo.iecId);\n              }\n            })\n          })\n          \n          function getLegendXY(i) {\n              return [XaxisOffset + (i%5)*100, height + 30 + parseInt(i/5) * 40];\n          }\n          svg.selectAll(`.${className(\"legend\")}`).remove();\n          var legends = svg.selectAll(`.${className(\"legend\")}`)\n              .data(parties)\n              .enter()\n              .append('g')\n              .attr(\"class\", className(\"legend\"))\n              .attr('transform', (d, i) => \"translate(\" + getLegendXY(i) + \")\")\n          legends\n              .append(\"rect\")\n              .attr('width', 10)\n              .attr('height', 10)\n              .attr('x', 0)\n              .attr('y', 0)\n              .attr(\"fill\", (party, i) => {\n                  return getFillColorFromPartyName(party);\n              })\n          legends.append('text')\n              .attr('x', 30)\n              .attr('y', 10)\n              .style('font-size', '12px')\n              .text(party => partyAbbrByName[party])\n      }\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../SplitNatProv/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForAllEvents,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesDataForAllEvents,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  dynamicYAxisFromValues: false\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        numPartiesSplitNatProv: 3,\n        eventDescriptionsSplitNatProv: [\n          // \"National Elections 1999\",\n          // \"Provincial Elections 1999\",\n          // \"14 Apr 2004 National Election\",\n          // \"14 Apr 2004 Provincial Election\",\n          \"22 Apr 2009 National Election\",\n          \"22 Apr 2009 Provincial Election\",\n          \"2014 National Election\",\n          \"2014 Provincial Election\",\n          // \"2019 NATIONAL ELECTION\",\n          // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"province\",\n        provinceName: \"Western Cape\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 18\n      }\n\n      console.log(\"SplitNatProv state and props\", this.state, props)\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForAllEvents(props);\n      var dataLoaders = [votesDataLoader];\n\n      chartOptions.topLabel = `${getRegionName(props)} Race for Votes - Split (Nat/Prov)`;\n      if (this.state.componentID == -1000) {\n        chartOptions.topLabel = ``;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesDataForAllEvents(data, props);\n        // console.log(\"SplitNatProvProps\", props);\n        // console.log(\"SplitNatProvData\", data);\n        // console.log(\"SplitNatProvParsed\", chartData);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport MetisMenu from 'react-metismenu';\n\nimport config from '../../config'\nimport styles from \"./navbar.css\";\nimport events from \"../../events\";\nimport {\n    getProvincesData,\n    getMetrosData\n} from \"../../api\";\n\nimport {\n    triggerCustomEvent,\n    fetchDataFromOBJ\n} from \"../../utils\";\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cssPrefix(originName) {\n    return config.CSS_PREFIX+originName;\n}\n\nvar provincesData = getProvincesData();\nvar metrosData = getMetrosData();\n\nclass CustomLink extends React.Component {\n    constructor() {\n      super();\n  \n      this.onClick = this.onClick.bind(this);\n    }\n  \n    onClick(e) {\n      if (this.props.hasSubMenu) this.props.toggleSubMenu(e);\n      else {\n        this.props.activateMe({\n          newLocation: this.props.to,\n          selectedMenuLabel: this.props.label,\n        });\n      }\n    }\n  \n    render() {\n      if (this.props.hasSubMenu) {\n        return (\n          <div className=\"metismenu-link\" onClick={this.onClick}>\n            {this.props.children}\n          </div>\n      )} else {\n        return (\n          <div className=\"metismenu-link metismenu-end\" onClick={this.onClick}>\n            {this.props.children}\n          </div>\n        );\n      }\n    }\n  };\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventDescription: \"2019 National Election\",\n            nationalEventDescription: \"2019 National Election\",\n            provincialEventDescription: \"2019 Provincial Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"\",\n            comp: \"Race for Votes\",\n            activeLinkId: ''\n        }\n\n        fetchDataFromOBJ(this.state, props);\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        this.handleNavBarSelection = this.handleNavBarSelection.bind(this);\n    }\n\n    componentDidMount() {\n        if(!document.getElementById('navbarcss')) {\n            var link = document.createElement('link');\n            link.id = 'navbarcss';\n            link.rel = 'stylesheet';\n            link.href = config.DOMAIN + '/navbar.css';\n            document.head.appendChild(link);\n        }\n\n        if(!document.getElementById('font-awesome')) {\n            var link = document.createElement('link');\n            link.id = 'font-awesome';\n            link.rel = 'stylesheet';\n            link.href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\";\n            document.head.appendChild(link);\n        }\n\n        this.refs.navbar.addEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentWillUnmount() {\n        this.refs.navbar.removeEventListener(\"click\", this.handleNavBarSelection);\n    }\n\n    componentDidUpdate() {\n    }\n\n    handleNavBarSelection(e) {\n        if (e.target.className.indexOf(\"metismenu-link\") == -1) {\n            return;\n        }\n        var iconClass = e.target.childNodes[0].className;\n        var classList = iconClass.split(' ');\n        var lastClass = classList[classList.length - 1];\n        console.log(\"handleNavBarSelection\", lastClass);\n        var passInfo = lastClass.split('-');\n        var enableMap = true;\n        var enableTurnoutProgressSpoilt = true;\n\n        var eventDescription, electionType, regionType, selectionData = {}, chartType = \"\";\n        var activeLinkId = passInfo.slice(1, passInfo.length).join('-');\n\n        if (passInfo[1] == '1') {\n            eventDescription = this.state.nationalEventDescription;\n            regionType = \"national\";\n            if (passInfo[2] == '1') {\n                switch (passInfo[3]) {\n                    case '1':\n                        chartType = \"votes-default\";\n                        break;\n                    case '2':\n                        chartType = \"votes-comparisons\";\n                        enableMap = false;\n                        break;\n                    case '3':\n                        chartType = \"votes-predictions\";\n                        enableMap = false;\n                        enableTurnoutProgressSpoilt = false;\n                        // if (passInfo[4] > 0) {\n                        //     regionType = \"province\";\n                        //     selectionData = provincesData[passInfo[4]-1];\n                        // }\n                        break;\n                    case '4':\n                        chartType = \"votes-progress\";\n                        break;\n                    case '5':\n                        chartType = \"votes-turnout\";\n                        break;\n                    case '6':\n                        chartType = \"votes-myvd\";\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[2] == '2') {\n                switch (passInfo[3]) {\n                    case '1':\n                        chartType = \"seats-default\";\n                        enableMap = false;\n                        break;\n                    case '2':\n                        chartType = \"seats-comparisons\";\n                        enableMap = false;\n                        break;\n                    case '3':\n                        chartType = \"seats-electeds\";\n                        break;\n                    case '4':\n                        chartType = \"seats-women\";\n                        break;\n                    case '5':\n                        chartType = \"seats-age\";\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[3] == '4') {\n                // Main page for National Assembly\n                chartType = \"votes-default\";\n            } else {\n                return;\n            }\n        } else if (passInfo[1] == '2') {\n            eventDescription = this.state.provincialEventDescription;\n            regionType = \"province\";\n            selectionData = provincesData[passInfo[2]];\n            if (passInfo[3] == '1') {\n                switch (passInfo[4]) {\n                    case '1':\n                        chartType = \"votes-default\"; // done\n                        break;\n                    case '2':\n                        chartType = \"votes-comparisons\";\n                        enableMap = false;\n                        break;\n                    case '3':\n                        chartType = \"votes-progress\"; // done\n                        break;\n                    case '4':\n                        chartType = \"votes-turnout\";// done\n                        break;\n                    case '5':\n                        chartType = \"votes-split\";\n                        break;\n                    case '6':\n                        chartType = \"votes-predictions\";\n                        enableMap = false;\n                        enableTurnoutProgressSpoilt = false;\n                        break;\n                    default:\n                        return;\n                }\n            } else if (passInfo[3] == '2') {\n                switch (passInfo[4]) {\n                    case '1':\n                        chartType = \"seats-default\"; // done\n                        enableMap = false;\n                        break;\n                    case '2':\n                        chartType = \"seats-comparisons\";\n                        enableMap = false;\n                        break;\n                    case '3':\n                        chartType = \"seats-electeds\";\n                        break;\n                    case '4':\n                        chartType = \"seats-women\";\n                        break;\n                    case '5':\n                        chartType = \"seats-age\";\n                        break;\n                    default:\n                        return;\n                }\n\n            } else if (passInfo[3] == '4') {\n                // Main page for National Legislature\n                regionType = \"national\";\n                chartType = \"votes-default\";\n            } else {\n                return;\n            }\n        } else if (passInfo[1] == '3') { // metros\n            eventDescription = this.state.nationalEventDescription;\n            regionType = \"municipality\"\n            selectionData = metrosData[passInfo[2]];\n            chartType = \"votes-default-metro\";\n        } else {\n            return;\n        }\n\n        if (!chartType)\n            return;\n\n        if (eventDescription)\n            if (eventDescription.toLowerCase().indexOf(\"provincial\") >= 0) {\n                electionType = \"provincial\"\n            }\n        else {\n            electionType = \"national\"\n        }\n\n        e.preventDefault();\n        var newState;\n        if (regionType == \"national\") {\n            newState = {\n                regionType: regionType\n            };\n            // if (this.state.regionType == newState.regionType \n            //     && this.state.comp == chartType)\n            //     return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            // if (this.state.regionType == newState.regionType \n            //     && this.state.provinceName == newState.provinceName \n            //     && this.state.comp == chartType)\n            //     return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            // if (this.state.regionType == newState.regionType \n            //     && this.state.provinceName == newState.provinceName\n            //     && this.state.muniName == newState.muniName\n            //     && this.state.comp == chartType)\n            //     return;\n        }\n        newState.eventDescription = eventDescription;\n        newState.electionType = electionType\n        newState.comp = chartType;\n        newState.enableMap = enableMap;\n        newState.enableTurnoutProgressSpoilt = enableTurnoutProgressSpoilt;\n\n        console.log(\"newState\", newState);\n\n        if (newState.comp == \"votes-myvd\") {\n            newState.regionType = \"municipality-vd\";\n            newState.iecId = \"\";\n        }\n\n        if (newState.comp == \"seats-electeds\" || newState.comp == \"seats-women\" || newState.comp == \"seats-age\") {\n            triggerCustomEvent(events.SEATS_ELECTEDS_EVENT, newState);\n            return;\n        }\n\n        triggerCustomEvent(events.QUICK_RESULTS_PREVIEW, newState);\n        // triggerCustomEvent(events.REGION_CHANGE, newState);\n        // triggerCustomEvent(events.MAP_PREVIEW, newState);\n\n        newState.activeLinkId = activeLinkId;\n        this.setState(newState);\n    }\n      \n    render () {\n        var content = [\n            {\n                label: 'National Assembly',\n                icon: `1-3-4-1`,\n                content: [\n                    {\n                        label: \"Race for votes\",\n                        content: [\n                            {\n                                icon: `1-1-1`,\n                                label: `National assembly`,\n                                to: `1-1-1`,\n                            },\n                            {\n                                icon: `1-1-2`,\n                                label: `Comparisons`,\n                                to: `1-1-2`,\n                            },\n                            {\n                                icon: `1-1-3`,\n                                label: `CSIR predictions`,\n                                to: `1-1-3`,\n                                // content: [\n                                //     {\n                                //         icon: `1-1-3-0`,\n                                //         label: `National Assembly`,\n                                //         to: `1-1-3-0`,\n                                //     },\n                                //     ...provincesData.map((province, i) => {\n                                //         return {\n                                //             icon: `1-1-3-${i+1}`,\n                                //             label: province.name,\n                                //             to: `1-1-3-${i+1}`,\n                                //         }\n                                //     })\n                                // ]\n                            },\n                            {\n                                icon: `1-1-4`,\n                                label: `Counting progress`,\n                                to: `1-1-4`,\n                            },\n                            {\n                                icon: `1-1-5`,\n                                label: `Turnout`,\n                                to: `1-1-5`,\n                            },\n                            {\n                                icon: `1-1-6`,\n                                label: `My voting District`,\n                                to: `1-1-6`,\n                            },\n                            {\n                                label: `Metros`,\n                                icon: `3-2`, // Setting default metros view to JHB\n                                content: metrosData.map((metro, i) => {\n                                    return {\n                                        icon: `3-${i}`,\n                                        label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                                        to: `3-${i}`,\n                                    }\n                                })\n                            },\n                        ]\n                    },\n                    {\n                        label: \"Race for seats\",\n                        content: [\n                            {\n                                icon: `1-2-1`,\n                                label: `National assembly`,\n                                to: `1-2-1`\n                            },\n                            {\n                                icon: `1-2-2`,\n                                label: `Comparisons`,\n                                to: `1-2-2`,\n                            },\n                            // {\n                            //     icon: `1-2-3`,\n                            //     label: `Electeds`,\n                            //     to: `1-2-3`,\n                            // },\n                            // {\n                            //     icon: `1-2-4`,\n                            //     label: `Women`,\n                            //     to: `1-2-4`,\n                            // },\n                            // {\n                            //     icon: `1-2-5`,\n                            //     label: `Age`,\n                            //     to: `1-2-5`,\n                            // }\n                        ]\n                    }\n                ]\n            },\n            {\n                label: 'Provincial Legislature',\n                icon: `2-3-4-1`,\n                content: provincesData.map((province, i) => {\n                    return {\n                        label: province.name,\n                        content: [\n                            {\n                                label: \"Race for votes\",\n                                content: [\n                                    {\n                                        icon: `2-${i}-1-1`,\n                                        label: `Provincial legislature`,\n                                        to: `2-${i}-1-1`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-2`,\n                                        label: `Comparisons`,\n                                        to: `2-${i}-1-2`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-3`,\n                                        label: `Counting progress`,\n                                        to: `2-${i}-1-3`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-4`,\n                                        label: `Turnout`,\n                                        to: `2-${i}-1-4`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-5`,\n                                        label: `Split (Nat/Prov)`,\n                                        to: `2-${i}-1-5`,\n                                    },\n                                    {\n                                        icon: `2-${i}-1-6`,\n                                        label: `CSIR Predictions`,\n                                        to: `2-${i}-1-6`,\n                                    },\n                                ]\n                            },\n                            {\n                                label: \"Race for seats\",\n                                content: [\n                                    {\n                                        icon: `2-${i}-2-1`,\n                                        label: `Provincial legislature`,\n                                        to: `2-${i}-2-1`,\n                                    },\n                                    {\n                                        icon: `2-${i}-2-2`,\n                                        label: `Comparisons`,\n                                        to: `2-${i}-2-2`,\n                                    },\n                                    // {\n                                    //     icon: `2-${i}-2-3`,\n                                    //     label: `Electeds`,\n                                    //     to: `2-${i}-2-3`,\n                                    // },\n                                    // {\n                                    //     icon: `2-${i}-2-4`,\n                                    //     label: `Women`,\n                                    //     to: `2-${i}-2-4`,\n                                    // },\n                                    // {\n                                    //     icon: `2-${i}-2-5`,\n                                    //     label: `Age`,\n                                    //     to: `2-${i}-2-5`,\n                                    // }\n                                ]\n                            }\n                        ]\n                    }\n                })\n            },\n            // {\n            //     icon: '',\n            //     label: 'Metros',\n                // content: metrosData.map((metro, i) => {\n                //     return {\n                //         icon: `4-${i}`,\n                //         label: metro.muniName.split(\"-\")[1].split(\"[\")[0],\n                //         to: `4-${i}`,\n                //         // content: toShowCharts.map((toshowchart, chartIdx) => {\n                //         //     return {\n                //         //         icon: `4-${i}-${chartIdx}`,\n                //         //         label: toshowchart,\n                //         //         to: `4-${i}-${chartIdx}`,\n                //         //     }\n                //         // })\n                //     }\n                // })\n            // }\n        ];\n\n        \n        return (\n            <div className={[className(cssPrefix(\"menu-widget\")), cssPrefix(\"menu-widget\")].join(\" \")} ref=\"navbar\">\n                <MetisMenu activeLinkId={this.state.activeLinkId} content={content} LinkComponent={CustomLink}/>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport styles from \"./quickResultsWidget.css\";\n\nimport config from '../../config'\nimport events from \"../../events\";\n\nimport BarChart from '../BarChart/barchart';\n\nimport ProgressVotesPieChart from '../ProgVotesCountPiechart/piechart';\n\nimport RaceForSeatDonut from '../RaceForSeatDonut/piechart';\nimport VoteCompBarchart from '../VoteCompBarchart/barchart';\nimport SeatCompBarchart from '../SeatCompBarchart/barchart';\nimport SeatHorseShoeChart from \"../SeatHorseShoeChart/horseshoe\";\nimport VotePredictionLineChart from \"../VotePredictionLineChart/voteprediction\";\n\nimport SpoiltBarChart from '../SpoiltBarchart/barchart';\nimport SplitNatProvChart from '../SplitNatProv/barchart';\n\nimport TurnoutBarchart from '../TurnoutBarchart/barchart';\nimport TurnoutMap from '../TurnoutMap/map';\n\nimport NavBar from '../NavBar/navbar';\nimport Map from '../Map/map';\n\nimport {saveAs} from \"file-saver\";\n\nimport {\n    getSpoiltData,\n    getTurnoutDataForOneEvent,\n    getProgressVotesCount,\n    getVotesDataM,\n    getSeatsData\n} from \"../../api\";\n\nimport {\n    getRegionName,\n    getRegionName2,\n    getRegionName4,\n\n    getNationalProvincialStr,\n    getNationalProvincialStr2,\n    getNationalProvincialStr3,\n    getNationalProvincialStr4,\n\n    triggerCustomEvent,\n    fetchDataFromOBJ,\n    handleRegionChange,\n\n    parseSpoiltVotesData,\n    parseTurnoutDataForOneEvent,\n    parseProgressVotesCount,\n    parseVotesData,\n    parseSeatsData,\n\n    getSeatsCount\n} from \"../../utils\";\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n    return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n    return className(config.CSS_PREFIX + originName);\n}\n\nclass QuickResultsWidget extends Component {\n    constructor(props) {\n        super(props);\n        this._isMounted = false;\n        this.state = {\n            numParties: 5,\n            electionType: \"national\",\n            eventDescription: \"2019 National Election\",\n            nationalEventDescription: \"2019 National Election\",\n            provincialEventDescription: \"2019 Provincial Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            iecId: \"65010035\", // regionIecId\n            comp: \"votes-default\",\n            stylesheetFor: \"web\",\n            componentID: 5,\n            enableBarChart: true,\n            enableMap: true,\n            enableTurnoutProgressSpoilt: true,\n\n            partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n            partyIecIds: [null, null, null, null],        \n            eventDescriptions: {\n                national : [\n                    \"2019 NATIONAL ELECTION\",\n                    \"2014 National Election\",\n                    \"22 Apr 2009 National Election\",\n                    \"14 Apr 2004 National Election\",\n                    //\"National Elections 1999\",\n                ],\n                provincial : [\n                    // \"Provincial Elections 1999\",\n                    \"2019 PROVINCIAL ELECTION\",\n                    \"2014 Provincial Election\",\n                    \"22 Apr 2009 Provincial Election\",\n                    \"14 Apr 2004 Provincial Election\",\n                ]\n            },\n            eventDescriptionsSplitNatProv: [\n                // \"National Elections 1999\",\n                // \"Provincial Elections 1999\",\n                // \"14 Apr 2004 National Election\",\n                // \"14 Apr 2004 Provincial Election\",\n                \"22 Apr 2009 National Election\",\n                \"22 Apr 2009 Provincial Election\",\n                \"2014 National Election\",\n                \"2014 Provincial Election\",\n                // \"2019 NATIONAL ELECTION\",\n                // \"2019 PROVINCIAL ELECTION\",\n            ],\n            currentTurnout: 0,\n            currentCountingProg: 0,\n            currentSpoiltVotes: 0\n        }\n        fetchDataFromOBJ(this.state, props);\n\n        this.refreshIntervalID = 0;\n        this.exportAsPNG = this.exportAsPNG.bind(this);\n        this.handleRegionChange = handleRegionChange.bind(this);\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        var self = this;\n        this.refreshIntervalID = setInterval(() => {\n            self.fetchCurrentResultData();\n        }, dataRefreshTime);\n\n        document.addEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.addEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n\n        document.addEventListener(events.SEATS_ELECTEDS_EVENT, this.handleSeatsElectedsEvent); // \"seats-electeds-event\"\n\n        this.fetchCurrentResultData();\n    }\n  \n    componentWillUnmount() {\n        this._isMounted = false;\n        document.removeEventListener(events.EXPORT_SUPERWIDGET_PNG, this.exportAsPNG);\n        document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n        document.removeEventListener(events.QUICK_RESULTS_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      this.fetchCurrentResultData()\n    }\n\n    handleSeatsElectedsEvent(event) {\n    }\n\n    fetchCurrentResultData() {\n        var self = this;\n        var newProps = JSON.parse(JSON.stringify(this.state));\n        var {comp, iecId} = this.state;\n\n        function dataLoadCallback(values) {\n            var spoiltData = values[0];\n            var turnoutData = values[1];\n            var progVotesData = values[2];\n\n            var parsedSpoiltData = parseSpoiltVotesData(spoiltData, newProps);\n            var parsedTurnoutData = parseTurnoutDataForOneEvent(turnoutData, newProps);\n            var parsedProgVotesData = parseProgressVotesCount(progVotesData, newProps);\n\n            var newState;\n            if (parsedTurnoutData[0] && parsedProgVotesData[0] && parsedSpoiltData[1]) {\n                newState = {            \n                    currentTurnout: parsedTurnoutData[0].percVoterTurnout,\n                    currentCountingProg: parsedProgVotesData[0].percent,\n                    currentSpoiltVotes: parsedSpoiltData[1].percent\n                };\n            } else {\n                newState = {            \n                    currentTurnout: 0,\n                    currentCountingProg: 0,\n                    currentSpoiltVotes: 0\n                };\n            }\n\n            if (comp == 'votes-comparisons') {\n                var votesData = values[3];\n                var parsedVotesData = parseVotesData(votesData, newProps);\n                newState.partyAbbrs = parsedVotesData.map(voteItem => voteItem.name);\n                newState.partyIecIds = parsedVotesData.map(voteItem => voteItem.iecId);\n            } else if (comp == 'seats-comparisons') {\n                var seatsData = values[3];\n                var parsedSeatsData = parseSeatsData(seatsData, newProps);\n                newState.partyAbbrs = parsedSeatsData.map(seatItem => seatItem.name);\n                newState.partyIecIds = parsedSeatsData.map(seatItem => seatItem.iecId);\n            }\n\n            if (newState.partyIecIds && newState.partyIecIds.join(\" \") != self.state.partyIecIds.join(\" \")) {\n                self.setState(newState);\n            } else {\n                if (self.refs.currentTurnout) {\n                    self.refs.currentTurnout.innerHTML = newState.currentTurnout + \"%\";\n                }\n                if(self.refs.currentCountingProg) {\n                    self.refs.currentCountingProg.innerHTML = newState.currentCountingProg + \"%\";\n                } \n                if (self.refs.curCountingProg && self.refs.curCountingProg.innerHTML  && self._isMounted) {\n                    console.log(\"self.refs.curCountingProg\", self.refs.curCountingProg, self._isMounted);\n                    // self.refs.curCountingProg.innerHTML = newState.currentCountingProg + \"%\";\n                }\n                if (self.refs.currentSpoiltVotes) {\n                    self.refs.currentSpoiltVotes.innerHTML = newState.currentSpoiltVotes + \"%\";\n                }\n            }\n        }\n\n        if (newProps.regionType == \"municipality-vd\" && (!iecId || !iecId.length)) {\n            self.refs.currentTurnout.innerHTML = \"0%\";\n            self.refs.currentCountingProg.innerHTML = \"0%\";\n            self.refs.currentSpoiltVotes.innerHTML = \"0%\";\n            return;\n        }\n\n        // newProps.eventDescription = \"2019_mock1\";\n        var dataLoaders = [\n            getSpoiltData(newProps), \n            getTurnoutDataForOneEvent(newProps),\n            getProgressVotesCount(newProps),\n        ];\n\n        if (comp == 'votes-comparisons') {\n            dataLoaders.push(getVotesDataM(newProps));\n        }\n        if (comp == 'seats-comparisons') {\n            dataLoaders.push(getSeatsData(newProps));\n        }\n\n        Promise.all(dataLoaders)\n            .then(dataLoadCallback)\n            .catch(error => console.error(\"catched error\", error));\n    }\n\n    exportAsPNG(event) {\n        var targetState = event.detail;\n        if (targetState.componentID != this.state.componentID)\n          return;\n        var {\n            comp\n        } = this.state;\n        var self = this;\n        var zipfileName = `quick-results-widget-${comp.replace(/\\s/gi, '-')}(${getRegionName(self.state)})`;\n        var imageLoadPromises = [];\n        if (comp == 'votes-comparisons' || comp == 'seats-comparisons') {\n            imageLoadPromises = [\n                ...this.barchartInstances.map(instance => instance.exportAsPNGUri()),\n                this.mapInstance.exportAsPNGUri()\n            ];\n        } else {\n            imageLoadPromises = [\n                this.barchartInstance.exportAsPNGUri(), \n                this.mapInstance.exportAsPNGUri()\n            ];\n        }\n        Promise.all(imageLoadPromises).then(values => {\n            var zip = new window.JSZip();\n\n            var imgs = zip.folder(zipfileName);\n            values.forEach((element, idx) => {\n                imgs.file(`image${idx+1}.png`, element, {base64: true});\n            });\n\n            zip.generateAsync({type:\"blob\"})\n            .then(function(content) {\n                saveAs(content, `${zipfileName}.zip`);\n            });\n        }).catch(error => {\n            console.error(\"export error\", error);\n        })\n    }\n\n    handlePreviewEvent(event) {\n\n      if (this._isMounted) {\n        var newState = event.detail;\n        if (newState.regionType == \"national\" && this.state.comp == \"votes-split\") {\n            newState.regionType = \"province\";\n            newState.provinceName = this.state.provinceName || \"Western Cape\";\n        }\n        this.setState(newState);\n\n        var triggerState = JSON.parse(JSON.stringify(newState));\n        triggerState.componentID = -1000;\n\n        triggerCustomEvent(events.CHART_PREVIEW, triggerState);\n        triggerCustomEvent(events.MAP_PREVIEW, triggerState);\n      }\n    };\n\n    renderTurnoutProgressSpoilt() {\n        var {\n            currentTurnout,\n            currentCountingProg,\n            currentSpoiltVotes,\n        } = this.state;\n\n        return (\n            <div className={cn(\"current-progress\")}>\n                <div className={cn(\"current-turnout\")}>\n                    <div>Turnout</div>\n                    <div ref=\"currentTurnout\">{currentTurnout}%</div>\n                </div>\n                <div className={cn(\"current-counting-progress\")}>\n                    <div>Counting Progress</div>\n                    <div ref=\"currentCountingProg\">{currentCountingProg}%</div>\n                </div>\n                <div className={cn(\"current-spoilt-votes\")}>\n                    <div>Spoilt Votes</div>\n                    <div ref=\"currentSpoiltVotes\">{currentSpoiltVotes}%</div>\n                </div>\n            </div>\n        )\n    }\n\n    renderQuickResultsTitle() {\n        var {\n            comp,\n            currentCountingProg\n        } = this.state;\n        var self = this;\n        if (comp == 'votes-default') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    Race for Votes: {getNationalProvincialStr2(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-default-metro') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    Race for Votes: {getNationalProvincialStr(self.state)} - <span className=\"regionName\">{getRegionName2(self.state)}</span>\n                </div>\n            );\n        }\n        if (comp == 'seats-default') {\n            return (\n                <div className={className(\"quick-results-title\")+\" \"+className(\"race-for-seats\")}>\n                    Race for Seats: {getNationalProvincialStr2(self.state)} ({getSeatsCount(self.state)})\n                </div>\n            );\n        }\n        if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    Turnout: {getNationalProvincialStr4(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-progress') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    Counting Progress {getNationalProvincialStr3(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'votes-comparisons') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    Comparisons: {getNationalProvincialStr2(self.state)}\n                </div>\n            );\n        }\n        if (comp == 'seats-comparisons') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    Race for Seats: {getNationalProvincialStr2(self.state)} ({getSeatsCount(self.state)})\n                </div>\n            );\n        }\n        if (comp == 'votes-myvd') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    Voting District\n                </div>\n            );\n        }\n        if (comp == 'votes-split') {\n            return (\n                <div className={className(\"quick-results-title\")}>\n                    {getRegionName(self.state)} Race for Votes - Split (Nat/Prov)\n                </div>\n            )\n        }\n        if (comp == 'votes-predictions') {\n            \n            return (\n                <div className={className(\"quick-results-title\")}>\n                     CSIR predictions for final results, with <span ref=\"curCountingProg\">{currentCountingProg}%</span> VDs counted: {getRegionName4(self.state)}\n                </div>\n            )\n        }\n        return null;\n    }\n\n    renderMap() {\n        var {\n            comp,\n            iecId,\n            muniCode\n        } = this.state;\n        var mapState = JSON.parse(JSON.stringify(this.state));\n        if (comp == 'votes-myvd') {\n            if (iecId && iecId.length && muniCode && muniCode.length) {\n                mapState.disableNavigation = true;\n                return (\n                    <div className={className(\"map-container\")}>\n                        <Map\n                            ref={instance => { this.mapInstance = instance; }}\n                            key={comp}\n                            {...mapState}\n                            componentID={-1000}\n                        />\n                    </div>\n                );\n            }\n            return null;\n        }\n        if (comp == 'votes-split') {\n            mapState.disableNavigation = true;\n            mapState.regionType = \"national\";\n            return (\n                <div className={className(\"map-container\")}>\n                    <Map\n                        ref={instance => { this.mapInstance = instance; }}\n                        key={comp}\n                        {...mapState}\n                        componentID={-1000}\n                    />\n                </div>\n            );\n        } else if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"map-container\")}>\n                    <TurnoutMap\n                        ref={instance => { this.mapInstance = instance; }}\n                        key={comp}\n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        } else {\n            return (\n                <div className={className(\"map-container\")}>\n                    <Map\n                        ref={instance => { this.mapInstance = instance; }}\n                        key={comp}\n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n    }\n\n    renderBarchart() {\n        var {\n            comp,\n            partyIecIds,\n            partyAbbrs,\n            iecId\n        } = this.state;\n        if (comp == 'votes-default' || comp == 'votes-default-metro' || (comp == 'votes-myvd' && iecId && iecId.length)) {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <BarChart \n                        key={comp}\n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state} \n                        componentID={-1000}/>\n                </div>\n            );\n        }\n        if (comp == 'seats-default') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <SeatHorseShoeChart\n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-turnout') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <TurnoutBarchart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-progress') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <ProgressVotesPieChart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-predictions') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <VotePredictionLineChart\n                        ref={instance => { this.barchartInstance = instance; }}\n                        {...this.state}\n                        componentID={-1000} />\n                </div>\n            );\n        }\n        if (comp == 'votes-comparisons') {\n            var {numParties} = this.state;\n            this.barchartInstances = new Array(numParties);\n            return (\n                <div className={className(\"barchart-container\")}>\n                    {\n                        partyIecIds.map((partyIecId, partyIdx) => {\n                            return <VoteCompBarchart \n                                ref={instance => { this.barchartInstances[partyIdx] = instance; }} \n                                key={partyIdx}\n                                {...this.state}\n                                partyAbbr={partyAbbrs[partyIdx]}\n                                partyIecId={partyIecId}\n                                componentID={-1000}\n                            />\n                        })\n                    }\n                </div>\n            );\n        }\n        if (comp == 'seats-comparisons') {\n            this.barchartInstances = new Array(numParties);\n            return (\n                <div className={className(\"barchart-container\")}>\n                    {\n                        partyIecIds.map((partyIecId, partyIdx) => {\n                            return <SeatCompBarchart \n                                ref={instance => { this.barchartInstances[partyIdx] = instance; }} \n                                key={partyIdx}\n                                {...this.state}\n                                partyAbbr={partyAbbrs[partyIdx]}\n                                partyIecId={partyIecId}\n                                componentID={-1000}\n                            />\n                        })\n                    }\n                </div>\n            );\n        }\n        if (comp == 'votes-split') {\n            return (\n                <div className={className(\"barchart-container\")}>\n                    <SplitNatProvChart \n                        ref={instance => { this.barchartInstance = instance; }} \n                        {...this.state}\n                        componentID={-1000}\n                    />\n                </div>\n                \n            )\n        }\n        return null;\n    }\n\n    renderMyVDEnterForm() {\n        var {comp} = this.state;\n        if (comp != 'votes-myvd') {\n            return null;\n        }\n        return (\n            <div className=\"voting-district-enter-form\">\n                <input ref=\"vdInput\" type=\"text\" placeholder=\"Enter your VD number\"/>\n                <button onClick={this.onShowVDResult.bind(this)}> Show Result</button>\n                <p className=\"iec-link\">Look up your voting district number at the <a href=\"http://maps.elections.org.za/vsfinder/\">IEC</a>.</p>\n            </div>\n        )\n    }\n\n    onShowVDResult() {\n        if (this.refs.vdInput.value.length == 0) {\n            alert(\"please enter valid vd number\");\n            return;\n        }\n        var newState = {\n            regionType: \"municipality-vd\",\n            iecId: this.refs.vdInput.value,\n            muniCode: \"\"\n        }\n        triggerCustomEvent(events.REGION_CHANGE, newState);\n    }\n\n    render() {\n        var {\n            stylesheetFor,\n        } = this.state;\n\n        var components = [];\n        components.push(this.renderQuickResultsTitle())\n        if (this.state.enableTurnoutProgressSpoilt) {\n            components.push(this.renderTurnoutProgressSpoilt())\n        }\n        components.push(this.renderMyVDEnterForm())\n\n        if (this.state.enableBarChart)\n          components.push(this.renderBarchart())\n\n        if (this.state.enableMap)\n          components.push(this.renderMap())\n\n        return (\n            <div className={className(\"quickresultswidget\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n                <div className={cn(\"row\")}>\n                    <div className={cn(\"col-md-4\")+\" \"+className(\"main-left-part\")}>\n                        <NavBar {...this.state}/>\n                    </div>\n                    <div className={cn(\"col-md-8\")+\" \"+className(\"main-right-part\")}>\n                        {components}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuickResultsWidget;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName, formatClassNameFromString} from \"../../utils\";\nimport config from \"../../config\"\n\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", options.viewBox || (\"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset)))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      // svg.append(\"text\")\n      //   .attr(\"text-anchor\", \"end\")\n      //   .attr(\"x\", width)\n      //   .attr(\"y\", 40)\n      //   .text(options.usedValue);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(options.yValue(d));\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(options.yValue(d));\n        }\t\n      }\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [0, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(groupChartData.map(item => d3.max(item.data, function(d) { return parseFloat(options.yValue(d)); }))) + 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(groupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.partyAbbr)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append('rect')\n        .attr('class', className(config.CSS_PREFIX + \"grouprect\"))\n        .attr('x', -x.bandwidth()*1/12)\n        .attr('y', YaxisOffset - 85)\n        .attr('width', x.bandwidth()*5/6)\n        .attr('height', 120 + height - YaxisOffset);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"baraxistext-container\");\n      \n      for (var i = 0; i < groupChartData.length; i ++) {\n        var partyAbbr = groupChartData[i].partyAbbr;\n        var chartData = groupChartData[i].data;\n\n        var subX = d3.scaleBand()\n          .rangeRound([0, x.bandwidth()*2/3])\n          .domain(chartData.map(function (d) {\n            return d.name;\n          }));\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(partyAbbr)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n        var barAxisTextSvg = groupSvg.select(\".baraxistext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n    \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", function (d, i) {\n              return subX(d.name)+subX.bandwidth()/4;\n            })\n            .attr(\"width\", subX.bandwidth()*1/2)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d)));\n            })\n            .attr(\"height\", function (d) {\n              return height - y(Number(options.yValue(d)));\n            })\n            \n\n          var barAxisTexts = barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barAxisTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barAxisTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) + 18;\n            })\n          barAxisTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return /(19|20)\\d{2}/g.exec(d.name)[0];\n            });\n            \n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return subX(d.name)+subX.bandwidth()/2;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"7px\")\n            .attr(\"y\", function(d) {\n              return y(0) - 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n            .text(function(d) {\n              return options.yValueFormat(options.yValue(d));\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return y(Number(options.yValue(d))) - 5;\n            })\n      }\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true,\n  viewBox: '45 0 655 340'\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 12\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-comparison-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n      \n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Seats Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Seats Comparison - ${getNationOrProvinceName(props)}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import * as d3 from \"d3\";\nimport {createTooltip, formatPartyName, formatClassNameFromString} from \"../../utils\";\nexport function Chart(container, width, height, className, options) {\n  if (!options) {\n      options = {};\n  }\n  width = 700;\n  height = 300;\n  container.selectAll(\"svg\").remove();\n\n    var XaxisOffset = 70;\n    var YaxisOffset = 120;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n\n    var svg = container.append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + (width+XaxisOffset) + \" \" + (height+YaxisOffset))\n        .classed(\"svg-content\", true);\n        \n    var tooltipDiv = createTooltip(className);\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    var errorText = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    this.draw = function(groupChartData, colorsData) {\n\n      svg.selectAll(\".topLabel\").remove();\n      svg.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"class\", \"topLabel\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", 20)\n        .text(options.topLabel);\n\n      if (!groupChartData) {\n        errorText.text(\"chart data is not available\");\n        return;\n      } else {\n        errorText.text(\"\");\n      }\n      var partyColorByName = {};\n\n        var partyColorsData = colorsData;\n        if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n            partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n            partyColorByName[edge.node.name] = edge.node.colour;\n            })\n        }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n\n      function getFillColor(d, i) {\n          return getFillColorFromPartyName(d.partyInfo.name, i);\n      }\n\n      function getTooltipText(d, i) {\n        if (options.noXaxisByParty) {\n          return d.name + \" : \" + options.yValueFormat(d.delta);\n        } else {\n          return formatPartyName(d.partyInfo.name) + \" : \" + options.yValueFormat(d.delta);\n        }\t\n      }\n\n      var newGroupChartData = groupChartData.map(item => {\n        var chartData = item.data;\n        return {\n          ...item,\n          data: [{\n            ...chartData[1],\n            delta: options.yValue(chartData[1]) - options.yValue(chartData[0])\n          }]\n        }\n      });\n\n      x.domain(groupChartData.map(item => item.partyAbbr));\n\n      var minMaxY = [-100, 100];\n      if (options.dynamicYAxisFromValues) {\n        minMaxY[1] = d3.max(newGroupChartData.map(item => parseFloat(item.data[0].delta))) + 1\n        minMaxY[0] = d3.min(newGroupChartData.map(item => parseFloat(item.data[0].delta))) - 1\n      }\n      y.domain(minMaxY);\n\n      var groupSvgs = svg.selectAll(`.bar-group`).data(newGroupChartData);\n      groupSvgs.exit()\n        .transition()\n        .duration(300)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n    \n      var groupSvg = groupSvgs.enter()\n        .append(\"g\")\n        .attr(\"class\", d => `bar-group ${formatClassNameFromString(d.partyAbbr)}`)\n        .attr(\"transform\", (d) => `translate(${x(d.partyAbbr)}, 0)`);\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"groupname-container\")\n        .attr(\"transform\", `translate(${x.bandwidth()*1/3}, ${YaxisOffset - 50})`)\n        .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(d => d.partyAbbr)\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bar-container\");\n\n      groupSvg.append(\"g\")\n        .attr(\"class\", \"bartext-container\");\n      \n      for (var i = 0; i < newGroupChartData.length; i ++) {\n        var partyAbbr = newGroupChartData[i].partyAbbr;\n        var deltaData = newGroupChartData[i].data;\n\n        var groupSvg = svg.selectAll(`.bar-group.${formatClassNameFromString(partyAbbr)}`);\n\n        var barSvg = groupSvg.select(\".bar-container\");\n        var barTextSvg = groupSvg.select(\".bartext-container\");\n\n        var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData);\n\n        bars.exit()\n          .transition()\n          .duration(300)\n          .attr(\"height\", 0)\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n        \n        bars.enter()\n            .append(\"rect\")\n            .attr(\"class\", (d) => className(\"bar\") + \" bar_\" + d.name)\n            .attr(\"x\", x.bandwidth()/6)\n            .attr(\"width\", x.bandwidth()*1/3)\n            .attr(\"fill\", (d,i) => getFillColor(d, i))\n            .on(\"mousemove\", function(d, i) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 0.8);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", .9);\t\t\n                tooltipDiv.html(getTooltipText(d, i))\n                    .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\t\t\n                d3.select(this)\n                  .attr(\"opacity\", 1);\n                tooltipDiv.transition()\t\t\n                    .duration(200)\t\t\n                    .style(\"opacity\", 0);\t\n            })\n            .attr(\"y\", function(d) {\n              return y(0);\n            })\n            .attr(\"height\", 0)        \n    \n          barSvg.selectAll(`.${className(\"bar\")}`).data(deltaData)\n            .attr(\"fill\", (d, i) => getFillColor(d, i))\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              return Math.min(y(Number(d.delta)), y(0));\n            })\n            .attr(\"height\", function (d) {\n              return Math.abs(y(Number(d.delta)) - y(0));\n            })\n    \n          var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData);\n          barTexts.exit()\n            .transition()\n            .duration(300)\n            .style(\"fill-opacity\", 1e-6)\n            .remove();\n    \n          barTexts.enter().append(\"text\")\n            .attr(\"class\", className(\"bartext\"))\n            .attr(\"x\", function (d) {\n              return x.bandwidth()/3;\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"12px\")\n            .attr(\"y\", function(d) {\n              if (d.delta > 0)\n                return y(0) - 5;\n              return y(0) + 5;\n            })\n          barTextSvg.selectAll(`.${className(\"bartext\")}`).data(deltaData)\n            .text(function(d) {\n              return options.yValueFormat(d.delta);\n            })\n            .transition()\n            .duration(300)\n            .attr(\"y\", function (d) {\n              var barTextYDelta = 0;\n              if (d.delta > 0) {\n                barTextYDelta = -5;\n              } else {\n                barTextYDelta = 15;\n              }\n              return y(Number(d.delta)) + barTextYDelta;\n            })\n      }\n\n      svg.selectAll(\".xAxisLine\").remove();\n      var axisThick = 2;\n      svg.append('line')\n        .attr('class', 'xAxisLine')\n        .attr('stroke-width', axisThick)\n        .attr('stroke', \"currentColor\")\n        .attr('x1', XaxisOffset)\n        .attr('y1', y(0)-axisThick/2)\n        .attr('x2', width)\n        .attr('y2', y(0)-axisThick/2)\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getPartyColors,\n  getSeatsDataForComparison\n} from \"../../api\";\nimport {\n  parseSeatsComparisonDataMultipleParties,\n  getNationOrProvinceName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014\",\n  usedValue: \"SEATS COUNTED\",\n  yValue: d => d.seats,\n  yValueFormat: seats => seats,\n  dynamicYAxisFromValues: true\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 13\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      this.chart = null;\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-seats-swing-barchart(${getNationOrProvinceName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"deltabarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getNationOrProvinceName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var seatsDataLoader = getSeatsDataForComparison(props);\n      var dataLoaders = [seatsDataLoader];\n\n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getNationOrProvinceName(props)}: Swing ${years}`;\n      }\n\n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var seatsData = values[0];\n        partyColorsData = partyColorsData || values[1];         \n        self.drawGraph(container, props, seatsData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseSeatsComparisonDataMultipleParties(data, props);\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        \n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteCompBarchart/d3groupbarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => value + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 14\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-comparison-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"groupbarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      chartOptions.topLabel = `${props.regionType.toUpperCase()} ASSEMBLY: ${props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\", \")}`\n      \n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = \"Race for Votes Comparison - National Assembly\";\n      } else {\n        chartOptions.topLabel = `Race for Votes Comparison - ${getRegionName(props)}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"../BarChart/barchart.css\";\nimport {Chart} from \"../TVVoteSwingBarchart/d3deltabarchart\";\nimport svgToPng from \"save-svg-as-png\";\n\nimport events from \"../../events\";\nimport config from \"../../config\";\nimport {\n  getVotesDataForComparison,\n  getPartyColors,\n  getProvincesData\n} from \"../../api\";\nimport {\n  parseVotesComparisonDataMultipleParties,\n  getRegionName,\n  fetchDataFromOBJ,\n  handleRegionChange\n} from \"../../utils\";\n\nvar provincesData = getProvincesData();\n\nvar dataRefreshTime = 30 * 1000;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction cn(originName) {\n  return className(config.CSS_PREFIX + originName);\n}\n\nvar partyColorsData;\n\nvar chartOptions = {\n  topLabel: \"NATIONAL ASSEMBLY: 2009, 2014, 2019\",\n  usedValue: \"% VDS COUNTED\",\n  yValue: d => d.percOfVotes,\n  yValueFormat: value => (value > 0? '+': '') + (value.toFixed(2)) + '%',\n  dynamicYAxisFromValues: true\n}\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        partyAbbrs: [\"ANC\", \"DA\", \"EFF\", \"ID\"],\n        partyIecIds: [null, null, null, null],\n        eventDescriptions: [\n            // \"National Elections 1999\",\n            // \"Provincial Elections 1999\",\n            // \"14 Apr 2004 National Election\",\n            // \"14 Apr 2004 Provincial Election\",\n            \"22 Apr 2009 National Election\",\n            // \"22 Apr 2009 Provincial Election\",\n            \"2014 National Election\",\n            // \"2014 Provincial Election\",\n            // \"2019 NATIONAL ELECTION\",\n            // \"2019 PROVINCIAL ELECTION\",\n        ],\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        iecId: \"\",\n        stylesheetFor: \"web\",\n        componentID: 15\n      }\n\n      fetchDataFromOBJ(this.state, props);\n\n      this.chart = null;\n      this.refreshIntervalID = 0;\n      this.exportAsPNG = this.exportAsPNG.bind(this);\n      this.exportAsPNGUri = this.exportAsPNGUri.bind(this);\n      this.handleRegionChange = handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n  \n    componentDidMount() {\n\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      this.refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = null;\n      }\n      document.removeEventListener(events.EXPORT_PNG, this.exportAsPNG);\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.CHART_PREVIEW, this.handlePreviewEvent);\n      clearInterval(this.refreshIntervalID);\n    }\n\n    exportAsPNGUri() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        svgToPng.svgAsPngUri(self.refs.vizcontainer.childNodes[0], {}, function(uri) {\n          resolve(uri.split(',')[1]);\n        });\n      });\n    }\n\n    exportAsPNG(event) {\n      var targetState = event.detail;\n      if (targetState.componentID != this.state.componentID)\n        return;\n      svgToPng.saveSvgAsPng(this.refs.vizcontainer.childNodes[0], `race-for-votes-swing-barchart(${getRegionName(this.state)}).png`);\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (this.chart)\n        this.chart.destroy();\n      this.chart = new Chart(this.getContainer(), null, null, className, chartOptions);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      const {\n        stylesheetFor\n      } = this.state;\n      return (\n          <div className={cn(\"deltabarchart\") + \" \" + cn(`stylesheet-${stylesheetFor}`)}>\n            {/* <div className={cn(\"chart-title\")}>{chartOptions.chartType} ({getRegionName(this.state)}): </div> */}\n            <div \n              ref=\"vizcontainer\" \n              className={cn(\"chart-body\")} \n              ></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      var votesDataLoader = getVotesDataForComparison(props);\n      var dataLoaders = [votesDataLoader];\n      \n      var years = props.eventDescriptions.map(desc => /(19|20)\\d{2}/g.exec(desc)[0]).join(\"/\");\n      if (props.regionType == \"national\") {\n        chartOptions.topLabel = `National Assembly: Swing ${years}`;\n      } else {\n        chartOptions.topLabel = `${getRegionName(props)}: Swing ${years}`;\n      }\n      \n      if (!partyColorsData) {\n        var partyColorsLoader = getPartyColors();\n        dataLoaders.push(partyColorsLoader);\n      }\n\n      Promise.all(dataLoaders).then(function(values){ \n        var votesData = values[0];\n        partyColorsData = partyColorsData || values[1];          \n        self.drawGraph(container, props, votesData, partyColorsData);\n      }).catch(error => console.error(error));\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesComparisonDataMultipleParties(data, props);\n\n        if (!this.chart)\n          this.chart = new Chart(container, null, null, className, chartOptions);\n        this.chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed,\n  QuickResultsWidget,\n  QuickResultsWidgetEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <QuickResultsWidget stylesheetFor={\"tv\"} eventDescription={\"2019 NATIONAL ELECTION\"} nationalEventDescription={\"2019 NATIONAL ELECTION\"} provincialEventDescription={\"2019 PROVINCIAL ELECTION\"} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}