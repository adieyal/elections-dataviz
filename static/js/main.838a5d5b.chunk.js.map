{"version":3,"sources":["events/index.js","api/index.js","components/BarChart/barchart.js","components/Map/map.js","App.js","components/Box/Box.js","serviceWorker.js","index.js"],"names":["events","client","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","chart","dataRefreshTime","predefBarChartColors","R","G","B","seed","className","originName","styles","Chart","container","width","height","predefColors","svg","append","attr","gradientName","rgb","concat","defineGradient","defs","originRGB","selectAll","data","enter","d","percent","mixedR","mixedG","mixedB","getMergedColorWithWhite","tooltipDiv","i","length","document","getElementsByClassName","d3","style","x","rangeRound","y","YaxisOffset","text","barSvg","barTextSvg","this","draw","chartData","domain","map","name","Number","value","select","transition","duration","call","ticks","tickSize","tickFormat","bars","exit","remove","bandwidth","on","html","pageX","pageY","barTexts","destroy","BarChart","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","self","assertThisInitialized","state","numParties","regionName","setInterval","getContainer","handleRegionChange","bind","redrawChart","addEventListener","window","removeEventListener","modifW","body","clientWidth","modifH","clientHeight","setState","event","refs","vizcontainer","react_default","a","createElement","ref","options","query","gql","_templateObject","then","drawGraph","catch","error","console","edges","node","el","parseInt","Math","random","reverse","Component","Map","regionType","parentProvinceName","log","nationalMapFile","fullRouteGeoJsonFile","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","process","JSON","stringify","indexOf","w","classed","geoJsonLoader","Promise","all","values","getJsonDataFeatures","geoJsonData","topojson","objects","features","projection","fitSize","path","geometry","type","center","polylabel","coordinates","projectionCenter","properties","SPROVINCE","smunicipal","split","SMUNICIPAL","labelElements","regions","overlapCnt","getBoundingClientRect","j","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","slice","newState","CustomEvent","dispatchEvent","replace","getMunicipalityRegionName","App","BarChart_barchart","Map_map","id","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.838a5d5b.chunk.js","sourcesContent":["const REGION_CHANGE = 'region-change';\n\nexport default {\n    REGION_CHANGE\n};","import { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport gql from 'graphql-tag'\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: 'http://elections2019.xyz/graphql', useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n  cache: new InMemoryCache()\n})\n\n\nexport function getVotesData(options) {\n    return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n              event_Description_Icontains:\"2004\", \n            event_EventType_Description_Icontains:\"National\",\n            location_Name:\"${options.regionName}\"\n        \n          ) {\n            edges {\n              node {\n                topResult(validVotes_Gt:1000, last:${options.numParties}) {\n                  edges {\n                    node {\n                      validVotes\n                      party {\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                }\n                location {\n                  name\n                }\n              }\n            }\n          }\n        }\n        `,\n      });\n}","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport styles from './barchart.css';\n\nimport events from '../../events';\nimport {\n  getVotesData\n} from '../../api';\n\nvar dataRefreshTime = 30 * 100;\nvar predefBarChartColors = [\n  {R: 0, G: 114, B: 47},\n  {R: 3, G: 62, B: 108},\n  {R: 131, G: 23, B: 27},\n  {R: 170, G: 0, B: 14},\n  {R: 76, G: 114, B: 114},\n  {R: 191, G: 135, B: 50},\n];\nvar seed = 1;\n\n// for the purposes of the proof of concept - production data should be live\nvar use_live_data = true;\nvar js = {\n  \"data\": {\n    \"allProvincialBallots\": {\n      \"edges\": [\n        {\n          \"node\": {\n            \"location\": {\n              \"name\": \"Western Cape\"\n            },\n            \"topResult\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"VF Plus\",\n                      \"name\": \"VRYHEIDSFRONT PLUS\"\n                    },\n                    \"validVotes\": 23243\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"ACDP\",\n                      \"name\": \"AFRICAN CHRISTIAN DEMOCRATIC PARTY\"\n                    },\n                    \"validVotes\": 25318\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"EFF\",\n                      \"name\": \"ECONOMIC FREEDOM FIGHTERS\"\n                    },\n                    \"validVotes\": 50280\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"ANC\",\n                      \"name\": \"AFRICAN NATIONAL CONGRESS\"\n                    },\n                    \"validVotes\": 737219\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"DA\",\n                      \"name\": \"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE\"\n                    },\n                    \"validVotes\": 1241424\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction Chart(container, width, height) {\n  var XaxisOffset = 70;\n  var YaxisOffset = 20;\n  var predefColors = predefBarChartColors;\n  var svg = container.append(\"svg\")\n      .attr(\"width\", width + XaxisOffset)\n      .attr(\"height\", height + YaxisOffset);\n\n  function gradientName(rgb) {\n    return `gradientrgb-${rgb.R}-${rgb.G}-${rgb.B}`;\n  }\n\n  function defineGradient(defs, originRGB) {\n    function getMergedColorWithWhite(percent) {\n      var mixedR = (originRGB.R * (100-percent) + 255 * (percent))/100;\n      var mixedG = (originRGB.G * (100-percent) + 255 * (percent))/100;\n      var mixedB = (originRGB.B * (100-percent) + 255 * (percent))/100;\n      return `rgb(${mixedR},${mixedG},${mixedB})`;\n    }\n    var linearGradient = defs.append(\"linearGradient\")\n      .attr(\"id\", gradientName(originRGB));\n    var gradientInfo = [[0,0], [11, 92], [25,15], [82, 35], [100, 4]];\n    linearGradient.selectAll(\"stop\")\n      .data(gradientInfo)\n      .enter()\n      .append('stop')\n      .attr(\"offset\", d => d[0]+'%')\n      .attr(\"stop-color\", d => getMergedColorWithWhite(d[1]))\n      .attr(\"stop-opacity\", 1);\n  }\n\n  var defs = svg.append(\"defs\");\n  for (var i = 0; i < predefColors.length; i ++)\n    defineGradient(defs, predefColors[i]);\n\n  var tooltipDiv;\n  if (document.getElementsByClassName('tooltip')[0]) {\n    tooltipDiv = d3.select(\".tooltip\");\n  } else {\n    tooltipDiv = d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n\n  var x = d3.scaleBand()\n    .rangeRound([XaxisOffset, width])\n\n  var y = d3.scaleLinear()\n    .rangeRound([height, YaxisOffset]);\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n    .append(\"text\")\n    .attr(\"class\", className(\"percentage-label\"))\n    .attr(\"transform\", \"rotate(-90)\")\n    .text(\"PERCENTAGE VOTES\")\n    .attr(\"text-anchor\", \"middle\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n\n  svg.append(\"g\")\n    .attr(\"class\", className(\"grid\"))\n    .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n\n  var barSvg = svg.append(\"g\")\n    .attr(\"class\", className(\"bar-container\"));\n  var barTextSvg = svg.append(\"g\")\n    .attr(\"class\", className(\"bartext-container\"));\n\n  this.draw = function(chartData) {\n    x.domain(chartData.map(function (d) {\n        return d.name;\n      }));\n    y.domain([0, d3.max(chartData, function (d) {\n          return Number(d.value);\n        })]);\n\n\n\t\tsvg.select('.x.axis').transition().duration(300).call(d3.axisBottom(x));\n\t\tsvg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n      .ticks(6)\n      .tickSize(-width+XaxisOffset)\n    )\n    svg.select(\".grid\").transition().duration(300).call(d3.axisLeft(y)\n      .ticks(6)\n      .tickSize(-width+XaxisOffset)\n      .tickFormat(\"\")\n    )\n\n    var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n\n    bars.exit()\n      .transition()\n      .duration(300)\n      .attr(\"y\", function(d) {\n        return y(0);\n      })\n      .attr(\"height\", 0)\n      .style('fill-opacity', 1e-6)\n      .remove();\n\n    bars.enter()\n        .append(\"rect\")\n        .attr(\"class\", className(\"bar\"))\n        .attr(\"x\", function (d) {\n          return x(d.name)+x.bandwidth()/20;\n        })\n        .attr(\"width\", x.bandwidth()*9/10)\n        .attr(\"fill\", (d, i) =>`url(#${gradientName(predefColors[i%predefColors.length])})`)\n        .on(\"mousemove\", function(d) {\t\t\n            d3.select(this)\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            tooltipDiv.html(d.name + ' : ' + d.value)\t\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            d3.select(this)\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n        })\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)        \n\n      barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n        .transition()\n        .duration(300)\n        .attr(\"y\", function (d) {\n          return y(Number(d.value));\n        })\n        .attr(\"height\", function (d) {\n          return height - y(Number(d.value));\n        })\n        \n      var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n\n      barTexts.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0) - 5;\n        })\n        .style('fill-opacity', 1e-6)\n        .remove();\n\n      barTexts.enter().append(\"text\")\n        .attr(\"class\", className(\"bartext\"))\n        .attr(\"x\", function (d) {\n          return x(d.name)+x.bandwidth()/2;\n        })\n        .attr('text-anchor', 'middle')\n        .attr('font-size', '12px')\n        .attr(\"y\", function(d) {\n          return y(0) - 5;\n        })\n      barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n        .text(function(d) {\n          return d.value;\n        })\n        .transition()\n        .duration(300)\n        .attr(\"y\", function (d) {\n          return y(Number(d.value)) - 5;\n        })\n  }\n  this.destroy = function() {\n    svg.remove();\n  }\n}\n\nvar chart;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        regionName: \"Western Cape\",\n        width: 600,\n        height: 220\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionName) {\n        this.state.regionName = props.regionName;\n      }\n      if (props.width) {\n        this.state.width = props.width;\n      }\n      if (props.height) {\n        this.state.height = props.height;\n      }\n      setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.redrawChart = this.redrawChart.bind(this);\n    }\n  \n    componentDidMount() {\n      this.draw(this.getContainer(), this.state)\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      window.addEventListener(\"resize\", this.redrawChart, 200);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      window.removeEventListener(\"resize\", this.redrawChart);\n    }\n\n    redrawChart() {\n      var modifW = document.body.clientWidth, modifH = document.body.clientHeight/3;\n      chart.destroy();\n      chart = new Chart(this.getContainer(), modifW, modifH);\n      this.setState({width: modifW, height: modifH});\n    };\n\n    handleRegionChange(event) {\n      this.setState({regionName: \"Eastern Cape\"})\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      return (\n          <div>\n            <div className={className(\"chart-title\")}>RACE FOR VOTES: </div>\n            <div ref=\"vizcontainer\" className={className(\"chart-body\")}></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      if (use_live_data) {\n        getVotesData({\n          numParties: props.numParties || 5,\n          regionName: props.regionName || \"Western Cape\"\n        }).then(function(data) {\n            self.drawGraph(container, props, data);\n        }).catch(error => console.error(error));\n      }\n      else {\n          self.drawGraph(container, props, js);\n      }\n    }\n\n    drawGraph(container, props, data) {\n        var chartData;\n        var results = data[\"data\"][\"allProvincialBallots\"].edges[0][\"node\"][\"topResult\"][\"edges\"];\n        chartData = results.map(function(node) {\n            var el = node[\"node\"];\n            return {\n                name: el[\"party\"][\"abbreviation\"],\n                value: el[\"validVotes\"] + parseInt(Math.random(seed++) * 0.1 * el[\"validVotes\"])\n            }\n        }).reverse();\n\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height);\n        chart.draw(chartData);\n    }\n}\n\nexport default BarChart;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\nimport polylabel from 'polylabel';\nimport styles from './map.css';\nimport events from '../../events';\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          regionType: \"national\",\n          regionName: \"SA\",\n          parentProvinceName: \"\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.regionName) {\n            this.state.regionName = props.regionName;\n        }\n    }\n\n\n\n    drawGraph(container, props) {\n        console.log(\"drawGraph\", \"new\", this);\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(regionName) {\n                console.log(\"getProvinceFileName\", regionName);\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[regionName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.regionName);\n                case \"municipality\":\n                    return self.state.regionName + \".topojson\";\n            }\n        }\n\n        var fullRouteGeoJsonFile = \"mapdata/\" + getRegionFileName();\n\n        var tooltipDiv;\n        if (document.getElementsByClassName('tooltip')[0]) {\n          tooltipDiv = d3.select(\".tooltip\");\n        } else {\n          tooltipDiv = d3.select(\"body\").append(\"div\")\t\n            .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n            .style(\"opacity\", 0);\n        }\n\n        console.log(\"process.env\", process.env)\n\n        if (JSON.stringify(process.env).indexOf(\"docz\") != -1) {\n            fullRouteGeoJsonFile = \"/public/\" + fullRouteGeoJsonFile;\n        }\n\n        console.log(\"fullRouteGeoJsonFile\", fullRouteGeoJsonFile);\n\n        var w = 1400;\n        var h = 700;\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\").style(\"background-color\",\"#c9e8fd\")\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h)\n            .classed(\"svg-content\", true);\n\n        var fo = svg.append('foreignObject')\n            .attr('x', w - 100)\n            .attr('y', 10)\n            .attr('width', 100)\n            .attr('height', 30)\n            .attr('class', 'map-controls')\n        var gobackbutton = fo.append('xhtml:div')\n            .append('button')\n            .attr('class', 'go-back')\n            .html('go back')\n            .on(\"click\", function() {\n                var regionType = self.state.regionType;\n                if (regionType == \"province\") {\n                    self.setState({regionType: \"national\", regionName: \"SA\"});\n                } else if (regionType == \"municipality\") {\n                    function getProvinceFromMunicipality(municipalityName) {\n                        return self.state.parentProvinceName;\n                    }\n                    self.setState({\n                        regionType: \"province\", \n                        regionName: getProvinceFromMunicipality(self.regionName)\n                    });\n                }\n            });\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n\n        Promise.all([geoJsonLoader]).then(function(values){ \n\n            console.log(\"json load Finished\");\n            var geoJsonData = values[0];\n\n            var getJsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") != -1) {\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.regionName]);\n            }\n\n            getJsonDataFeatures = geoJsonData.features;\n\n            console.log(\"getJsonDataFeatures\", getJsonDataFeatures);\n\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with green\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(getJsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr('stroke', \"#FFF\")\n                .attr(\"fill\", \"green\")\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            //show place label\n            svg.selectAll(\".place-label\")\n                .data(getJsonDataFeatures)\n            .enter().append(\"text\")\n                .attr(\"class\", \"place-label\")\n                .attr(\"font-size\", \"12px\")\n                .attr(\"transform\", function(d) { \n                    if (d.geometry.type == \"Polygon\") {\n                        var center = polylabel(d.geometry.coordinates);\n                        console.log(\"center\", center);\n                        var projectionCenter = projection(center);\n                        projectionCenter[1] -= 12;\n                        return \"translate(\" + projectionCenter + \")\"; \n                    } else { //d.geometry.type == \"MultiPolygon\"\n                        var center = polylabel(d.geometry.coordinates[0]);\n                        var projectionCenter = projection(center);\n                        projectionCenter[1] -= 5;\n                        //projection(center)\n                        return \"translate(\" + projectionCenter + \")\"; \n                    }\n                })\n                .attr(\"dy\", \".35em\")\n                .style(\"text-anchor\", \"middle\")\n                .text(function(d) { \n                    if (self.state.regionType == \"national\") {\n                        return d.properties.SPROVINCE;\n                    } else if (self.state.regionType == \"province\") {\n                        return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                    } else {//municipality\n                        return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                    }\n                })\n\n            var labelElements = document.getElementsByClassName(\"place-label\");\n\n            var regions = {};\n            var overlapCnt = {};\n            for (var i = 0; i < getJsonDataFeatures.length; i ++) {\n                regions[i] = labelElements[i].getBoundingClientRect();\n            }\n\n            for (var i = 0; i < getJsonDataFeatures.length; i ++) {\n                for (var j = 0; j < i; j ++) {\n                    var rect1 = regions[i];\n                    var rect2 = regions[j];\n                    var overlap = !(rect1.right < rect2.left || \n                        rect1.left > rect2.right || \n                        rect1.bottom < rect2.top || \n                        rect1.top > rect2.bottom);\n                    if (overlap) {\n                        overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n                    }\n                }\n                if (overlapCnt[i] > 2) {\n                    labelElements[i].setAttribute(\"opacity\", 0)\n                } else if (overlapCnt[i] > 0){\n                    labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n                } else {\n\n                }\n            }\n            for (var i = 0; i < getJsonDataFeatures.length; i ++) {\n                // labelElements[i].setAttribute(\"font-size\", 12 / overlapCnt[i]);\n                \n            }\n            \n            console.log(\"regions\", overlapCnt);\n\n\n            // placeLabelText.append('tspan')\n            //     .attr(\"x\", 0)\n            //     .attr(\"dy\", '0em')\n            //     .text(function(d) { \n            //         if (self.state.regionType == \"national\") {\n            //             return d.properties.SPROVINCE;\n            //         } else if (self.state.regionType == \"province\") {\n            //             return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n            //         } else {//municipality\n            //             return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n            //         }\n            //     });\n            // placeLabelText.append('tspan')\n            //     .attr(\"x\", 0)\n            //     .attr(\"dy\", '1em')\n            //     .text(function(d) { \n            //         if (d.properties.SPROVINCE) \n            //             return \"\";\n            //         return \"[\" + d.properties.smunicipal.split(\"-\")[1].split(\"[\")[1]; \n            //     });\n            \n\t\t\t\t\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(getJsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on('mouseover', function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr('stroke-width', 3)\n                        .style('fill-opacity', 0.8);\n                })\n                .on(\"mousemove\", function(d) {\t\t\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n                    function regionName() {\n                        if (self.state.regionType == \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType == \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    }\n                    tooltipDiv.html(regionName())\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on('mouseout', function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr('stroke-width', 1)\n                        .style('fill-opacity', 1);\n                    \n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    console.log(\"click event\", i, d.properties);\n                    \n                    var regionType = self.state.regionType;\n                    if (regionType == \"national\") {\n                        var newState = {\n                            regionType: \"province\",\n                            regionName: d.properties.SPROVINCE\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, newState);\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    } else if (regionType == \"province\") {\n                        function getMunicipalityName(properties) {\n                            return properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        var newState = {\n                            regionType: \"municipality\", \n                            regionName: getMunicipalityName(d.properties),\n                            parentProvinceName: self.state.regionName\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, newState);\n                        document.dispatchEvent(event);\n\n                        self.setState(newState);\n                    } else {\n                        function getMunicipalityRegionName(properties) {\n                            return properties.SMUNICIPAL.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        var newState = {\n                            regionType: \"municipality-region\", \n                            regionName: getMunicipalityRegionName(d.properties),\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, newState);\n                        document.dispatchEvent(event);\n                    }\n                })\n            console.log(\"svg drawing finished\");\n        })\n\n        var redrawChart = function() {\n\n        };\n\n        window.addEventListener(\"resize\", redrawChart, 200);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n        return (\n            <div>\n                <div>{this.state.regionName}</div>\n                <div ref=\"vizcontainer\" className=\"map\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BarChart,\n  Map\n} from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BarChart width=\"600\" height=\"220\" regionName=\"Western Cape\" numParties={3}/>\n        <Map />\n        <div id=\"sales-data\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3'\nimport './Box.css';\n\nclass Box extends Component {\n    draw() {\n        d3.select(this.refs.box)\n            .append(\"rect\")\n            .attr(\"height\", this.props.height)\n            .attr(\"width\", this.props.width)\n            .classed(this.props.className, true)\n            .classed(\"box\", true)\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n      \n    render () {\n        return (\n          <svg width={this.props.width} height={this.props.height}>\n            <g ref=\"box\"></g>\n          </svg>\n        )\n    }\n}\n\nexport default Box;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}