{"version":3,"sources":["events/index.js","api/index.js","components/BarChart/barchart.js","config/index.js","components/BarChart/barchartEmbed.js","components/Map/map.js","components/Map/mapEmbed.js","App.js","components/Box/Box.js","serviceWorker.js","index.js"],"names":["events","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","chart","dataRefreshTime","js","data","allProvincialBallots","edges","node","partyResults","validVotes","percOfVotes","party","id","name","abbreviation","location","className","originName","styles","Chart","container","width","height","tooltipDiv","predefColors","svg","append","attr","document","getElementsByClassName","d3","style","x","rangeRound","y","YaxisOffset","text","barSvg","barTextSvg","this","draw","chartData","domain","map","d","select","transition","duration","call","ticks","tickFormat","bars","selectAll","concat","exit","remove","enter","bandwidth","i","length","on","html","partyInfo","split","toLowerCase","replace","l","toUpperCase","pageX","pageY","Number","barTexts","destroy","BarChart","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","self","assertThisInitialized","state","numParties","regionName","setInterval","getContainer","handleRegionChange","bind","redrawChart","addEventListener","window","removeEventListener","modifW","body","clientWidth","modifH","clientHeight","setState","event","refs","vizcontainer","react_default","a","createElement","ref","drawGraph","el","parseInt","Component","config","DOMAIN","originClassName","bootstrapStyles","BarChartEmbed","elementId","eventType","_this2","_this$state","type","placeholder","onChange","e","target","value","Map","regionType","parentProvinceName","nationalMapFile","fullRouteGeoJsonFile","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","getLoadingSpinner","console","log","process","w","classed","geoJsonLoader","Promise","all","then","values","getJsonDataFeatures","geoJsonData","indexOf","topojson","objects","features","projection","fitSize","path","center","projectionCenter","geometry","polylabel","coordinates","properties","SPROVINCE","smunicipal","SMUNICIPAL","labelElements","regions","overlapCnt","getBoundingClientRect","j","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","slice","newState","CustomEvent","dispatchEvent","loading","react_loading_default","color","MapEmbed","locationName","App","BarChart_barchart","BarChart_barchartEmbed","Map_map","Map_mapEmbed","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd413195.chunk.js","sourcesContent":["const REGION_CHANGE = \"region-change\";\n\nexport default {\n    REGION_CHANGE\n};","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport gql from \"graphql-tag\"\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"http://elections2019.xyz/graphql\", useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n  cache: new InMemoryCache()\n})\n\nexport function getVotesDataM(options) {\n  return client.query({\n    query: gql`\n    {\n      allProvincialBallots{\n        edges{\n          node{\n            partyResults {\n              edges{\n                node{\n                  validVotes\n                  percOfVotes\n                  party {\n                    id\n                    name\n                    abbreviation\n                  }\n                }\n              }\n            }\n            location {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getVotesData(options) {\n    return client.query({\n        query: gql`\n        {\n          allProvincialBallots(\n              event_Description_Icontains:\"2004\", \n            event_EventType_Description_Icontains:\"${options.regionType}\",\n            location_Name:\"${options.regionName}\"\n        \n          ) {\n            edges {\n              node {\n                topResult(validVotes_Gt:1000, last:${options.numParties}) {\n                  edges {\n                    node {\n                      validVotes\n                      party {\n                        name\n                        abbreviation\n                      }\n                    }\n                  }\n                }\n                location {\n                  name\n                }\n              }\n            }\n          }\n        }\n        `,\n      });\n}","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./barchart.css\";\n\nimport events from \"../../events\";\nimport {\n  getVotesData\n} from \"../../api\";\n\nvar dataRefreshTime = 30 * 1000;\n\n\n// for the purposes of the proof of concept - production data should be live\nvar use_live_data = false;\nvar js = {\n  \"data\": {\n    \"allProvincialBallots\": {\n      \"edges\": [\n        {\n          \"node\": {\n            \"location\": {\n              \"name\": \"Western Cape\"\n            },\n            \"topResult\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"VF Plus\",\n                      \"name\": \"VRYHEIDSFRONT PLUS\"\n                    },\n                    \"validVotes\": 23243\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"ACDP\",\n                      \"name\": \"AFRICAN CHRISTIAN DEMOCRATIC PARTY\"\n                    },\n                    \"validVotes\": 25318\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"EFF\",\n                      \"name\": \"ECONOMIC FREEDOM FIGHTERS\"\n                    },\n                    \"validVotes\": 50280\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"ANC\",\n                      \"name\": \"AFRICAN NATIONAL CONGRESS\"\n                    },\n                    \"validVotes\": 737219\n                  }\n                },\n                {\n                  \"node\": {\n                    \"party\": {\n                      \"abbreviation\": \"DA\",\n                      \"name\": \"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE\"\n                    },\n                    \"validVotes\": 1241424\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\nvar js = {\n    \"data\": {\n      \"allProvincialBallots\": {\n        \"edges\": [\n          {\n            \"node\": {\n              \"partyResults\": {\n                \"edges\": [\n                  {\n                    \"node\": {\n                      \"validVotes\": 15311,\n                      \"percOfVotes\": 84.44,\n                      \"party\": {\n                        \"id\": \"52\",\n                        \"name\": \"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE\",\n                        \"abbreviation\": \"DA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 1508,\n                      \"percOfVotes\": 8.32,\n                      \"party\": {\n                        \"id\": \"7\",\n                        \"name\": \"AFRICAN NATIONAL CONGRESS\",\n                        \"abbreviation\": \"ANC\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 328,\n                      \"percOfVotes\": 1.81,\n                      \"party\": {\n                        \"id\": \"938\",\n                        \"name\": \"AGANG SOUTH AFRICA\",\n                        \"abbreviation\": \"AGANG SA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 255,\n                      \"percOfVotes\": 1.41,\n                      \"party\": {\n                        \"id\": \"945\",\n                        \"name\": \"ECONOMIC FREEDOM FIGHTERS\",\n                        \"abbreviation\": \"EFF\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 198,\n                      \"percOfVotes\": 1.09,\n                      \"party\": {\n                        \"id\": \"4\",\n                        \"name\": \"VRYHEIDSFRONT PLUS\",\n                        \"abbreviation\": \"VF Plus\"\n                      }\n                    }\n                  }\n                ]\n              },\n              \"location\": {\n                \"id\": \"UHJvdmluY2VUeXBlOjk5\",\n                \"name\": \"Out of Country\"\n              }\n            }\n          }\n        ]\n      }\n    }\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nfunction Chart(container, width, height) {\n  var XaxisOffset = 70;\n  var YaxisOffset = 20;\n  var predefColors = [\"blue\", \"yellow\", \"red\"];\n  var svg = container.append(\"svg\")\n      .attr(\"width\", width + XaxisOffset)\n      .attr(\"height\", height + YaxisOffset);\n\n  var tooltipDiv;\n  if (document.getElementsByClassName(\"tooltip\")[0]) {\n    tooltipDiv = d3.select(\".tooltip\");\n  } else {\n    tooltipDiv = d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n      .style(\"opacity\", 0);\n  }\n\n  var x = d3.scaleBand()\n    .rangeRound([XaxisOffset, width])\n\n  var y = d3.scaleLinear()\n    .rangeRound([height, YaxisOffset]);\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n    .append(\"text\")\n    .attr(\"class\", className(\"percentage-label\"))\n    .attr(\"transform\", \"rotate(-90)\")\n    .text(\"PERCENTAGE VOTES\")\n    .attr(\"text-anchor\", \"middle\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n\n\n\n  var barSvg = svg.append(\"g\")\n    .attr(\"class\", className(\"bar-container\"));\n  var barTextSvg = svg.append(\"g\")\n    .attr(\"class\", className(\"bartext-container\"));\n\n  this.draw = function(chartData) {\n    x.domain(chartData.map(function (d) {\n        return d.name;\n      }));\n    y.domain([0, 100]);\n\n\t\tsvg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n\t\tsvg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n      .ticks(6)\n      .tickFormat(function(d) { return d + \"%\"; })\n    )\n\n    var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n\n    bars.exit()\n      .transition()\n      .duration(300)\n      .attr(\"y\", function(d) {\n        return y(0);\n      })\n      .attr(\"height\", 0)\n      .style(\"fill-opacity\", 1e-6)\n      .remove();\n\n    bars.enter()\n        .append(\"rect\")\n        .attr(\"class\", className(\"bar\"))\n        .attr(\"x\", function (d) {\n          return x(d.name)+x.bandwidth()/20;\n        })\n        .attr(\"width\", x.bandwidth()*9/10)\n        .attr(\"fill\", (d,i) => predefColors[i%predefColors.length])\n        .on(\"mousemove\", function(d) {\t\t\n            d3.select(this)\n              .attr(\"opacity\", 0.8);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            function formatPartyName(name) {\n              return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n            }\n            tooltipDiv.html(formatPartyName(d.partyInfo.name) + \" : \" + d.percOfVotes + \"%\")\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            d3.select(this)\n              .attr(\"opacity\", 1);\n            tooltipDiv.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n        })\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)        \n\n      barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n        .transition()\n        .duration(300)\n        .attr(\"y\", function (d) {\n          return y(Number(d.percOfVotes));\n        })\n        .attr(\"height\", function (d) {\n          return height - y(Number(d.percOfVotes));\n        })\n        \n      var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n\n      barTexts.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0) - 5;\n        })\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n\n      barTexts.enter().append(\"text\")\n        .attr(\"class\", className(\"bartext\"))\n        .attr(\"x\", function (d) {\n          return x(d.name)+x.bandwidth()/2;\n        })\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"y\", function(d) {\n          return y(0) - 5;\n        })\n      barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n        .text(function(d) {\n          return d.percOfVotes + \"%\";\n        })\n        .transition()\n        .duration(300)\n        .attr(\"y\", function (d) {\n          return y(Number(d.percOfVotes)) - 5;\n        })\n  }\n  this.destroy = function() {\n    svg.remove();\n  }\n}\n\nvar chart;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        regionName: \"Western Cape\",\n        width: 600,\n        height: 220\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionName) {\n        this.state.regionName = props.regionName;\n      }\n      if (props.width) {\n        this.state.width = props.width;\n      }\n      if (props.height) {\n        this.state.height = props.height;\n      }\n      setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.redrawChart = this.redrawChart.bind(this);\n    }\n  \n    componentDidMount() {\n      this.draw(this.getContainer(), this.state)\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      window.addEventListener(\"resize\", this.redrawChart, 200);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      window.removeEventListener(\"resize\", this.redrawChart);\n    }\n\n    redrawChart() {\n      var modifW = document.body.clientWidth, modifH = document.body.clientHeight/3;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), modifW, modifH);\n      this.setState({width: modifW, height: modifH});\n    };\n\n    handleRegionChange(event) {\n      this.setState({regionName: \"Eastern Cape\"})\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n      \n    render () {\n      return (\n          <div>\n            <div className={className(\"chart-title\")}>RACE FOR VOTES: </div>\n            <div ref=\"vizcontainer\" className={className(\"chart-body\")}></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      var self = this;\n      if (use_live_data) {\n        getVotesData({\n          numParties: props.numParties || 5,\n          regionName: props.regionName || \"Western Cape\",\n          regionType: props.regionType\n        }).then(function(data) {\n            self.drawGraph(container, props, data);\n        }).catch(error => console.error(error));\n      }\n      else {\n          self.drawGraph(container, props, js);\n      }\n    }\n\n    drawGraph(container, props, data) {\n        var chartData;\n        var results = data[\"data\"][\"allProvincialBallots\"].edges[0][\"node\"][\"partyResults\"][\"edges\"];\n        \n        chartData = results.map(function(node) {\n            var el = node[\"node\"];\n            return {\n                name: el[\"party\"][\"abbreviation\"],\n                validVotes: el[\"validVotes\"],\n                percOfVotes: el[\"percOfVotes\"],\n                partyInfo: el[\"party\"]\n            }\n        });\n\n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height);\n        chart.draw(chartData);\n    }\n}\n\nexport default BarChart;\n","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\"\n}\n\nexport default config;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventType: \"National\",\n            regionName: \"Western Cape\",\n            numParties: 5\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventType,\n            regionName,\n            numParties\n        } = this.state;\n        return (\n          <div>\n            <h3> Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event Type </label>\n                  <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"National\"\n                    onChange={e => this.setState({eventType: e.target.value})}/>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Location Name</label>\n                  <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"Western Cape\"\n                    onChange={e => this.setState({regionName: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script><script>showBarChart(document.getElementById(\"${elementId}\",\"${eventType}\",\"${regionName}\",${numParties}));</script>`}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\n\nexport default BarChartEmbed;\n\n\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"./map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\n\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          regionType: \"national\",\n          regionName: \"SA\",\n          parentProvinceName: \"\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.regionName) {\n            this.state.regionName = props.regionName;\n        }\n    }\n\n\n\n    drawGraph(container, props) {\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(regionName) {\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[regionName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.regionName);\n                case \"municipality\":\n                    return self.state.regionName + \".topojson\";\n                default:\n                    return null;\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv;\n        if (document.getElementsByClassName(\"tooltip\")[0]) {\n          tooltipDiv = d3.select(\".tooltip\");\n        } else {\n          tooltipDiv = d3.select(\"body\").append(\"div\")\t\n            .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n            .style(\"opacity\", 0);\n        }\n\n        console.log(\"process.env\", process.env)\n        console.log(\"fullRouteGeoJsonFile\", fullRouteGeoJsonFile);\n\n        var w = 1400;\n        var h = 700;\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\").style(\"background-color\",\"#ffffff\")\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h)\n            .classed(\"svg-content\", true);\n\n        var fo = svg.append(\"foreignObject\")\n            .attr(\"x\", w - 100)\n            .attr(\"y\", 10)\n            .attr(\"width\", 100)\n            .attr(\"height\", 30)\n            .attr(\"class\", \"map-controls\")\n        fo.append(\"xhtml:div\")\n            .append(\"button\")\n            .attr(\"class\", \"go-back\")\n            .html(\"go back\")\n            .on(\"click\", function() {\n                var regionType = self.state.regionType;\n                if (regionType === \"province\") {\n                    self.setState({regionType: \"national\", regionName: \"SA\"});\n                } else if (regionType === \"municipality\") {\n                    function getProvinceFromMunicipality(municipalityName) {\n                        return self.state.parentProvinceName;\n                    }\n                    self.setState({\n                        regionType: \"province\", \n                        regionName: getProvinceFromMunicipality(self.regionName)\n                    });\n                }\n            });\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n\n        Promise.all([geoJsonLoader]).then(function(values){ \n\n            console.log(\"json load Finished\");\n            var geoJsonData = values[0];\n\n            var getJsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.regionName]);\n            }\n\n            getJsonDataFeatures = geoJsonData.features;\n\n            console.log(\"getJsonDataFeatures\", getJsonDataFeatures);\n\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(getJsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", regionColor)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            if (self.state.regionType !== \"municipality\") {\n                //show place label\n                svg.selectAll(\".place-label\")\n                    .data(getJsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function(d) { \n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    })\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                var labelElements = document.getElementsByClassName(\"place-label\");\n\n                var regions = {};\n                var overlapCnt = {};\n                var i;\n\n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    regions[i] = labelElements[i].getBoundingClientRect();\n                }\n    \n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    for (var j = 0; j < i; j ++) {\n                        var rect1 = regions[i];\n                        var rect2 = regions[j];\n                        var overlap = !(rect1.right < rect2.left || \n                            rect1.left > rect2.right || \n                            rect1.bottom < rect2.top || \n                            rect1.top > rect2.bottom);\n                        if (overlap) {\n                            overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n                        }\n                    }\n                    if (overlapCnt[i] > 2) {\n                        labelElements[i].setAttribute(\"opacity\", 0)\n                    } else if (overlapCnt[i] > 0){\n                        labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n                    } else {\n    \n                    }\n                }\n            }\n\n            \n\t\t\t\t\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(getJsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n                    function regionName() {\n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    }\n                    tooltipDiv.html(regionName())\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    console.log(\"click event\", i, d.properties);\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            regionName: d.properties.SPROVINCE\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, newState);\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        function getMunicipalityName(properties) {\n                            return properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        newState = {\n                            regionType: \"municipality\", \n                            regionName: getMunicipalityName(d.properties),\n                            parentProvinceName: self.state.regionName\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, newState);\n                        document.dispatchEvent(event);\n\n                        self.setState(newState);\n                    } else {\n                        // function getMunicipalityRegionName(properties) {\n                        //     return properties.SMUNICIPAL.split(\"-\")[0].replace(/\\s/g, \"\");\n                        // }\n                        // var newState = {\n                        //     regionType: \"municipality-region\", \n                        //     regionName: getMunicipalityRegionName(d.properties),\n                        // }\n                        // var event = new CustomEvent(events.REGION_CHANGE, newState);\n                        // document.dispatchEvent(event);\n                    }\n                })\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        })\n\n        var redrawChart = function() {\n\n        };\n\n        window.addEventListener(\"resize\", redrawChart, 200);\n    }\n\n    draw(container, props) {\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.props)\n    }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        return (\n            <div className=\"map-container\">\n                <div>{this.state.regionName}</div>\n                <div className=\"loading-spinner\" ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n                <div ref=\"vizcontainer\" className=\"map\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            eventType: \"National\",\n            locationName: \"Western Cape\",\n            numParties: 5\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId\n        } = this.state;\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script><script>showMap(document.getElementById(\"${elementId}\"));</script>`}</span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BarChart width=\"600\" height=\"220\" regionName=\"Western Cape\" numParties={3}/>\n        <div className=\"barchartEmbed\">\n          <BarChartEmbed />\n        </div>\n        <Map />\n        <div className=\"mapEmbed\">\n          <MapEmbed />\n        </div>\n        <div id=\"sales-data\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Box.css\";\n\nclass Box extends Component {\n    draw() {\n        d3.select(this.refs.box)\n            .append(\"rect\")\n            .attr(\"height\", this.props.height)\n            .attr(\"width\", this.props.width)\n            .classed(this.props.className, true)\n            .classed(\"box\", true)\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n      \n    render () {\n        return (\n          <svg width={this.props.width} height={this.props.height}>\n            <g ref=\"box\"></g>\n          </svg>\n        )\n    }\n}\n\nexport default Box;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}