{"version":3,"sources":["components/BarChart/d3barchart.js","events/index.js","api/index.js","components/BarChart/barchart.js","utils/index.js","config/index.js","components/BarChart/barchartEmbed.js","components/Map/map.js","components/Map/mapEmbed.js","App.js","components/BarchartWithNavMap/barchartMap.js","serviceWorker.js","index.js"],"names":["Chart","container","width","height","className","tooltipDiv","predefColors","svg","append","attr","parseInt","document","getElementsByClassName","d3","style","x","rangeRound","y","YaxisOffset","text","barSvg","barTextSvg","this","draw","chartData","partyColorsData","partyColorByName","getFillColorFromPartyName","partyName","i","split","length","forEach","edge","node","name","colour","domain","map","d","select","transition","duration","call","ticks","tickFormat","bars","selectAll","concat","data","exit","remove","enter","bandwidth","partyInfo","on","html","toLowerCase","replace","l","toUpperCase","percOfVotes","pageX","pageY","Number","barTexts","destroy","events","client","ApolloClient","link","HttpLink","uri","useGETForQueries","headers","Content-Type","cache","InMemoryCache","getPartyColors","query","gql","_templateObject2","chart","originName","styles","refreshIntervalID","BarChart","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","assertThisInitialized","state","numParties","eventDescription","regionType","provinceName","muniName","muniCode","vdNumber","_this$getWidthHeightB","getWidthHeightByScreenSize","modifW","modifH","handleRegionChange","bind","handlePreviewEvent","redrawChart","self","getContainer","setInterval","addEventListener","window","console","log","removeEventListener","clearInterval","Math","min","body","clientWidth","_this$getWidthHeightB2","setState","event","newState","detail","refs","vizcontainer","react_default","a","createElement","getRegionName","ref","dataLoaders","options","_templateObject3","_templateObject4","_templateObject5","_templateObject6","getVotesDataM","partyColorsLoader","push","Promise","all","then","values","votesData","drawGraph","catch","error","firstEdge","edges","nodeData","slice","el","validVotes","parseVotesData","Component","config","DOMAIN","originClassName","bootstrapStyles","BarChartEmbed","elementId","electionEvents","_templateObject","e","target","value","CustomEvent","dispatchEvent","_this2","_this$state","type","placeholder","onChange","onEventDescriptionChange","item","key","onRegionTypeChange","disabled","onClick","onPreview","regionColor","Map","disableNavigation","selectionData","loading","react_loading_default","color","display","nationalMapFile","fullRouteGeoJsonFile","Limpopo","Mpumalanga","Gauteng","KwaZulu-Natal","North West","Free State","Eastern Cape","Northern Cape","Western Cape","getRegionFileName","getLoadingSpinner","process","classed","_templateObject7","_templateObject8","muniRegName","_templateObject9","getMainParties","geoJsonData","locationToMainParty","parseMainPartyData","getJsonDataFeatures","indexOf","topojson","objects","features","projection","fitSize","path","properties","SPROVINCE","partyColor","code","smunicipal","PKLVDNUMBE","getMunicipalityVdNumber","center","projectionCenter","geometry","polylabel","coordinates","SMUNICIPAL","labelElements","regions","overlapCnt","getBoundingClientRect","j","rect1","rect2","right","left","bottom","top","setAttribute","innerHTML","w","muniImuniCodeD","MapEmbed","checked","App","BarChart_barchart","regionName","Map_map","BarChart_barchartEmbed","Map_mapEmbed","id","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17460619.chunk.js","sourcesContent":["import * as d3 from \"d3\";\n\nexport function Chart(container, width, height, className) {\n    var XaxisOffset = 70;\n    var YaxisOffset = 20;\n    var predefColors = [\"blue\", \"yellow\", \"red\"];\n    var svg = container.append(\"svg\")\n        .attr(\"width\", parseInt(width) + XaxisOffset)\n        .attr(\"height\", parseInt(height) + YaxisOffset);\n  \n    var tooltipDiv;\n    if (document.getElementsByClassName(\"tooltip\")[0]) {\n      tooltipDiv = d3.select(\".tooltip\");\n    } else {\n      tooltipDiv = d3.select(\"body\").append(\"div\")\t\n        .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n        .style(\"opacity\", 0);\n    }\n  \n    var x = d3.scaleBand()\n      .rangeRound([XaxisOffset, width])\n  \n    var y = d3.scaleLinear()\n      .rangeRound([height, YaxisOffset]);\n  \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(20,\"+(height/2+YaxisOffset/2)+\")\")\n      .append(\"text\")\n      .attr(\"class\", className(\"percentage-label\"))\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(\"PERCENTAGE VOTES\")\n      .attr(\"text-anchor\", \"middle\");\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + XaxisOffset +\", 0)\")\n  \n    var barSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bar-container\"));\n    var barTextSvg = svg.append(\"g\")\n      .attr(\"class\", className(\"bartext-container\"));\n  \n    this.draw = function(chartData, partyColorsData) {\n      var partyColorByName = {};\n      if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n        partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n          partyColorByName[edge.node.name] = edge.node.colour;\n        })\n      }\n\n      function getFillColorFromPartyName(partyName, i) {\n        return partyColorByName[partyName.split(\"/\")[0]] || predefColors[i%predefColors.length];\n      }\n      x.domain(chartData.map(function (d) {\n          return d.name;\n        }));\n      y.domain([0, 100]);\n  \n          svg.select(\".x.axis\").transition().duration(300).call(d3.axisBottom(x));\n          svg.select(\".y.axis\").transition().duration(300).call(d3.axisLeft(y)\n        .ticks(6)\n        .tickFormat(function(d) { return d + \"%\"; })\n      )\n  \n      var bars = barSvg.selectAll(`.${className(\"bar\")}`).data(chartData);\n  \n      bars.exit()\n        .transition()\n        .duration(300)\n        .attr(\"y\", function(d) {\n          return y(0);\n        })\n        .attr(\"height\", 0)\n        .style(\"fill-opacity\", 1e-6)\n        .remove();\n  \n      bars.enter()\n          .append(\"rect\")\n          .attr(\"class\", className(\"bar\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/20;\n          })\n          .attr(\"width\", x.bandwidth()*9/10)\n          .attr(\"fill\", (d,i) => {\n            return getFillColorFromPartyName(d.partyInfo.name, i);\n          })\n          .on(\"mousemove\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 0.8);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", .9);\t\t\n              function formatPartyName(name) {\n                return name.split(\"/\")[0].toLowerCase().replace(/\\b\\w/g, function(l){ return l.toUpperCase() })\n              }\n              tooltipDiv.html(formatPartyName(d.partyInfo.name) + \" : \" + d.percOfVotes + \"%\")\n                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n              })\t\t\t\t\t\n          .on(\"mouseout\", function(d) {\t\t\n              d3.select(this)\n                .attr(\"opacity\", 1);\n              tooltipDiv.transition()\t\t\n                  .duration(200)\t\t\n                  .style(\"opacity\", 0);\t\n          })\n          .attr(\"y\", function(d) {\n            return y(0);\n          })\n          .attr(\"height\", 0)        \n  \n        barSvg.selectAll(`.${className(\"bar\")}`).data(chartData)\n          .attr(\"fill\", (d, i) => getFillColorFromPartyName(d.partyInfo.name, i))\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(d.percOfVotes));\n          })\n          .attr(\"height\", function (d) {\n            return height - y(Number(d.percOfVotes));\n          })\n          \n        var barTexts = barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData);\n  \n        barTexts.exit()\n          .transition()\n          .duration(300)\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n          .style(\"fill-opacity\", 1e-6)\n          .remove();\n  \n        barTexts.enter().append(\"text\")\n          .attr(\"class\", className(\"bartext\"))\n          .attr(\"x\", function (d) {\n            return x(d.name)+x.bandwidth()/2;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"y\", function(d) {\n            return y(0) - 5;\n          })\n        barTextSvg.selectAll(`.${className(\"bartext\")}`).data(chartData)\n          .text(function(d) {\n            return d.percOfVotes + \"%\";\n          })\n          .transition()\n          .duration(300)\n          .attr(\"y\", function (d) {\n            return y(Number(d.percOfVotes)) - 5;\n          })\n    }\n    this.destroy = function() {\n      svg.remove();\n    }\n  }","const REGION_CHANGE = \"region-change\";\nconst BARCHART_PREVIEW = \"barchart-preview\";\nconst MAP_PREVIEW = \"map-preview\";\n\nexport default {\n    REGION_CHANGE,\n    BARCHART_PREVIEW,\n    MAP_PREVIEW\n};","import { ApolloClient } from \"apollo-client\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport gql from \"graphql-tag\"\n\n\nvar API_URI = \"https://elections2019.xyz/graphql\";\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: API_URI, useGETForQueries: true, headers: {\"Content-Type\" : \"application/graphql\" } }),\n  cache: new InMemoryCache()\n})\n\nexport function getElectionEvents() {\n  return client.query({\n    query: gql`\n    {\n      allEvents {\n        description\n      }\n    }\n    `\n  })\n}\n\nexport function getPartyColors() {\n  return client.query({\n    query: gql`\n    {\n      allParties {\n        edges{\n          node{\n            name\n            colour\n          }\n        }\n      }\n    }\n    `\n  })\n}\n\nexport function getVotesDataM(options) {\n  var eventDescription = options.eventDescription;\n  if (!eventDescription)\n  return;\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allBallots(\n          event_Description:\"${eventDescription}\"\n        ){\n          edges{\n            node{\n              partyResults {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n                \n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          event_Description:\"${eventDescription}\",\n          location_Name_Icontains:\"${options.provinceName}\"\n        ){\n          edges{\n            node{\n              partyResults {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniCode = options.muniName.split(\" - \")[0];\n\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          event_Description:\"${eventDescription}\",\n          location_Province_Name:\"${options.provinceName}\", \n          location_Code: \"${muniCode}\"\n        ) {\n          edges{\n            node {\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality-vd\") {\n    return client.query({\n      query: gql`\n      {\n        allVotingDistrictBallots(\n        event_Description:\"${eventDescription}\",\n        location_Id:\"${options.vdNumber}\", \n        location_Ward_Municipality_Name_Icontains:\"${options.muniCode}\") {\n          edges{\n            node{\n              location {\n                vdNumber\n              }\n              partyResults {\n                edges{\n                  node{\n                    party{\n                      name\n                    }\n                    percOfVotes\n                  }\n                }  \n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  }\n}\n\nexport function getMainParties(options) {\n  var eventDescription = options.eventDescription;\n  if (!eventDescription)\n    return;\n  if (options.regionType == \"national\") {\n    return client.query({\n      query: gql`\n      {\n        allProvincialBallots(\n          event_Description:\"${eventDescription}\"\n        ){\n          edges{\n            node{\n              partyResults {\n                edges{\n                  node{\n                    validVotes\n                    percOfVotes\n                    party {\n                      id\n                      name\n                      abbreviation\n                    }\n                  }\n                }\n              }\n              location {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"province\") {\n    return client.query({\n      query: gql`\n      {\n        allMunicipalBallots(\n          event_Description:\"${eventDescription}\",\n          location_Province_Name:\"${options.provinceName}\"\n        ) {\n          edges{\n            node {\n              partyResults {\n                edges{\n                  node{\n                    party {               \n                      name\n                      abbreviation\n                    }\n                    validVotes\n                    percOfVotes\n                  }\n                }\n                \n              }\n              location {\n                code\n                name\n                longName\n              }\n            }\n          }\n        }\n      }\n      `\n    })\n  } else if (options.regionType == \"municipality\") {\n    var muniRegName = options.muniName.split(\" - \")[1];\n      return client.query({\n        query: gql`\n        {\n          allVotingDistrictBallots( \n          event_Description:\"${eventDescription}\",\n          location_Ward_Municipality_Name_Icontains:\"${muniRegName}\") {\n            edges{\n              node{\n                location {\n                  vdNumber\n                }\n                partyResults {\n                  edges{\n                    node{\n                      party{\n                        name\n                        abbreviation\n                      }\n                    }\n                  }  \n                }\n              }\n            }\n          }\n        }\n        `\n      })\n  }\n}\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport styles from \"./barchart.css\";\nimport {Chart} from \"./d3barchart\";\n\nimport events from \"../../events\";\nimport {\n  getVotesDataM,\n  getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData\n} from \"../../utils\";\n\n\nvar dataRefreshTime = 30 * 1000;\n\n\n// for the purposes of the proof of concept - production data should be live\nvar use_live_data = true;\n\nvar js = {\n    \"data\": {\n      \"allProvincialBallots\": {\n        \"edges\": [\n          {\n            \"node\": {\n              \"partyResults\": {\n                \"edges\": [\n                  {\n                    \"node\": {\n                      \"validVotes\": 15311,\n                      \"percOfVotes\": 84.44,\n                      \"party\": {\n                        \"id\": \"52\",\n                        \"name\": \"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE\",\n                        \"abbreviation\": \"DA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 1508,\n                      \"percOfVotes\": 8.32,\n                      \"party\": {\n                        \"id\": \"7\",\n                        \"name\": \"AFRICAN NATIONAL CONGRESS\",\n                        \"abbreviation\": \"ANC\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 328,\n                      \"percOfVotes\": 1.81,\n                      \"party\": {\n                        \"id\": \"938\",\n                        \"name\": \"AGANG SOUTH AFRICA\",\n                        \"abbreviation\": \"AGANG SA\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 255,\n                      \"percOfVotes\": 1.41,\n                      \"party\": {\n                        \"id\": \"945\",\n                        \"name\": \"ECONOMIC FREEDOM FIGHTERS\",\n                        \"abbreviation\": \"EFF\"\n                      }\n                    }\n                  },\n                  {\n                    \"node\": {\n                      \"validVotes\": 198,\n                      \"percOfVotes\": 1.09,\n                      \"party\": {\n                        \"id\": \"4\",\n                        \"name\": \"VRYHEIDSFRONT PLUS\",\n                        \"abbreviation\": \"VF Plus\"\n                      }\n                    }\n                  }\n                ]\n              },\n              \"location\": {\n                \"id\": \"UHJvdmluY2VUeXBlOjk5\",\n                \"name\": \"Out of Country\"\n              }\n            }\n          }\n        ]\n      }\n    }\n}\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\n\n\nvar chart;\nvar partyColorsData;\nvar refreshIntervalID = 0;\n\nclass BarChart extends Component {\n\n    constructor(props) {\n      super(props);\n      var self = this;\n      this.state = {\n        numParties: 5,\n        eventDescription: \"2014 National Election\",\n        regionType: \"national\",\n        provinceName: \"\",\n        muniName: \"\",\n        muniCode: \"\",\n        vdNumber: \"\",\n      }\n      if (props.numParties) {\n        this.state.numParties = props.numParties;\n      }\n      if (props.regionType) {\n        this.state.regionType = props.regionType;\n      }\n      if (props.provinceName) {\n        this.state.provinceName = props.provinceName;\n      }\n      if (props.muniName) {\n        this.state.muniName = props.muniName;\n      }\n      if (props.muniCode) {\n        this.state.muniCode = props.muniCode;\n      }\n      if (props.vdNumber) {\n        this.state.vdNumber = props.vdNumber;\n      }\n      if (props.width && props.height) {\n        this.state.width = props.width;\n        this.state.height = props.height;\n      } else {\n        var {\n          modifW,\n          modifH\n        } = this.getWidthHeightByScreenSize();\n        this.state.width = modifW;\n        this.state.height = modifH;\n      }\n      this.handleRegionChange = this.handleRegionChange.bind(this);\n      this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n      this.redrawChart = this.redrawChart.bind(this);\n    }\n  \n    componentDidMount() {\n      var self = this;\n      this.draw(this.getContainer(), this.state);\n      refreshIntervalID = setInterval(() => {\n        self.draw(self.getContainer(), self.state)\n      }, dataRefreshTime);\n      document.addEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.addEventListener(events.BARCHART_PREVIEW, this.handlePreviewEvent);\n      window.addEventListener(\"resize\", this.redrawChart, 200);\n    }\n\n    componentDidUpdate() {\n      this.draw(this.getContainer(), this.state)\n    }\n\n    componentWillUnmount() {\n      console.log(\"barchart unmount\");\n      chart = null;\n      document.removeEventListener(events.REGION_CHANGE, this.handleRegionChange);\n      document.removeEventListener(events.BARCHART_PREVIEW, this.handlePreviewEvent);\n      window.removeEventListener(\"resize\", this.redrawChart);\n      clearInterval(refreshIntervalID);\n    }\n\n    getWidthHeightByScreenSize() {\n      var modifW = Math.min(810, document.body.clientWidth- 350);\n      if (document.body.clientWidth < 775)\n        modifW = document.body.clientWidth - 50;\n      var modifH = modifW/3.5;\n      return {\n        modifW,\n        modifH\n      }\n    }\n\n    redrawChart() {\n      var {\n        modifW,\n        modifH\n      } = this.getWidthHeightByScreenSize();\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), modifW, modifH, className);\n      this.setState({width: modifW, height: modifH});\n    };\n\n    handleRegionChange(event) {\n      var newState = event.detail;\n      this.setState(newState)\n    }\n\n    handlePreviewEvent(event) {\n      var newState = event.detail;\n      if (chart)\n        chart.destroy();\n      chart = new Chart(this.getContainer(), this.state.width, this.state.height, className);\n      this.setState(newState)\n    }\n\n    getContainer() {\n      return d3.select(this.refs.vizcontainer)\n    }\n\n    getRegionName() {\n      if (this.state.regionType == \"national\") {\n        return \"South Africa\";\n      }\n      if (this.state.regionType == \"province\") {\n        return this.state.provinceName;\n      }\n      if (this.state.regionType == \"municipality\") {\n        return this.state.muniName;\n      }\n      if (this.state.regionType == \"municipality-vd\") {\n        return this.state.muniName + \"-\" + this.state.vdNumber;\n      }\n    }\n      \n    render () {\n      return (\n          <div className=\"barchart\">\n            <div className={className(\"chart-title\")}>RACE FOR VOTES ({this.getRegionName()}): </div>\n            <div \n              ref=\"vizcontainer\" \n              className={className(\"chart-body\")} \n              style={{width: this.state.width, height: this.state.height}}></div>\n          </div>\n        )\n    }\n\n    draw(container, props) {\n      console.log(\"drawing ...barchart\");\n      var self = this;\n      if (use_live_data) {        \n        var votesDataLoader = getVotesDataM(props);\n        var dataLoaders = [votesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        Promise.all(dataLoaders).then(function(values){ \n          var votesData = values[0];\n          partyColorsData = partyColorsData || values[1];          \n          self.drawGraph(container, props, votesData, partyColorsData);\n        }).catch(error => console.error(error));\n      }\n      else {\n        self.drawGraph(container, props, js, null);\n      }\n    }\n\n    drawGraph(container, props, data, partyColorsData) {\n        var chartData = parseVotesData(data, props);\n       \n        var width = parseInt(props.width);\n        var height = parseInt(props.height);\n        if (!chart)\n          chart = new Chart(container, width, height, className);\n        console.log(\"chart component\", chart)\n        chart.draw(chartData, partyColorsData);\n    }\n}\n\nexport default BarChart;\n","export function parseVotesData(data, props) {\n    var results, firstEdge;\n    var regionType = props.regionType;\n    if (regionType == \"national\") {\n      firstEdge = data[\"data\"][\"allBallots\"].edges[0];\n    } else if (regionType == \"province\") {\n      firstEdge = data[\"data\"][\"allProvincialBallots\"].edges[0];\n    } else if (regionType == \"municipality\") {\n      firstEdge= data[\"data\"][\"allMunicipalBallots\"].edges[0];\n    } else { //\"municipality-vd\"\n      firstEdge = data[\"data\"][\"allVotingDistrictBallots\"].edges[0];\n    }\n    if (!firstEdge){\n      console.error(\"party data is empty!!\");\n      return null;\n    }\n\n    var nodeData = firstEdge[\"node\"];\n    var partyResults = nodeData[\"partyResults\"] || nodeData[\"topResult\"];\n    results = partyResults[\"edges\"];\n    results = results.slice(0, props.numParties);\n\n    return results.map(function(node) {\n        var el = node[\"node\"];\n        return {\n            name: el[\"party\"][\"abbreviation\"],\n            validVotes: el[\"validVotes\"],\n            percOfVotes: el[\"percOfVotes\"],\n            partyInfo: el[\"party\"]\n        }\n    });\n}\n\nexport function parseMainPartyData(data, props) {\n    if (!data)  return null;\n    var locationToMainParty = {};\n    var edges;\n    var regionType = props.regionType;\n    console.log(\"parseMainPartyData\", data, regionType);\n    if (regionType === \"national\") {\n        edges = data[\"data\"][\"allProvincialBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var provinceName = node[\"location\"][\"name\"];\n            var partyResults = node[\"partyResults\"] || node[\"topResult\"]; \n            var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[provinceName] = partyName;\n        })\n    } else if (regionType === \"province\") {\n        edges = data[\"data\"][\"allMunicipalBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var muniCode = node[\"location\"][\"code\"];\n            var partyResults = node[\"partyResults\"] || node[\"topResult\"]; \n            var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[muniCode] = partyName;\n        })\n    } else {// \"municipality\"\n        edges = data[\"data\"][\"allVotingDistrictBallots\"].edges;\n        edges.forEach(function(edge) {\n            var node = edge.node;\n            var vdNumber = node[\"location\"][\"vdNumber\"];\n            var partyResults = node[\"partyResults\"] || node[\"topResult\"]; \n            var partyName = partyResults[\"edges\"][0][\"node\"][\"party\"][\"name\"];\n            locationToMainParty[vdNumber] = partyName;\n        })\n    }\n    return locationToMainParty;\n}","var config = {\n    \"DOMAIN\": \"https://sabc-eds.github.io/elections-dataviz\"\n}\n\nexport default config;","import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./barchartEmbed.css\";\nimport events from \"../../events\";\nimport {\n    getElectionEvents\n} from \"../../api\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass BarChartEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            elementId: \"root\",\n            eventDescription: \"2014 National Election\",\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n            muniCode: \"\",\n            vdNumber: \"\",\n            numParties: 5,\n\n            electionEvents: []\n        }\n        getElectionEvents()\n            .then(function(data) {\n                var electionEvents = data[\"data\"][\"allEvents\"].map(edge => edge[\"description\"])\n                self.setState({electionEvents});\n            }).catch(error => console.error(error));\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onEventDescriptionChange(e) {\n        this.setState({eventDescription: e.target.value});\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        var event = new CustomEvent(events.BARCHART_PREVIEW, { detail: this.state });\n        document.dispatchEvent(event);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,\n            eventDescription,\n            regionType,            \n            provinceName,\n            muniName,\n            muniCode,\n            vdNumber,\n            numParties,\n            electionEvents\n        } = this.state;\n        return (\n          <div>\n            <h3> Barchart Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n              <div className={className(\"form-group\")}>\n                  <label>Event </label>\n                  <select className={className(\"form-control\")} \n                     value={eventDescription}\n                     onChange={this.onEventDescriptionChange.bind(this)}>\n                        {\n                            electionEvents.map(item => {\n                                return (<option key={item} value={item}>{item}</option>)\n                            })\n                        }\n                  </select>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                        <option value=\"municipality-vd\">voting district</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"City of Cape Town\"\n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Code</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"CPT\"\n                            value={muniCode}\n                            onChange={e => this.setState({muniCode: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              {\n                  (regionType == \"municipality-vd\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Voting District Number</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"97860055\"\n                            value={vdNumber}\n                            onChange={e => this.setState({vdNumber: e.target.value})} \n                            disabled={(regionType==\"national\")}/>\n                    </div>\n              }\n              <div className={className(\"form-group\")}>\n                  <label>Number Of Parties</label>\n                  <input \n                    type=\"number\" \n                    className={className(\"form-control\")} \n                    placeholder=\"5\"\n                    value={numParties}\n                    onChange={e => this.setState({numParties: e.target.value})} />\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n              <div className={className(\"form-group\")}>\n                  <label>Embed Code</label>\n                  <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>showBarChart(\n                        document.getElementById(\"${elementId}\"),\n                        {\n                            eventDescription: \"${eventDescription}\",\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                            muniCode: \"${muniCode}\",\n                            vdNumber: \"${vdNumber}\",\n                            numParties: \"${numParties}\",\n                            width: 600,\n                            height: 220\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}</span>\n                  </div>\n              </div>\n          </div>\n        )\n    }\n}\nexport default BarChartEmbed;","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { SideNav, Nav } from \"react-sidenav\";\n\nimport config from \"../../config\";\nimport polylabel from \"polylabel\";\nimport styles from \"./map.css\";\nimport events from \"../../events\";\nimport ReactLoading from \"react-loading\";\nimport {\n    getMainParties,\n    getPartyColors\n} from \"../../api\";\nimport {\n  parseVotesData,\n  parseMainPartyData\n} from \"../../utils\";\n\nvar regionColor = \"#9c9c9c\";\nvar regionBorderColor = \"#eeeeee\";\nvar partyColorsData;\n\nfunction className(originName) {\n  return styles[originName] || originName;\n}\n\nvar provincesData = [\n    {\n        \"name\": \"Limpopo\",\n        \"abbreviation\": \"LIM\",\n        \"munis\": [{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM331 - Greater Giyani [Giyani]\",\"muniCode\":\"LIM331\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM332 - Greater Letaba [Duiwelskloof]\",\"muniCode\":\"LIM332\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM333 - Greater Tzaneen [Tzaneen]\",\"muniCode\":\"LIM333\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM334 - Ba-Phalaborwa [Phalaborwa]\",\"muniCode\":\"LIM334\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM335 - Maruleng [Hoedspruit]\",\"muniCode\":\"LIM335\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM341 - Musina [Messina]\",\"muniCode\":\"LIM341\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM342 - Mutale [Mutale-Masisi]\",\"muniCode\":\"LIM342\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM343 - Thulamela [Thohoyandou]\",\"muniCode\":\"LIM343\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM344 - Makhado [Louis Trichardt]\",\"muniCode\":\"LIM344\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM351 - Blouberg [Bochum/My Darling]\",\"muniCode\":\"LIM351\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM352 - Aganang [Moletji/Matlala]\",\"muniCode\":\"LIM352\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM353 - Molemole [Dendron/Dikgale]\",\"muniCode\":\"LIM353\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM354 - Polokwane [Pietersburg]\",\"muniCode\":\"LIM354\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM355 - Lepele-Nkumpi [Lebowakgomo]\",\"muniCode\":\"LIM355\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM361 - Thabazimbi [Thabazimbi]\",\"muniCode\":\"LIM361\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM362 - Lephalale [Ellisras]\",\"muniCode\":\"LIM362\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM364 - Mookgopong [Naboomspruit]\",\"muniCode\":\"LIM364\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM365 - Modimolle [Nylstroom]\",\"muniCode\":\"LIM365\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM366 - Bela-Bela [Warmbad]\",\"muniCode\":\"LIM366\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM367 - Mogalakwena [Potgietersrus]\",\"muniCode\":\"LIM367\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM471 - Ephraim Mogale [Marble Hall]\",\"muniCode\":\"LIM471\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM472 - Elias Motsoaledi [Groblersdal]\",\"muniCode\":\"LIM472\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM473 - Makhuduthamaga [Ngwaritsi]\",\"muniCode\":\"LIM473\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM474 - Fetakgomo [Fetakgomo ]\",\"muniCode\":\"LIM474\"},{\"provinceName\":\"Limpopo\",\"muniName\":\"LIM475 - Greater Tubatse [Burgersfort/Ohrigstad/Eastern Tubatse]\",\"muniCode\":\"LIM475\"}]\n    },\n    {\n        \"name\": \"Mpumalanga\",\n        \"abbreviation\": \"MP\",\n        \"munis\": [{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP301 - Albert Luthuli [Elukwatini/Carolina]\",\"muniCode\":\"MP301\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP302 - Msukaligwa [Ermelo]\",\"muniCode\":\"MP302\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP303 - Mkhondo [Piet Retief]\",\"muniCode\":\"MP303\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP304 - Pixley Ka Seme [Volksrust]\",\"muniCode\":\"MP304\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP305 - Lekwa [Standerton]\",\"muniCode\":\"MP305\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP306 - Dipaleseng [Balfour]\",\"muniCode\":\"MP306\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP307 - Govan Mbeki [Highveld Ridge]\",\"muniCode\":\"MP307\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP311 - Delmas [Delmas]\",\"muniCode\":\"MP311\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP312 - Emalahleni [Witbank]\",\"muniCode\":\"MP312\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP313 - Steve Tshwete [Middelburg]\",\"muniCode\":\"MP313\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP314 - Emakhazeni [Belfast]\",\"muniCode\":\"MP314\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP315 - Thembisile [KwaMhlanga]\",\"muniCode\":\"MP315\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP316 - Dr JS Moroka [Mdutjana]\",\"muniCode\":\"MP316\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP321 - Thaba Chweu [Sabie]\",\"muniCode\":\"MP321\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP322 - Mbombela [Nelspruit]\",\"muniCode\":\"MP322\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP323 - Umjindi [Barberton]\",\"muniCode\":\"MP323\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP324 - Nkomazi [Nkomazi]\",\"muniCode\":\"MP324\"},{\"provinceName\":\"Mpumalanga\",\"muniName\":\"MP325 - Bushbuckridge [Bushbuckridge]\",\"muniCode\":\"MP325\"}]\n    },\n    {\n        \"name\": \"Gauteng\",\n        \"abbreviation\": \"GT\",\n        \"munis\": [{\"provinceName\":\"Gauteng\",\"muniName\":\"EKU - Ekurhuleni [East Rand]\",\"muniCode\":\"EKU\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT421 - Emfuleni [Vereeniging]\",\"muniCode\":\"GT421\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT422 - Midvaal [Meyerton]\",\"muniCode\":\"GT422\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT423 - Lesedi [Heidelberg]\",\"muniCode\":\"GT423\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT481 - Mogale City [Krugersdorp]\",\"muniCode\":\"GT481\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT482 - Randfontein [Randfontein]\",\"muniCode\":\"GT482\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT483 - Westonaria [Westonaria]\",\"muniCode\":\"GT483\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"GT484 - Merafong City [Carletonville]\",\"muniCode\":\"GT484\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"JHB - City of Johannesburg [Johannesburg]\",\"muniCode\":\"JHB\"},{\"provinceName\":\"Gauteng\",\"muniName\":\"TSH - Tshwane Metro [Pretoria]\",\"muniCode\":\"TSH\"}]\n    },\n    {\n        \"name\": \"KwaZulu-Natal\",\n        \"abbreviation\": \"KZN\",\n        \"munis\": [{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"ETH - eThekwini [Durban Metro]\",\"muniCode\":\"ETH\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN211 - Vulamehlo [Dududu]\",\"muniCode\":\"KZN211\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN212 - Umdoni [Scottburgh]\",\"muniCode\":\"KZN212\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN213 - Umzumbe [Umzumbe]\",\"muniCode\":\"KZN213\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN214 - UMuziwabantu [Harding]\",\"muniCode\":\"KZN214\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN215 - Ezinqoleni [Izinqolweni]\",\"muniCode\":\"KZN215\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN216 - Hibiscus Coast [Port Shepstone]\",\"muniCode\":\"KZN216\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN221 - uMshwathi [Wartburg]\",\"muniCode\":\"KZN221\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN222 - uMngeni [Howick]\",\"muniCode\":\"KZN222\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN223 - Mooi Mpofana [Mooirivier]\",\"muniCode\":\"KZN223\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN224 - Impendle [Impendle]\",\"muniCode\":\"KZN224\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN225 - Msunduzi [Pietermaritzburg]\",\"muniCode\":\"KZN225\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN226 - Mkhambathini [Camperdown]\",\"muniCode\":\"KZN226\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN227 - Richmond [Richmond]\",\"muniCode\":\"KZN227\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN232 - Emnambithi/Ladysmith [Ladysmith]\",\"muniCode\":\"KZN232\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN233 - Indaka [Waaihoek]\",\"muniCode\":\"KZN233\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN234 - Umtshezi [Estcourt]\",\"muniCode\":\"KZN234\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN235 - Okhahlamba [Bergville]\",\"muniCode\":\"KZN235\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN236 - Imbabazane [Loskop]\",\"muniCode\":\"KZN236\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN241 - Endumeni [Dundee]\",\"muniCode\":\"KZN241\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN242 - Nqutu [Nqutu]\",\"muniCode\":\"KZN242\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN244 - Msinga [Pomeroy]\",\"muniCode\":\"KZN244\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN245 - Umvoti [Greytown]\",\"muniCode\":\"KZN245\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN252 - Newcastle [Newcastle]\",\"muniCode\":\"KZN252\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN253 - eMadlangeni [Utrecht]\",\"muniCode\":\"KZN253\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN254 - Dannhauser [Durnacol]\",\"muniCode\":\"KZN254\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN261 - eDumbe [Paulpietersburg]\",\"muniCode\":\"KZN261\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN262 - UPhongolo [Pongola]\",\"muniCode\":\"KZN262\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN263 - Abaqulusi [Vryheid]\",\"muniCode\":\"KZN263\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN265 - Nongoma [Nongoma]\",\"muniCode\":\"KZN265\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN266 - Ulundi [Ulundi]\",\"muniCode\":\"KZN266\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN271 - Umhlabuyalingana [Emangusi]\",\"muniCode\":\"KZN271\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN272 - Jozini [Mkuze]\",\"muniCode\":\"KZN272\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN273 - The Big 5 False Bay [Hluhluwe]\",\"muniCode\":\"KZN273\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN274 - Hlabisa [Somkele]\",\"muniCode\":\"KZN274\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN275 - Mtubatuba [Mtubatuba]\",\"muniCode\":\"KZN275\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN281 - Mfolozi [KwaMbonambi]\",\"muniCode\":\"KZN281\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN282 - uMhlathuze [Richards Bay]\",\"muniCode\":\"KZN282\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN283 - Ntambana [Ntambana]\",\"muniCode\":\"KZN283\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN284 - uMlalazi [Eshowe]\",\"muniCode\":\"KZN284\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN285 - Mthonjaneni [Melmoth]\",\"muniCode\":\"KZN285\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN286 - Nkandla [Nkandla]\",\"muniCode\":\"KZN286\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN291 - Mandeni [Mandeni]\",\"muniCode\":\"KZN291\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN292 - KwaDukuza [Stanger]\",\"muniCode\":\"KZN292\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN293 - Ndwedwe [Ndwedwe]\",\"muniCode\":\"KZN293\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN294 - Maphumulo [Maphumulo]\",\"muniCode\":\"KZN294\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN431 - Ingwe [Creighton]\",\"muniCode\":\"KZN431\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN432 - Kwa Sani [Underberg]\",\"muniCode\":\"KZN432\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN433 - Greater Kokstad [Kokstad]\",\"muniCode\":\"KZN433\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN434 - Ubuhlebezwe [Ixopo]\",\"muniCode\":\"KZN434\"},{\"provinceName\":\"KwaZulu-Natal\",\"muniName\":\"KZN435 - Umzimkhulu [Umzimkulu]\",\"muniCode\":\"KZN435\"}]\n    },\n    {\n        \"name\": \"North West\",\n        \"abbreviation\": \"NW\",\n        \"munis\": [{\"provinceName\":\"North West\",\"muniName\":\"NW371 - Moretele [Makapanstad]\",\"muniCode\":\"NW371\"},{\"provinceName\":\"North West\",\"muniName\":\"NW372 - Madibeng [Brits]\",\"muniCode\":\"NW372\"},{\"provinceName\":\"North West\",\"muniName\":\"NW373 - Rustenburg [Rustenburg]\",\"muniCode\":\"NW373\"},{\"provinceName\":\"North West\",\"muniName\":\"NW374 - Kgetlengrivier [Koster]\",\"muniCode\":\"NW374\"},{\"provinceName\":\"North West\",\"muniName\":\"NW375 - Moses Kotane [Mogwase]\",\"muniCode\":\"NW375\"},{\"provinceName\":\"North West\",\"muniName\":\"NW381 - Ratlou [Setlagole]\",\"muniCode\":\"NW381\"},{\"provinceName\":\"North West\",\"muniName\":\"NW382 - Tswaing [Delareyville]\",\"muniCode\":\"NW382\"},{\"provinceName\":\"North West\",\"muniName\":\"NW383 - Mafikeng [Mafikeng]\",\"muniCode\":\"NW383\"},{\"provinceName\":\"North West\",\"muniName\":\"NW384 - Ditsobotla [Lichtenburg]\",\"muniCode\":\"NW384\"},{\"provinceName\":\"North West\",\"muniName\":\"NW385 - Ramotshere Moiloa [Zeerust]\",\"muniCode\":\"NW385\"},{\"provinceName\":\"North West\",\"muniName\":\"NW392 - Naledi [Vryburg]\",\"muniCode\":\"NW392\"},{\"provinceName\":\"North West\",\"muniName\":\"NW393 - Mamusa [Schweizer-Reneke]\",\"muniCode\":\"NW393\"},{\"provinceName\":\"North West\",\"muniName\":\"NW394 - Greater Taung [Reivilo]\",\"muniCode\":\"NW394\"},{\"provinceName\":\"North West\",\"muniName\":\"NW396 - Lekwa-Teemane [Christiana]\",\"muniCode\":\"NW396\"},{\"provinceName\":\"North West\",\"muniName\":\"NW397 - NW397 Local Municipality [Ganyesa/Pomfret]\",\"muniCode\":\"NW397\"},{\"provinceName\":\"North West\",\"muniName\":\"NW401 - Ventersdorp [Ventersdorp]\",\"muniCode\":\"NW401\"},{\"provinceName\":\"North West\",\"muniName\":\"NW402 - Tlokwe [Potchefstroom]\",\"muniCode\":\"NW402\"},{\"provinceName\":\"North West\",\"muniName\":\"NW403 - Matlosana [Klerksdorp]\",\"muniCode\":\"NW403\"},{\"provinceName\":\"North West\",\"muniName\":\"NW404 - Maquassi Hills [Wolmaransstad]\",\"muniCode\":\"NW404\"}]\n    },\n    {\n        \"name\": \"Free State\",\n        \"abbreviation\": \"FS\",\n        \"munis\": [{\"provinceName\":\"Free State\",\"muniName\":\"FS161 - Letsemeng [Koffiefontein]\",\"muniCode\":\"FS161\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS162 - Kopanong [Trompsburg]\",\"muniCode\":\"FS162\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS163 - Mohokare [Zastron]\",\"muniCode\":\"FS163\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS164 - Naledi [Dewetsdorp]\",\"muniCode\":\"FS164\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS181 - Masilonyana [Theunissen]\",\"muniCode\":\"FS181\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS182 - Tokologo [Dealesville]\",\"muniCode\":\"FS182\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS183 - Tswelopele [Hoopstad]\",\"muniCode\":\"FS183\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS184 - Matjhabeng [Welkom]\",\"muniCode\":\"FS184\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS185 - Nala [Bothaville]\",\"muniCode\":\"FS185\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS191 - Setsoto [Senekal]\",\"muniCode\":\"FS191\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS192 - Dihlabeng [Bethlehem]\",\"muniCode\":\"FS192\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS193 - Nketoana [Reitz]\",\"muniCode\":\"FS193\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS194 - Maluti a Phofung [Qwa-Qwa]\",\"muniCode\":\"FS194\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS195 - Phumelela [Vrede]\",\"muniCode\":\"FS195\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS196 - Mantsopa [Ladybrand]\",\"muniCode\":\"FS196\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS201 - Moqhaka [Kroonstad]\",\"muniCode\":\"FS201\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS203 - Ngwathe [Parys]\",\"muniCode\":\"FS203\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS204 - Metsimaholo [Sasolburg]\",\"muniCode\":\"FS204\"},{\"provinceName\":\"Free State\",\"muniName\":\"FS205 - Mafube [Frankfort]\",\"muniCode\":\"FS205\"},{\"provinceName\":\"Free State\",\"muniName\":\"MAN - Mangaung [Bloemfontein]\",\"muniCode\":\"MAN\"}]\n    },\n    {\n        \"name\": \"Eastern Cape\",\n        \"abbreviation\": \"EC\",\n        \"munis\": [{\"provinceName\":\"Eastern Cape\",\"muniName\":\"BUF - Buffalo City [East London]\",\"muniCode\":\"BUF\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC101 - Camdeboo [Graaff-Reinet]\",\"muniCode\":\"EC101\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC102 - Blue Crane Route [Somerset East]\",\"muniCode\":\"EC102\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC103 - Ikwezi [Jansenville]\",\"muniCode\":\"EC103\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC104 - Makana [Grahamstown]\",\"muniCode\":\"EC104\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC105 - Ndlambe [Port Alfred]\",\"muniCode\":\"EC105\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC106 - Sundays River Valley [Kirkwood]\",\"muniCode\":\"EC106\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC107 - Baviaans [Willowmore]\",\"muniCode\":\"EC107\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC108 - Kouga [Humansdorp]\",\"muniCode\":\"EC108\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC109 - Kou-Kamma [Kareedouw]\",\"muniCode\":\"EC109\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC121 - Mbhashe [Idutywa]\",\"muniCode\":\"EC121\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC122 - Mnquma [Butterworth]\",\"muniCode\":\"EC122\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC123 - Great Kei [Komga]\",\"muniCode\":\"EC123\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC124 - Amahlathi [Stutterheim]\",\"muniCode\":\"EC124\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC126 - Ngqushwa [Peddie]\",\"muniCode\":\"EC126\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC127 - Nkonkobe [Alice]\",\"muniCode\":\"EC127\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC128 - Nxuba [Adelaide]\",\"muniCode\":\"EC128\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC131 - Inxuba Yethemba [Cradock]\",\"muniCode\":\"EC131\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC132 - Tsolwana [Tarkastad]\",\"muniCode\":\"EC132\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC133 - Inkwanca [Molteno]\",\"muniCode\":\"EC133\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC134 - Lukhanji [Queenstown]\",\"muniCode\":\"EC134\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC135 - Intsika Yethu [Cofimvaba]\",\"muniCode\":\"EC135\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC136 - Emalahleni [Lady Frere]\",\"muniCode\":\"EC136\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC137 - Engcobo [Engcobo]\",\"muniCode\":\"EC137\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC138 - Sakhisizwe [Elliot]\",\"muniCode\":\"EC138\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC141 - Elundini [Mount Fletcher]\",\"muniCode\":\"EC141\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC142 - Senqu [Lady Grey]\",\"muniCode\":\"EC142\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC143 - Maletswai [Aliwal North]\",\"muniCode\":\"EC143\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC144 - Gariep [Burgersdorp]\",\"muniCode\":\"EC144\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC153 - Ngquza Hill [Flagstaff]\",\"muniCode\":\"EC153\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC154 - Port St Johns [Port St Johns]\",\"muniCode\":\"EC154\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC155 - Nyandeni [Libode]\",\"muniCode\":\"EC155\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC156 - Mhlontlo [Qumbu]\",\"muniCode\":\"EC156\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC157 - King Sabata Dalindyebo [Umtata]\",\"muniCode\":\"EC157\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC441 - Matatiele [Matatiele]\",\"muniCode\":\"EC441\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC442 - Umzimvubu [Mount Ayliff]\",\"muniCode\":\"EC442\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC443 - Mbizana [Bizana]\",\"muniCode\":\"EC443\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"EC444 - Ntabankulu [Ntabankulu]\",\"muniCode\":\"EC444\"},{\"provinceName\":\"Eastern Cape\",\"muniName\":\"NMA - Nelson Mandela Bay [Port Elizabeth]\",\"muniCode\":\"NMA\"}]\n    },\n    {\n        \"name\": \"Northern Cape\",\n        \"abbreviation\": \"NC\",\n        \"munis\": [{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC061 - RICHTERSVELD [Port Nolloth]\",\"muniCode\":\"NC061\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC062 - NAMA KHOI [Springbok]\",\"muniCode\":\"NC062\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC064 - KAMIESBERG [Garies]\",\"muniCode\":\"NC064\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC065 - HANTAM [Calvinia]\",\"muniCode\":\"NC065\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC066 - KAROO HOOGLAND [Fraserburg]\",\"muniCode\":\"NC066\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC067 - KHI-MA [Pofadder]\",\"muniCode\":\"NC067\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC071 - UBUNTU [Victoria West]\",\"muniCode\":\"NC071\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC072 - UMSOBOMVU [Colesberg]\",\"muniCode\":\"NC072\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC073 - EMTHANJENI [De Aar]\",\"muniCode\":\"NC073\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC074 - KAREEBERG [Carnarvon]\",\"muniCode\":\"NC074\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC075 - RENOSTERBERG [Phillipstown]\",\"muniCode\":\"NC075\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC076 - THEMBELIHLE [Hopetown]\",\"muniCode\":\"NC076\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC077 - SIYATHEMBA [Prieska]\",\"muniCode\":\"NC077\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC078 - SIYANCUMA [Griekwastad]\",\"muniCode\":\"NC078\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC081 - MIER [Mier]\",\"muniCode\":\"NC081\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC082 - KAI !GARIB [Keimoes]\",\"muniCode\":\"NC082\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC083 - KHARA HAIS [Upington]\",\"muniCode\":\"NC083\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC084 - !KHEIS [Groblershoop]\",\"muniCode\":\"NC084\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC085 - TSANTSABANE [Postmasburg]\",\"muniCode\":\"NC085\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC086 - KGATELOPELE [Danielskuil]\",\"muniCode\":\"NC086\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC091 - Sol Plaatje [Kimberley]\",\"muniCode\":\"NC091\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC092 - Dikgatlong [Barkley West]\",\"muniCode\":\"NC092\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC093 - Magareng [Warrenton]\",\"muniCode\":\"NC093\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC094 - Phokwane [Hartswater]\",\"muniCode\":\"NC094\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC451 - Joe Morolong [Kgalagadi]\",\"muniCode\":\"NC451\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC452 - GA-SEGONYANA [Kuruman]\",\"muniCode\":\"NC452\"},{\"provinceName\":\"Northern Cape\",\"muniName\":\"NC453 - GAMAGARA [Kathu]\",\"muniCode\":\"NC453\"}]\n    },\n    {\n        \"name\": \"Western Cape\",\n        \"abbreviation\": \"WC\",\n        \"munis\": [{\"provinceName\":\"Western Cape\",\"muniName\":\"CPT - City of Cape Town [Cape Town]\",\"muniCode\":\"CPT\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC011 - Matzikama [Vredendal]\",\"muniCode\":\"WC011\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC012 - Cederberg [Citrusdal]\",\"muniCode\":\"WC012\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC013 - Bergrivier [Velddrif]\",\"muniCode\":\"WC013\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC014 - Saldanha Bay [West Coast Peninsula]\",\"muniCode\":\"WC014\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC015 - Swartland [Malmesbury]\",\"muniCode\":\"WC015\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC022 - Witzenberg [Ceres]\",\"muniCode\":\"WC022\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC023 - Drakenstein [Paarl]\",\"muniCode\":\"WC023\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC024 - Stellenbosch [Stellenbosch]\",\"muniCode\":\"WC024\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC025 - Breede Valley [Worcester]\",\"muniCode\":\"WC025\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC026 - Langeberg [Robertson]\",\"muniCode\":\"WC026\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC031 - Theewaterskloof [Caledon]\",\"muniCode\":\"WC031\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC032 - Overstrand [Greater Hermanus]\",\"muniCode\":\"WC032\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC033 - Cape Agulhas [Bredasdorp]\",\"muniCode\":\"WC033\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC034 - Swellendam [Barrydale/Swellendam ]\",\"muniCode\":\"WC034\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC041 - Kannaland [Ladismith]\",\"muniCode\":\"WC041\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC042 - Hessequa [Heidelberg/Riversdale]\",\"muniCode\":\"WC042\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC043 - Mossel Bay [Mossel Bay]\",\"muniCode\":\"WC043\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC044 - George [George]\",\"muniCode\":\"WC044\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC045 - Oudtshoorn [Oudtshoorn]\",\"muniCode\":\"WC045\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC047 - Bitou [Greater Plettenberg Bay]\",\"muniCode\":\"WC047\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC048 - Knysna [Knysna]\",\"muniCode\":\"WC048\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC051 - Laingsburg [Laingsburg]\",\"muniCode\":\"WC051\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC052 - Prince Albert [Prins Albert]\",\"muniCode\":\"WC052\"},{\"provinceName\":\"Western Cape\",\"muniName\":\"WC053 - Beaufort West [Beaufort West]\",\"muniCode\":\"WC053\"}]\n    }\n]\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            disableNavigation: false,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            vdNumber: \"\"\n        }\n\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.disableNavigation) {\n            this.state.disableNavigation = props.disableNavigation;\n        }\n        this.handlePreviewEvent = this.handlePreviewEvent.bind(this);\n    }\n\n    draw(container, props) {\n        console.log(\"drawing ...map\");\n        this.drawGraph(container, props);\n    }\n\n    componentDidMount() {\n        this.draw(this.getContainer(), this.state)\n        document.addEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(events.MAP_PREVIEW, this.handlePreviewEvent);\n    }\n\n    componentDidUpdate() {\n        this.draw(this.getContainer(), this.state)\n    }\n\n    handlePreviewEvent(event) {\n        var newState = event.detail;\n        this.setState(newState)\n    }\n\n    handleNavBarSelection(regionType, selectionData) {\n        var newState;\n        if (regionType == \"national\") {\n            newState = {regionType: regionType};\n            if (this.state.regionType == newState.regionType)\n                return;\n        } else if (regionType == \"province\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.name\n            };\n            if (this.state.regionType == newState.regionType && this.state.provinceName == newState.provinceName)\n                return;\n        } else if (regionType == \"municipality\") {\n            newState = {\n                regionType: regionType,\n                provinceName: selectionData.provinceName,\n                muniName: selectionData.muniName,\n                muniCode: selectionData.muniCode,\n            }; \n            if (this.state.regionType == newState.regionType \n                && this.state.provinceName == newState.provinceName\n                && this.state.newState == newState.muniName)\n                return;\n        }\n\n        var event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n        document.dispatchEvent(event);\n        this.setState(newState);\n    }\n\n    getRegionName() {\n        if (this.state.regionType == \"national\") {\n          return \"South Africa\";\n        }\n        if (this.state.regionType == \"province\") {\n          return this.state.provinceName;\n        }\n        if (this.state.regionType == \"municipality\") {\n          return this.state.muniName;\n        }\n        if (this.state.regionType == \"municipality-vd\") {\n          return this.state.muniName + \"-\" + this.state.vdNumber;\n        }\n      }\n\n    getContainer() {\n        return d3.select(this.refs.vizcontainer)\n    }\n\n    getLoadingSpinner() {\n        return d3.select(this.refs.loading)\n    }\n      \n    render () {\n        const theme = {\n            selectionColor: \"#C51162\"\n        };\n        var {\n            disableNavigation\n        } = this.state;\n        return (\n            <div className=\"map-container\">\n                {/* {\n                    !disableNavigation &&\n                        <div className={className(\"map-navbar\")}>\n                            <SideNav\n                                defaultSelectedPath=\"1\"\n                                theme={theme}\n                                onItemSelection={this.onItemSelection}\n                                className={className(\"map-navbar\")}\n                            >\n                                <Nav id=\"navbar-national\" onClick={this.handleNavBarSelection.bind(this, \"national\")}>\n                                    National\n                                </Nav>\n                                {\n                                    provincesData.map(province => {\n                                        return <Nav \n                                            key={province.abbreviation} \n                                            id={\"navbar-province-\"+province.abbreviation}\n                                            onClick={this.handleNavBarSelection.bind(this, \"province\", province)}>\n                                                { province.name }\n                                                {\n                                                    province.munis.map(muni => {\n                                                        return <Nav \n                                                            key={muni.muniCode} \n                                                            id={\"navbar-muni-\"+muni.muniCode}\n                                                            onClick={this.handleNavBarSelection.bind(this, \"municipality\", muni)}\n                                                            >\n                                                                {muni.muniName.split(\"-\")[1].split(\"[\")[0] }\n                                                            </Nav>\n                                                    })\n                                                }\n                                        </Nav>\n                                    })\n                                }\n                            </SideNav>\n                        </div> \n                } */}\n\n                {this.getRegionName()}\n\n                <div className=\"loading-spinner\" ref=\"loading\">\n                    <ReactLoading type={\"spin\"} color={\"#777\"} height={100} width={100} />\n                </div>\n                <div ref=\"vizcontainer\" style={{display: 'hidden'}} className=\"map\"></div>\n            </div>\n        )\n    }\n\n    drawGraph(container, props) {\n        var self = this;\n        var nationalMapFile = \"province_lo-res.geojson\";\n\n        function getRegionFileName() {\n            function getProvinceFileName(provinceName) {\n                var provinceNameToFileMap = {\n                    \"Limpopo\": \"lim_lo-res.geojson\",\n                    \"Mpumalanga\": \"mp_lo-res.geojson\",\n                    \"Gauteng\": \"gt_lo-res.geojson\",\n                    \"KwaZulu-Natal\": \"kzn_lo-res.geojson\",\n                    \"North West\": \"nw_lo-res.geojson\",\n                    \"Free State\": \"fs_lo-res.geojson\",\n                    \"Eastern Cape\": \"ec_lo-res.geojson\",\n                    \"Northern Cape\": \"nc_lo-res.geojson\",\n                    \"Western Cape\": \"wc_lo-res.geojson\",\n                }\n                return provinceNameToFileMap[provinceName];\n            }\n            switch(self.state.regionType) {\n                case \"national\":\n                    return nationalMapFile;\n                case \"province\":\n                    return getProvinceFileName(self.state.provinceName);\n                case \"municipality\":\n                    return self.state.muniCode + \".topojson\";\n                default:\n                    return null;\n            }\n        }\n\n        var fullRouteGeoJsonFile = config.DOMAIN + \"/mapdata/\" + getRegionFileName();\n\n        self.getLoadingSpinner()\n            .style(\"display\", \"block\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n\n        var tooltipDiv;\n        if (document.getElementsByClassName(\"tooltip\")[0]) {\n          tooltipDiv = d3.select(\".tooltip\");\n        } else {\n          tooltipDiv = d3.select(\"body\").append(\"div\")\t\n            .attr(\"class\", className(\"tooltip\"))\t\t\t\t\n            .style(\"opacity\", 0);\n        }\n\n        console.log(\"process.env\", process.env)\n\n        var w = 900;\n        var h = 800;\n        container.selectAll(\"svg\").remove();\n        var svg = container.append(\"svg\")\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\").style(\"background-color\",\"#ffffff\")\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h)\n            .classed(\"svg-content\", true);\n\n        var geoJsonLoader = d3.json(fullRouteGeoJsonFile);\n        var mainPartiesDataLoader = getMainParties(props);\n        var dataLoaders = [geoJsonLoader, mainPartiesDataLoader];\n\n        if (!partyColorsData) {\n          var partyColorsLoader = getPartyColors();\n          dataLoaders.push(partyColorsLoader);\n        }\n\n        Promise.all(dataLoaders).then(function(values){ \n            var geoJsonData = values[0];\n            var locationToMainParty = parseMainPartyData(values[1], props);\n            partyColorsData = partyColorsData || values[2];  \n\n            var partyColorByName = {};\n            if (partyColorsData && partyColorsData[\"data\"][\"allParties\"][\"edges\"]) {\n              partyColorsData[\"data\"][\"allParties\"][\"edges\"].forEach(edge => {\n                partyColorByName[edge.node.name] = edge.node.colour;\n              })\n            }            \n\n            function getFillColorFromPartyName(partyName) {\n              if (!partyName)\n                return regionColor;\n              return partyColorByName[partyName.split(\"/\")[0]] || regionColor;\n            }\n\n            function getMainPartyColorFromRegion(d, i) {\n                var partyName;\n                var regionType = self.state.regionType;\n                if (regionType === \"national\") {\n                    var provinceName = d.properties.SPROVINCE;\n                    partyName = locationToMainParty[provinceName];\n                    console.log(\"mainParty\", partyName, provinceName);\n                    console.log(\"partyColor\", partyColor);\n                } else if (regionType === \"province\") {\n                    function getMunicipalityCode(properties) {\n                        return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                    }\n                    var muniCode = getMunicipalityCode(d.properties);\n                    partyName = locationToMainParty[muniCode];\n                } else {// \"municipality\"\n                    function getMunicipalityVdNumber(properties) {\n                        return properties.PKLVDNUMBE;\n                    }\n                    var vdNumber = getMunicipalityVdNumber(d.properties);\n                    partyName = locationToMainParty[vdNumber];\n                }\n                var partyColor = getFillColorFromPartyName(partyName);\n                return partyColor;\n            }\n\n            var getJsonDataFeatures;\n            if (fullRouteGeoJsonFile.indexOf(\".topojson\") !== -1) {//topojson is used for only munis\n                geoJsonData = topojson.feature(geoJsonData, geoJsonData.objects[self.state.muniCode]);\n            }\n\n            getJsonDataFeatures = geoJsonData.features;\n\n            var projection = d3.geoMercator().fitSize([w, h], geoJsonData);\n            var path = d3.geoPath().projection(projection);\n\n            // fill region with regionColor\n            svg.selectAll(`.${className(\"region\")}`)\n                .data(getJsonDataFeatures)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", className(\"region\"))\n                .attr(\"stroke\", regionBorderColor)\n                .attr(\"fill\", getMainPartyColorFromRegion)\n                .attr(\"id\", function(d, i) {\n                    return `region-${i}`;\n                })\n                .attr(\"d\", path);\n            \n            // if (self.state.regionType == \"province\") {\n            //    console.log(\"fetch muni Names and codes\", JSON.stringify(getJsonDataFeatures.map(d => {\n            //         function getMunicipalityCode(properties) {\n            //             return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n            //         }\n            //         var newState = {\n            //             provinceName: self.state.provinceName,\n            //             muniName: d.properties.smunicipal,\n            //             muniCode: getMunicipalityCode(d.properties),\n            //         }\n            //         return newState;\n            //     })));\n            // }\n            \n            if (self.state.regionType !== \"municipality\") {\n                svg.selectAll(\".place-label\")\n                    .data(getJsonDataFeatures)\n                .enter().append(\"text\")\n                    .attr(\"class\", \"place-label\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"transform\", function(d) { \n                        var center, projectionCenter;\n                        if (d.geometry.type === \"Polygon\") {\n                            center = polylabel(d.geometry.coordinates);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 12;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        } else { //\"MultiPolygon\"\n                            center = polylabel(d.geometry.coordinates[0]);\n                            projectionCenter = projection(center);\n                            projectionCenter[1] -= 5;\n                            return \"translate(\" + projectionCenter + \")\"; \n                        }\n                    })\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function(d) { \n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    })\n            }\n\n            if (self.state.regionType !== \"municipality\") {\n                var labelElements = document.getElementsByClassName(\"place-label\");\n\n                var regions = {};\n                var overlapCnt = {};\n                var i;\n\n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    regions[i] = labelElements[i].getBoundingClientRect();\n                }\n    \n                for (i = 0; i < getJsonDataFeatures.length; i ++) {\n                    for (var j = 0; j < i; j ++) {\n                        var rect1 = regions[i];\n                        var rect2 = regions[j];\n                        var overlap = !(rect1.right < rect2.left || \n                            rect1.left > rect2.right || \n                            rect1.bottom < rect2.top || \n                            rect1.top > rect2.bottom);\n                        if (overlap) {\n                            overlapCnt[i] = overlapCnt[i]? (overlapCnt[i] + 1): 1;\n                        }\n                    }\n                    if (overlapCnt[i] > 2) {\n                        labelElements[i].setAttribute(\"opacity\", 0)\n                    } else if (overlapCnt[i] > 0){\n                        labelElements[i].innerHTML = labelElements[i].innerHTML.slice(0, 3) + \"...\";\n                    } else {\n    \n                    }\n                }\n            }\n\n            //hidden area for catching events\n            svg.selectAll(\".eventLayer\")\n                .data(getJsonDataFeatures)\n            .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .attr(\"class\", \"eventLayer\")\n                .attr(\"id\", function(d, i) {\n                    return `eventLayer-${i}`;\n                })\n                .attr(\"fill\", \"transparent\")\n                .on(\"mouseover\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 3)\n                        .style(\"fill-opacity\", 0.8);\n                })\n                .on(\"mousemove\", function(d) {\t\n                    if (self.state.regionType === \"municipality\") return;\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 1);\n                    function regionName() {\n                        if (self.state.regionType === \"national\") {\n                            return d.properties.SPROVINCE;\n                        } else if (self.state.regionType === \"province\") {\n                            return d.properties.smunicipal.split(\"-\")[1].split(\"[\")[0]; \n                        } else {//municipality\n                            return d.properties.SMUNICIPAL.split(\"-\")[1].split(\"[\")[0]; \n                        }\n                    }\n                    tooltipDiv.html(regionName())\t\n                        .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n                })\n                .on(\"mouseout\", function(d, i) {\n                    d3.select(`#region-${i}`)\n                        .attr(\"stroke-width\", 1)\n                        .style(\"fill-opacity\", 1);\n                    \n                    if (self.state.regionType === \"municipality\") return;\n\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                })\n                .on(\"click\", function(d, i) {\n                    if (self.state.disableNavigation) {\n                        return;\n                    }\n                    tooltipDiv.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n                    \n                    var regionType = self.state.regionType;\n                    var newState, event;\n                    if (regionType === \"national\") {\n                        newState = {\n                            regionType: \"province\",\n                            provinceName: d.properties.SPROVINCE\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    } else if (regionType === \"province\") {\n                        function getMunicipalityCode(properties) {\n                            return properties.code || properties.smunicipal.split(\"-\")[0].replace(/\\s/g, \"\");\n                        }\n                        newState = {\n                            regionType: \"municipality\", \n                            provinceName: self.state.provinceName,\n                            muniName: d.properties.smunicipal,\n                            muniCode: getMunicipalityCode(d.properties),\n                        }\n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n\n                        self.setState(newState);\n                    } else { // \"municipality\"\n                        function getMunicipalityVdNumber(properties) {\n                            return properties.PKLVDNUMBE;\n                        }\n                        var newState = {\n                            regionType: \"municipality-vd\", \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniCode: self.state.muniCode,\n                            vdNumber: getMunicipalityVdNumber(d.properties),\n                        }\n                        var event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                    }\n                })\n            if (!self.state.disableNavigation) {\n                var fo = svg.append(\"foreignObject\")\n                    .attr(\"x\", w - 100)\n                    .attr(\"y\", 10)\n                    .attr(\"width\", 100)\n                    .attr(\"height\", 30)\n                    .attr(\"class\", \"map-controls\")\n                fo.append(\"xhtml:div\")\n                    .append(\"button\")\n                    .attr(\"class\", \"go-back\")\n                    .html(\"go back\")\n                    .on(\"click\", function() {\n                        var regionType = self.state.regionType;\n                        var newState, event;\n    \n                        var newState = {\n                            regionType: self.state.regionType, \n                            provinceName: self.state.provinceName,\n                            muniName: self.state.muniName,\n                            muniImuniCodeD: self.state.muniCode,\n                            vdNumber: self.state.vdNumber,\n                        }\n                        \n                        if (regionType === \"province\") {\n                            newState.regionType = \"national\";\n                        } else if (regionType === \"municipality\") {\n                            newState.regionType = \"province\";\n                        }\n    \n                        event = new CustomEvent(events.REGION_CHANGE, { detail: newState });\n                        document.dispatchEvent(event);\n                        self.setState(newState);\n                    });\n            }\n            self.getLoadingSpinner()\n                .style(\"display\", \"none\");\n        })\n\n        var redrawChart = function() {\n\n        };\n\n        window.addEventListener(\"resize\", redrawChart, 200);\n    }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport bootstrapStyles from \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./mapEmbed.css\";\nimport config from \"../../config\";\nimport events from \"../../events\";\n\nfunction className(originClassName) {\n    return bootstrapStyles[originClassName] || styles[originClassName] || originClassName;\n}\n\nclass MapEmbed extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            elementId: \"root\",\n            disableNavigation: false, //checkbox\n            regionType: \"province\",\n            provinceName: \"Western Cape\",\n            muniName: \"\",\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate() {\n    }\n\n    onRegionTypeChange(e) {\n        var newState = {regionType: e.target.value};\n        this.setState(newState);\n    }\n\n    onPreview(e) {\n        var event = new CustomEvent(events.MAP_PREVIEW, { detail: this.state });\n        document.dispatchEvent(event);\n    }\n      \n    render () {\n        var DOMAIN = config.DOMAIN;\n        var {\n            elementId,            \n            disableNavigation,\n            regionType,\n            provinceName,\n            muniName,\n        } = this.state;\n        return (\n          <div>\n            <h3> Map Embed Script Generation </h3>\n            <div className={className(\"form-group\")}>\n                <label>Element ID </label>\n                <input \n                    type=\"text\" \n                    className={className(\"form-control\")} \n                    placeholder=\"chart-container\"\n                    onChange={e => this.setState({elementId: e.target.value})}\n                    />\n            </div>\n            <div className={className(\"form-group\")}>\n                  <label>Region Type </label>\n                  <select className={className(\"form-control\")} \n                     value={regionType}\n                     onChange={this.onRegionTypeChange.bind(this)}>\n                        <option value=\"national\">national</option>\n                        <option value=\"province\">province</option>\n                        <option value=\"municipality\">municipality</option>\n                  </select>\n              </div>\n              {\n                  (regionType != \"national\") && \n                    <div className={className(\"form-group\")}>\n                        <label>Province Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"Western Cape\"\n                            value={provinceName}\n                            onChange={e => this.setState({provinceName: e.target.value})} \n                            />\n                    </div>\n              }\n              {\n                  (regionType == \"municipality\") &&\n                    <div className={className(\"form-group\")}>\n                        <label>Municipality Name</label>\n                        <input \n                            type=\"text\" \n                            className={className(\"form-control\")} \n                            placeholder=\"City of Cape Town\"\n                            value={muniName}\n                            onChange={e => this.setState({muniName: e.target.value})} \n                            />\n                    </div>\n              }\n\n              <div className={className(\"form-check\")}>\n                \n                <label className={className(\"form-check-label\")}>\n                    <input \n                        type=\"checkbox\" \n                        className={className(\"form-check-input\")} \n                        value={disableNavigation}\n                        onChange={e => this.setState({disableNavigation: e.target.checked})} \n                        />\n                    &nbsp;&nbsp;Disable Navigation\n                </label>\n              </div>\n              <div className={className(\"form-group\")}>\n                <button type=\"button\" onClick={this.onPreview.bind(this)} className={className(\"btn\") + \" \" + className(\"btn-primary\") }>Preview</button>\n              </div>\n            <div className={className(\"form-group\")}>\n                <label>Embed Code</label>\n                <div className={className(\"embedcode\")}>\n                    <span>{`<script src=\"${DOMAIN}/embed/embed.js\"></script>\n                    <script>\n                        showMap(document.getElementById(\"${elementId}\"),{\n                            disableNavigation: ${disableNavigation},\n                            regionType: \"${regionType}\",\n                            provinceName: \"${provinceName}\",\n                            muniName: \"${muniName}\",\n                        });</script>`.replace(/(\\r\\n|\\n|\\r)/gm, \"\")}\n                    </span>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\nexport default MapEmbed;\n\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BarChart,\n  BarChartEmbed,\n  Map,\n  MapEmbed\n} from \"./components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"leftContainer\">\n          <BarChart regionName=\"South Africa\" regionType=\"national\" numParties={3} />\n          <Map regionType=\"province\" provinceName=\"Western Cape\" />\n        </div>\n        <div className=\"rightContainer\">\n          <div className=\"barchartEmbed\">\n            <BarChartEmbed />\n          </div>\n          <div className=\"mapEmbed\">\n            <MapEmbed />\n          </div>\n        </div>\n        <div id=\"sales-data\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport \"./barchartMap.css\";\nimport BarChart from '../BarChart/barchart';\nimport Map from '../Map/map';\n\nclass BarchartWithNavMap extends Component {    \n    constructor(props) {\n        super(props);\n        var self = this;\n        this.state = {\n            numParties: 5,\n            eventDescription: \"2014 National Election\",\n            regionType: \"national\",\n            provinceName: \"\",\n            muniName: \"\",\n            muniCode: \"\",\n            vdNumber: \"\",\n        }\n        if (props.numParties) {\n            this.state.numParties = props.numParties;\n        }\n        if (props.regionType) {\n            this.state.regionType = props.regionType;\n        }\n        if (props.provinceName) {\n            this.state.provinceName = props.provinceName;\n        }\n        if (props.muniName) {\n            this.state.muniName = props.muniName;\n        }\n        if (props.muniCode) {\n            this.state.muniCode = props.muniCode;\n        }\n        if (props.vdNumber) {\n            this.state.vdNumber = props.vdNumber;\n        }\n        if (props.width && props.height) {\n            this.state.width = props.width;\n            this.state.height = props.height;\n        }\n        this.onResize = this.onResize.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.onResize, 200);\n    }\n  \n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onResize);\n    }\n\n    onResize() {\n        \n    };\n\n    render() {\n        return (\n        <div>\n            <div className=\"leftContainer\">\n            <BarChart {...this.state} />\n            </div>\n            <div className=\"rightContainer\">\n            <Map {...this.state}/>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BarchartWithNavMap;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}